
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ActoresScalarFieldEnum = {
  id_actor: 'id_actor',
  nombre_actor: 'nombre_actor',
  apellido_actor: 'apellido_actor',
  fecha_nacimiento: 'fecha_nacimiento',
  biografia: 'biografia'
};

exports.Prisma.BoletosScalarFieldEnum = {
  id_boleto: 'id_boleto',
  id_funcion: 'id_funcion',
  id_usuario: 'id_usuario',
  asiento: 'asiento',
  estado: 'estado'
};

exports.Prisma.Candy_barScalarFieldEnum = {
  id_producto: 'id_producto',
  nombre_producto: 'nombre_producto',
  descripcion: 'descripcion',
  precio: 'precio',
  imagen_url: 'imagen_url',
  es_promocion: 'es_promocion',
  precio_promocional: 'precio_promocional',
  promo_fecha_inicio: 'promo_fecha_inicio',
  promo_fecha_fin: 'promo_fecha_fin',
  categoria: 'categoria',
  stock: 'stock'
};

exports.Prisma.CartelerasScalarFieldEnum = {
  id_cartelera: 'id_cartelera',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  descripcion: 'descripcion'
};

exports.Prisma.CinesScalarFieldEnum = {
  id_cine: 'id_cine',
  nombre_cine: 'nombre_cine',
  direccion: 'direccion',
  telefono: 'telefono',
  facebook_url: 'facebook_url',
  instagram_url: 'instagram_url',
  tiktok_url: 'tiktok_url',
  email: 'email',
  ubicacion_url: 'ubicacion_url'
};

exports.Prisma.ClasificacionesScalarFieldEnum = {
  id_clasificacion: 'id_clasificacion',
  codigo: 'codigo',
  descripcion: 'descripcion'
};

exports.Prisma.DirectoresScalarFieldEnum = {
  id_director: 'id_director',
  nombre_director: 'nombre_director',
  apellido_director: 'apellido_director',
  biografia: 'biografia'
};

exports.Prisma.EmpleadosScalarFieldEnum = {
  id_empleado: 'id_empleado',
  nombre: 'nombre',
  apellido: 'apellido',
  ci: 'ci',
  correo: 'correo',
  telefono: 'telefono',
  fecha_contrato: 'fecha_contrato',
  id_cine: 'id_cine',
  id_rol: 'id_rol',
  usuario_sistema: 'usuario_sistema'
};

exports.Prisma.FuncionesScalarFieldEnum = {
  id_funcion: 'id_funcion',
  id_cartelera: 'id_cartelera',
  id_sala: 'id_sala',
  id_pelicula: 'id_pelicula',
  fecha_hora_inicio: 'fecha_hora_inicio',
  fecha_hora_fin: 'fecha_hora_fin',
  precio_boleto: 'precio_boleto'
};

exports.Prisma.GenerosScalarFieldEnum = {
  id_genero: 'id_genero',
  nombre_genero: 'nombre_genero'
};

exports.Prisma.Historial_reproduccionScalarFieldEnum = {
  id_usuario: 'id_usuario',
  id_pelicula: 'id_pelicula',
  fecha_visualizacion: 'fecha_visualizacion',
  progreso_visto_porcentaje: 'progreso_visto_porcentaje'
};

exports.Prisma.Imagenes_extraScalarFieldEnum = {
  id_imagen_extra: 'id_imagen_extra',
  tipo: 'tipo',
  nombre: 'nombre',
  url: 'url',
  descripcion: 'descripcion'
};

exports.Prisma.Intentos_loginScalarFieldEnum = {
  id: 'id',
  id_usuario: 'id_usuario',
  exito: 'exito',
  ip_origen: 'ip_origen',
  fecha: 'fecha'
};

exports.Prisma.Logs_actividadScalarFieldEnum = {
  id_log: 'id_log',
  id_usuario: 'id_usuario',
  accion: 'accion',
  fecha_hora: 'fecha_hora',
  detalle: 'detalle',
  id_empleado: 'id_empleado',
  id_boleto: 'id_boleto'
};

exports.Prisma.Metodos_pagoScalarFieldEnum = {
  id_metodo: 'id_metodo',
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.NotificacionesScalarFieldEnum = {
  id_notificacion: 'id_notificacion',
  id_usuario: 'id_usuario',
  titulo: 'titulo',
  mensaje: 'mensaje',
  fecha_envio: 'fecha_envio',
  leido: 'leido',
  id_empleado: 'id_empleado'
};

exports.Prisma.PagosScalarFieldEnum = {
  id_pago: 'id_pago',
  id_usuario: 'id_usuario',
  monto: 'monto',
  id_metodo: 'id_metodo',
  fecha_pago: 'fecha_pago',
  estado: 'estado'
};

exports.Prisma.PeliculasScalarFieldEnum = {
  id_pelicula: 'id_pelicula',
  titulo: 'titulo',
  sinopsis: 'sinopsis',
  duracion: 'duracion',
  fecha_lanzamiento: 'fecha_lanzamiento',
  id_productora: 'id_productora',
  tipo_contenido: 'tipo_contenido',
  imagen_portada: 'imagen_portada',
  url_video: 'url_video',
  id_clasificacion: 'id_clasificacion',
  calificacion_promedio: 'calificacion_promedio'
};

exports.Prisma.Peliculas_directoresScalarFieldEnum = {
  id_pelicula: 'id_pelicula',
  id_director: 'id_director'
};

exports.Prisma.Peliculas_generosScalarFieldEnum = {
  id_pelicula: 'id_pelicula',
  id_genero: 'id_genero'
};

exports.Prisma.PlanesScalarFieldEnum = {
  id_plan: 'id_plan',
  nombre: 'nombre',
  precio: 'precio',
  duracion_dias: 'duracion_dias',
  descripcion: 'descripcion'
};

exports.Prisma.ProductorasScalarFieldEnum = {
  id_productora: 'id_productora',
  nombre_productora: 'nombre_productora',
  pais_origen: 'pais_origen'
};

exports.Prisma.PromocionesScalarFieldEnum = {
  id_promocion: 'id_promocion',
  titulo: 'titulo',
  descripcion: 'descripcion',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  descuento: 'descuento'
};

exports.Prisma.RepartoScalarFieldEnum = {
  id_reparto: 'id_reparto',
  id_pelicula: 'id_pelicula',
  id_actor: 'id_actor',
  rol: 'rol'
};

exports.Prisma.Reportes_usuariosScalarFieldEnum = {
  id_reporte: 'id_reporte',
  id_usuario: 'id_usuario',
  tipo_reporte: 'tipo_reporte',
  descripcion: 'descripcion',
  fecha_reporte: 'fecha_reporte',
  estado: 'estado'
};

exports.Prisma.Roles_empleadosScalarFieldEnum = {
  id_rol: 'id_rol',
  nombre_rol: 'nombre_rol'
};

exports.Prisma.SalasScalarFieldEnum = {
  id_sala: 'id_sala',
  id_cine: 'id_cine',
  nombre_sala: 'nombre_sala',
  capacidad: 'capacidad'
};

exports.Prisma.SuscripcionesScalarFieldEnum = {
  id_suscripcion: 'id_suscripcion',
  id_usuario: 'id_usuario',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  estado: 'estado',
  id_plan: 'id_plan'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id_usuario: 'id_usuario',
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  rol: 'rol',
  fecha_registro: 'fecha_registro',
  bloqueado_hasta: 'bloqueado_hasta',
  foto_perfil: 'foto_perfil',
  verificado: 'verificado'
};

exports.Prisma.ValoracionesScalarFieldEnum = {
  id_valoracion: 'id_valoracion',
  id_usuario: 'id_usuario',
  id_pelicula: 'id_pelicula',
  puntaje: 'puntaje',
  comentario: 'comentario',
  fecha_valoracion: 'fecha_valoracion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.actoresOrderByRelevanceFieldEnum = {
  nombre_actor: 'nombre_actor',
  apellido_actor: 'apellido_actor',
  biografia: 'biografia'
};

exports.Prisma.boletosOrderByRelevanceFieldEnum = {
  asiento: 'asiento'
};

exports.Prisma.candy_barOrderByRelevanceFieldEnum = {
  nombre_producto: 'nombre_producto',
  descripcion: 'descripcion',
  imagen_url: 'imagen_url',
  categoria: 'categoria'
};

exports.Prisma.cartelerasOrderByRelevanceFieldEnum = {
  descripcion: 'descripcion'
};

exports.Prisma.cinesOrderByRelevanceFieldEnum = {
  nombre_cine: 'nombre_cine',
  direccion: 'direccion',
  telefono: 'telefono',
  facebook_url: 'facebook_url',
  instagram_url: 'instagram_url',
  tiktok_url: 'tiktok_url',
  email: 'email',
  ubicacion_url: 'ubicacion_url'
};

exports.Prisma.clasificacionesOrderByRelevanceFieldEnum = {
  codigo: 'codigo',
  descripcion: 'descripcion'
};

exports.Prisma.directoresOrderByRelevanceFieldEnum = {
  nombre_director: 'nombre_director',
  apellido_director: 'apellido_director',
  biografia: 'biografia'
};

exports.Prisma.empleadosOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  apellido: 'apellido',
  ci: 'ci',
  correo: 'correo',
  telefono: 'telefono'
};

exports.Prisma.generosOrderByRelevanceFieldEnum = {
  nombre_genero: 'nombre_genero'
};

exports.Prisma.imagenes_extraOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  url: 'url',
  descripcion: 'descripcion'
};

exports.Prisma.intentos_loginOrderByRelevanceFieldEnum = {
  ip_origen: 'ip_origen'
};

exports.Prisma.logs_actividadOrderByRelevanceFieldEnum = {
  accion: 'accion',
  detalle: 'detalle'
};

exports.Prisma.metodos_pagoOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.notificacionesOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  mensaje: 'mensaje'
};

exports.Prisma.peliculasOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  sinopsis: 'sinopsis',
  imagen_portada: 'imagen_portada',
  url_video: 'url_video'
};

exports.Prisma.planesOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.productorasOrderByRelevanceFieldEnum = {
  nombre_productora: 'nombre_productora',
  pais_origen: 'pais_origen'
};

exports.Prisma.promocionesOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  descripcion: 'descripcion'
};

exports.Prisma.repartoOrderByRelevanceFieldEnum = {
  rol: 'rol'
};

exports.Prisma.reportes_usuariosOrderByRelevanceFieldEnum = {
  descripcion: 'descripcion'
};

exports.Prisma.roles_empleadosOrderByRelevanceFieldEnum = {
  nombre_rol: 'nombre_rol'
};

exports.Prisma.salasOrderByRelevanceFieldEnum = {
  nombre_sala: 'nombre_sala'
};

exports.Prisma.usuariosOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  foto_perfil: 'foto_perfil'
};

exports.Prisma.valoracionesOrderByRelevanceFieldEnum = {
  comentario: 'comentario'
};
exports.boletos_estado = exports.$Enums.boletos_estado = {
  vendido: 'vendido',
  reservado: 'reservado',
  cancelado: 'cancelado'
};

exports.imagenes_extra_tipo = exports.$Enums.imagenes_extra_tipo = {
  icono: 'icono',
  banner: 'banner',
  otro: 'otro'
};

exports.pagos_estado = exports.$Enums.pagos_estado = {
  completado: 'completado',
  pendiente: 'pendiente',
  fallido: 'fallido'
};

exports.peliculas_tipo_contenido = exports.$Enums.peliculas_tipo_contenido = {
  cine: 'cine',
  streaming: 'streaming',
  ambos: 'ambos'
};

exports.reportes_usuarios_tipo_reporte = exports.$Enums.reportes_usuarios_tipo_reporte = {
  error: 'error',
  sugerencia: 'sugerencia',
  contenido: 'contenido',
  otro: 'otro'
};

exports.reportes_usuarios_estado = exports.$Enums.reportes_usuarios_estado = {
  pendiente: 'pendiente',
  en_revisi_n: 'en_revisi_n',
  resuelto: 'resuelto'
};

exports.suscripciones_estado = exports.$Enums.suscripciones_estado = {
  activo: 'activo',
  inactivo: 'inactivo',
  cancelado: 'cancelado'
};

exports.usuarios_rol = exports.$Enums.usuarios_rol = {
  cliente: 'cliente',
  administrador: 'administrador'
};

exports.Prisma.ModelName = {
  actores: 'actores',
  boletos: 'boletos',
  candy_bar: 'candy_bar',
  carteleras: 'carteleras',
  cines: 'cines',
  clasificaciones: 'clasificaciones',
  directores: 'directores',
  empleados: 'empleados',
  funciones: 'funciones',
  generos: 'generos',
  historial_reproduccion: 'historial_reproduccion',
  imagenes_extra: 'imagenes_extra',
  intentos_login: 'intentos_login',
  logs_actividad: 'logs_actividad',
  metodos_pago: 'metodos_pago',
  notificaciones: 'notificaciones',
  pagos: 'pagos',
  peliculas: 'peliculas',
  peliculas_directores: 'peliculas_directores',
  peliculas_generos: 'peliculas_generos',
  planes: 'planes',
  productoras: 'productoras',
  promociones: 'promociones',
  reparto: 'reparto',
  reportes_usuarios: 'reportes_usuarios',
  roles_empleados: 'roles_empleados',
  salas: 'salas',
  suscripciones: 'suscripciones',
  usuarios: 'usuarios',
  valoraciones: 'valoraciones'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
