
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model actores
 * 
 */
export type actores = $Result.DefaultSelection<Prisma.$actoresPayload>
/**
 * Model boletos
 * 
 */
export type boletos = $Result.DefaultSelection<Prisma.$boletosPayload>
/**
 * Model candy_bar
 * 
 */
export type candy_bar = $Result.DefaultSelection<Prisma.$candy_barPayload>
/**
 * Model carteleras
 * 
 */
export type carteleras = $Result.DefaultSelection<Prisma.$cartelerasPayload>
/**
 * Model cines
 * 
 */
export type cines = $Result.DefaultSelection<Prisma.$cinesPayload>
/**
 * Model clasificaciones
 * 
 */
export type clasificaciones = $Result.DefaultSelection<Prisma.$clasificacionesPayload>
/**
 * Model directores
 * 
 */
export type directores = $Result.DefaultSelection<Prisma.$directoresPayload>
/**
 * Model empleados
 * 
 */
export type empleados = $Result.DefaultSelection<Prisma.$empleadosPayload>
/**
 * Model funciones
 * 
 */
export type funciones = $Result.DefaultSelection<Prisma.$funcionesPayload>
/**
 * Model generos
 * 
 */
export type generos = $Result.DefaultSelection<Prisma.$generosPayload>
/**
 * Model historial_reproduccion
 * 
 */
export type historial_reproduccion = $Result.DefaultSelection<Prisma.$historial_reproduccionPayload>
/**
 * Model imagenes_extra
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type imagenes_extra = $Result.DefaultSelection<Prisma.$imagenes_extraPayload>
/**
 * Model intentos_login
 * 
 */
export type intentos_login = $Result.DefaultSelection<Prisma.$intentos_loginPayload>
/**
 * Model logs_actividad
 * 
 */
export type logs_actividad = $Result.DefaultSelection<Prisma.$logs_actividadPayload>
/**
 * Model metodos_pago
 * 
 */
export type metodos_pago = $Result.DefaultSelection<Prisma.$metodos_pagoPayload>
/**
 * Model notificaciones
 * 
 */
export type notificaciones = $Result.DefaultSelection<Prisma.$notificacionesPayload>
/**
 * Model pagos
 * 
 */
export type pagos = $Result.DefaultSelection<Prisma.$pagosPayload>
/**
 * Model peliculas
 * 
 */
export type peliculas = $Result.DefaultSelection<Prisma.$peliculasPayload>
/**
 * Model peliculas_directores
 * 
 */
export type peliculas_directores = $Result.DefaultSelection<Prisma.$peliculas_directoresPayload>
/**
 * Model peliculas_generos
 * 
 */
export type peliculas_generos = $Result.DefaultSelection<Prisma.$peliculas_generosPayload>
/**
 * Model planes
 * 
 */
export type planes = $Result.DefaultSelection<Prisma.$planesPayload>
/**
 * Model productoras
 * 
 */
export type productoras = $Result.DefaultSelection<Prisma.$productorasPayload>
/**
 * Model promociones
 * 
 */
export type promociones = $Result.DefaultSelection<Prisma.$promocionesPayload>
/**
 * Model reparto
 * 
 */
export type reparto = $Result.DefaultSelection<Prisma.$repartoPayload>
/**
 * Model reportes_usuarios
 * 
 */
export type reportes_usuarios = $Result.DefaultSelection<Prisma.$reportes_usuariosPayload>
/**
 * Model roles_empleados
 * 
 */
export type roles_empleados = $Result.DefaultSelection<Prisma.$roles_empleadosPayload>
/**
 * Model salas
 * 
 */
export type salas = $Result.DefaultSelection<Prisma.$salasPayload>
/**
 * Model suscripciones
 * 
 */
export type suscripciones = $Result.DefaultSelection<Prisma.$suscripcionesPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>
/**
 * Model valoraciones
 * 
 */
export type valoraciones = $Result.DefaultSelection<Prisma.$valoracionesPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const imagenes_extra_tipo: {
  icono: 'icono',
  banner: 'banner',
  otro: 'otro'
};

export type imagenes_extra_tipo = (typeof imagenes_extra_tipo)[keyof typeof imagenes_extra_tipo]


export const reportes_usuarios_tipo_reporte: {
  error: 'error',
  sugerencia: 'sugerencia',
  contenido: 'contenido',
  otro: 'otro'
};

export type reportes_usuarios_tipo_reporte = (typeof reportes_usuarios_tipo_reporte)[keyof typeof reportes_usuarios_tipo_reporte]


export const boletos_estado: {
  vendido: 'vendido',
  reservado: 'reservado',
  cancelado: 'cancelado'
};

export type boletos_estado = (typeof boletos_estado)[keyof typeof boletos_estado]


export const suscripciones_estado: {
  activo: 'activo',
  inactivo: 'inactivo',
  cancelado: 'cancelado'
};

export type suscripciones_estado = (typeof suscripciones_estado)[keyof typeof suscripciones_estado]


export const usuarios_rol: {
  cliente: 'cliente',
  administrador: 'administrador'
};

export type usuarios_rol = (typeof usuarios_rol)[keyof typeof usuarios_rol]


export const pagos_estado: {
  completado: 'completado',
  pendiente: 'pendiente',
  fallido: 'fallido'
};

export type pagos_estado = (typeof pagos_estado)[keyof typeof pagos_estado]


export const reportes_usuarios_estado: {
  pendiente: 'pendiente',
  en_revisi_n: 'en_revisi_n',
  resuelto: 'resuelto'
};

export type reportes_usuarios_estado = (typeof reportes_usuarios_estado)[keyof typeof reportes_usuarios_estado]


export const peliculas_tipo_contenido: {
  cine: 'cine',
  streaming: 'streaming',
  ambos: 'ambos'
};

export type peliculas_tipo_contenido = (typeof peliculas_tipo_contenido)[keyof typeof peliculas_tipo_contenido]

}

export type imagenes_extra_tipo = $Enums.imagenes_extra_tipo

export const imagenes_extra_tipo: typeof $Enums.imagenes_extra_tipo

export type reportes_usuarios_tipo_reporte = $Enums.reportes_usuarios_tipo_reporte

export const reportes_usuarios_tipo_reporte: typeof $Enums.reportes_usuarios_tipo_reporte

export type boletos_estado = $Enums.boletos_estado

export const boletos_estado: typeof $Enums.boletos_estado

export type suscripciones_estado = $Enums.suscripciones_estado

export const suscripciones_estado: typeof $Enums.suscripciones_estado

export type usuarios_rol = $Enums.usuarios_rol

export const usuarios_rol: typeof $Enums.usuarios_rol

export type pagos_estado = $Enums.pagos_estado

export const pagos_estado: typeof $Enums.pagos_estado

export type reportes_usuarios_estado = $Enums.reportes_usuarios_estado

export const reportes_usuarios_estado: typeof $Enums.reportes_usuarios_estado

export type peliculas_tipo_contenido = $Enums.peliculas_tipo_contenido

export const peliculas_tipo_contenido: typeof $Enums.peliculas_tipo_contenido

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Actores
 * const actores = await prisma.actores.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Actores
   * const actores = await prisma.actores.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.actores`: Exposes CRUD operations for the **actores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Actores
    * const actores = await prisma.actores.findMany()
    * ```
    */
  get actores(): Prisma.actoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.boletos`: Exposes CRUD operations for the **boletos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Boletos
    * const boletos = await prisma.boletos.findMany()
    * ```
    */
  get boletos(): Prisma.boletosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.candy_bar`: Exposes CRUD operations for the **candy_bar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candy_bars
    * const candy_bars = await prisma.candy_bar.findMany()
    * ```
    */
  get candy_bar(): Prisma.candy_barDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.carteleras`: Exposes CRUD operations for the **carteleras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Carteleras
    * const carteleras = await prisma.carteleras.findMany()
    * ```
    */
  get carteleras(): Prisma.cartelerasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cines`: Exposes CRUD operations for the **cines** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cines
    * const cines = await prisma.cines.findMany()
    * ```
    */
  get cines(): Prisma.cinesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clasificaciones`: Exposes CRUD operations for the **clasificaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clasificaciones
    * const clasificaciones = await prisma.clasificaciones.findMany()
    * ```
    */
  get clasificaciones(): Prisma.clasificacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.directores`: Exposes CRUD operations for the **directores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Directores
    * const directores = await prisma.directores.findMany()
    * ```
    */
  get directores(): Prisma.directoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.empleados`: Exposes CRUD operations for the **empleados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empleados
    * const empleados = await prisma.empleados.findMany()
    * ```
    */
  get empleados(): Prisma.empleadosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.funciones`: Exposes CRUD operations for the **funciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Funciones
    * const funciones = await prisma.funciones.findMany()
    * ```
    */
  get funciones(): Prisma.funcionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.generos`: Exposes CRUD operations for the **generos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Generos
    * const generos = await prisma.generos.findMany()
    * ```
    */
  get generos(): Prisma.generosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historial_reproduccion`: Exposes CRUD operations for the **historial_reproduccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Historial_reproduccions
    * const historial_reproduccions = await prisma.historial_reproduccion.findMany()
    * ```
    */
  get historial_reproduccion(): Prisma.historial_reproduccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imagenes_extra`: Exposes CRUD operations for the **imagenes_extra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imagenes_extras
    * const imagenes_extras = await prisma.imagenes_extra.findMany()
    * ```
    */
  get imagenes_extra(): Prisma.imagenes_extraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.intentos_login`: Exposes CRUD operations for the **intentos_login** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Intentos_logins
    * const intentos_logins = await prisma.intentos_login.findMany()
    * ```
    */
  get intentos_login(): Prisma.intentos_loginDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.logs_actividad`: Exposes CRUD operations for the **logs_actividad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Logs_actividads
    * const logs_actividads = await prisma.logs_actividad.findMany()
    * ```
    */
  get logs_actividad(): Prisma.logs_actividadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.metodos_pago`: Exposes CRUD operations for the **metodos_pago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Metodos_pagos
    * const metodos_pagos = await prisma.metodos_pago.findMany()
    * ```
    */
  get metodos_pago(): Prisma.metodos_pagoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificaciones`: Exposes CRUD operations for the **notificaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificaciones
    * const notificaciones = await prisma.notificaciones.findMany()
    * ```
    */
  get notificaciones(): Prisma.notificacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pagos`: Exposes CRUD operations for the **pagos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pagos.findMany()
    * ```
    */
  get pagos(): Prisma.pagosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.peliculas`: Exposes CRUD operations for the **peliculas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Peliculas
    * const peliculas = await prisma.peliculas.findMany()
    * ```
    */
  get peliculas(): Prisma.peliculasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.peliculas_directores`: Exposes CRUD operations for the **peliculas_directores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Peliculas_directores
    * const peliculas_directores = await prisma.peliculas_directores.findMany()
    * ```
    */
  get peliculas_directores(): Prisma.peliculas_directoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.peliculas_generos`: Exposes CRUD operations for the **peliculas_generos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Peliculas_generos
    * const peliculas_generos = await prisma.peliculas_generos.findMany()
    * ```
    */
  get peliculas_generos(): Prisma.peliculas_generosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.planes`: Exposes CRUD operations for the **planes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Planes
    * const planes = await prisma.planes.findMany()
    * ```
    */
  get planes(): Prisma.planesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productoras`: Exposes CRUD operations for the **productoras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productoras
    * const productoras = await prisma.productoras.findMany()
    * ```
    */
  get productoras(): Prisma.productorasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promociones`: Exposes CRUD operations for the **promociones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promociones
    * const promociones = await prisma.promociones.findMany()
    * ```
    */
  get promociones(): Prisma.promocionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reparto`: Exposes CRUD operations for the **reparto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Repartos
    * const repartos = await prisma.reparto.findMany()
    * ```
    */
  get reparto(): Prisma.repartoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportes_usuarios`: Exposes CRUD operations for the **reportes_usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reportes_usuarios
    * const reportes_usuarios = await prisma.reportes_usuarios.findMany()
    * ```
    */
  get reportes_usuarios(): Prisma.reportes_usuariosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles_empleados`: Exposes CRUD operations for the **roles_empleados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles_empleados
    * const roles_empleados = await prisma.roles_empleados.findMany()
    * ```
    */
  get roles_empleados(): Prisma.roles_empleadosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salas`: Exposes CRUD operations for the **salas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Salas
    * const salas = await prisma.salas.findMany()
    * ```
    */
  get salas(): Prisma.salasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.suscripciones`: Exposes CRUD operations for the **suscripciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suscripciones
    * const suscripciones = await prisma.suscripciones.findMany()
    * ```
    */
  get suscripciones(): Prisma.suscripcionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.valoraciones`: Exposes CRUD operations for the **valoraciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Valoraciones
    * const valoraciones = await prisma.valoraciones.findMany()
    * ```
    */
  get valoraciones(): Prisma.valoracionesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    actores: 'actores',
    boletos: 'boletos',
    candy_bar: 'candy_bar',
    carteleras: 'carteleras',
    cines: 'cines',
    clasificaciones: 'clasificaciones',
    directores: 'directores',
    empleados: 'empleados',
    funciones: 'funciones',
    generos: 'generos',
    historial_reproduccion: 'historial_reproduccion',
    imagenes_extra: 'imagenes_extra',
    intentos_login: 'intentos_login',
    logs_actividad: 'logs_actividad',
    metodos_pago: 'metodos_pago',
    notificaciones: 'notificaciones',
    pagos: 'pagos',
    peliculas: 'peliculas',
    peliculas_directores: 'peliculas_directores',
    peliculas_generos: 'peliculas_generos',
    planes: 'planes',
    productoras: 'productoras',
    promociones: 'promociones',
    reparto: 'reparto',
    reportes_usuarios: 'reportes_usuarios',
    roles_empleados: 'roles_empleados',
    salas: 'salas',
    suscripciones: 'suscripciones',
    usuarios: 'usuarios',
    valoraciones: 'valoraciones'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "actores" | "boletos" | "candy_bar" | "carteleras" | "cines" | "clasificaciones" | "directores" | "empleados" | "funciones" | "generos" | "historial_reproduccion" | "imagenes_extra" | "intentos_login" | "logs_actividad" | "metodos_pago" | "notificaciones" | "pagos" | "peliculas" | "peliculas_directores" | "peliculas_generos" | "planes" | "productoras" | "promociones" | "reparto" | "reportes_usuarios" | "roles_empleados" | "salas" | "suscripciones" | "usuarios" | "valoraciones"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      actores: {
        payload: Prisma.$actoresPayload<ExtArgs>
        fields: Prisma.actoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.actoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.actoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>
          }
          findFirst: {
            args: Prisma.actoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.actoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>
          }
          findMany: {
            args: Prisma.actoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>[]
          }
          create: {
            args: Prisma.actoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>
          }
          createMany: {
            args: Prisma.actoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.actoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>
          }
          update: {
            args: Prisma.actoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>
          }
          deleteMany: {
            args: Prisma.actoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.actoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.actoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$actoresPayload>
          }
          aggregate: {
            args: Prisma.ActoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActores>
          }
          groupBy: {
            args: Prisma.actoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<ActoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.actoresCountArgs<ExtArgs>
            result: $Utils.Optional<ActoresCountAggregateOutputType> | number
          }
        }
      }
      boletos: {
        payload: Prisma.$boletosPayload<ExtArgs>
        fields: Prisma.boletosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.boletosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.boletosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>
          }
          findFirst: {
            args: Prisma.boletosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.boletosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>
          }
          findMany: {
            args: Prisma.boletosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>[]
          }
          create: {
            args: Prisma.boletosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>
          }
          createMany: {
            args: Prisma.boletosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.boletosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>
          }
          update: {
            args: Prisma.boletosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>
          }
          deleteMany: {
            args: Prisma.boletosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.boletosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.boletosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$boletosPayload>
          }
          aggregate: {
            args: Prisma.BoletosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBoletos>
          }
          groupBy: {
            args: Prisma.boletosGroupByArgs<ExtArgs>
            result: $Utils.Optional<BoletosGroupByOutputType>[]
          }
          count: {
            args: Prisma.boletosCountArgs<ExtArgs>
            result: $Utils.Optional<BoletosCountAggregateOutputType> | number
          }
        }
      }
      candy_bar: {
        payload: Prisma.$candy_barPayload<ExtArgs>
        fields: Prisma.candy_barFieldRefs
        operations: {
          findUnique: {
            args: Prisma.candy_barFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.candy_barFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>
          }
          findFirst: {
            args: Prisma.candy_barFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.candy_barFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>
          }
          findMany: {
            args: Prisma.candy_barFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>[]
          }
          create: {
            args: Prisma.candy_barCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>
          }
          createMany: {
            args: Prisma.candy_barCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.candy_barDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>
          }
          update: {
            args: Prisma.candy_barUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>
          }
          deleteMany: {
            args: Prisma.candy_barDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.candy_barUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.candy_barUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$candy_barPayload>
          }
          aggregate: {
            args: Prisma.Candy_barAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandy_bar>
          }
          groupBy: {
            args: Prisma.candy_barGroupByArgs<ExtArgs>
            result: $Utils.Optional<Candy_barGroupByOutputType>[]
          }
          count: {
            args: Prisma.candy_barCountArgs<ExtArgs>
            result: $Utils.Optional<Candy_barCountAggregateOutputType> | number
          }
        }
      }
      carteleras: {
        payload: Prisma.$cartelerasPayload<ExtArgs>
        fields: Prisma.cartelerasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cartelerasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cartelerasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>
          }
          findFirst: {
            args: Prisma.cartelerasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cartelerasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>
          }
          findMany: {
            args: Prisma.cartelerasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>[]
          }
          create: {
            args: Prisma.cartelerasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>
          }
          createMany: {
            args: Prisma.cartelerasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cartelerasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>
          }
          update: {
            args: Prisma.cartelerasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>
          }
          deleteMany: {
            args: Prisma.cartelerasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cartelerasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cartelerasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartelerasPayload>
          }
          aggregate: {
            args: Prisma.CartelerasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCarteleras>
          }
          groupBy: {
            args: Prisma.cartelerasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CartelerasGroupByOutputType>[]
          }
          count: {
            args: Prisma.cartelerasCountArgs<ExtArgs>
            result: $Utils.Optional<CartelerasCountAggregateOutputType> | number
          }
        }
      }
      cines: {
        payload: Prisma.$cinesPayload<ExtArgs>
        fields: Prisma.cinesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cinesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cinesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>
          }
          findFirst: {
            args: Prisma.cinesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cinesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>
          }
          findMany: {
            args: Prisma.cinesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>[]
          }
          create: {
            args: Prisma.cinesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>
          }
          createMany: {
            args: Prisma.cinesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cinesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>
          }
          update: {
            args: Prisma.cinesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>
          }
          deleteMany: {
            args: Prisma.cinesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cinesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cinesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cinesPayload>
          }
          aggregate: {
            args: Prisma.CinesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCines>
          }
          groupBy: {
            args: Prisma.cinesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CinesGroupByOutputType>[]
          }
          count: {
            args: Prisma.cinesCountArgs<ExtArgs>
            result: $Utils.Optional<CinesCountAggregateOutputType> | number
          }
        }
      }
      clasificaciones: {
        payload: Prisma.$clasificacionesPayload<ExtArgs>
        fields: Prisma.clasificacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clasificacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clasificacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>
          }
          findFirst: {
            args: Prisma.clasificacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clasificacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>
          }
          findMany: {
            args: Prisma.clasificacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>[]
          }
          create: {
            args: Prisma.clasificacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>
          }
          createMany: {
            args: Prisma.clasificacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.clasificacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>
          }
          update: {
            args: Prisma.clasificacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>
          }
          deleteMany: {
            args: Prisma.clasificacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clasificacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.clasificacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clasificacionesPayload>
          }
          aggregate: {
            args: Prisma.ClasificacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClasificaciones>
          }
          groupBy: {
            args: Prisma.clasificacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClasificacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.clasificacionesCountArgs<ExtArgs>
            result: $Utils.Optional<ClasificacionesCountAggregateOutputType> | number
          }
        }
      }
      directores: {
        payload: Prisma.$directoresPayload<ExtArgs>
        fields: Prisma.directoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.directoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.directoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>
          }
          findFirst: {
            args: Prisma.directoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.directoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>
          }
          findMany: {
            args: Prisma.directoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>[]
          }
          create: {
            args: Prisma.directoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>
          }
          createMany: {
            args: Prisma.directoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.directoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>
          }
          update: {
            args: Prisma.directoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>
          }
          deleteMany: {
            args: Prisma.directoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.directoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.directoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directoresPayload>
          }
          aggregate: {
            args: Prisma.DirectoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDirectores>
          }
          groupBy: {
            args: Prisma.directoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<DirectoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.directoresCountArgs<ExtArgs>
            result: $Utils.Optional<DirectoresCountAggregateOutputType> | number
          }
        }
      }
      empleados: {
        payload: Prisma.$empleadosPayload<ExtArgs>
        fields: Prisma.empleadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.empleadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.empleadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>
          }
          findFirst: {
            args: Prisma.empleadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.empleadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>
          }
          findMany: {
            args: Prisma.empleadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>[]
          }
          create: {
            args: Prisma.empleadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>
          }
          createMany: {
            args: Prisma.empleadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.empleadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>
          }
          update: {
            args: Prisma.empleadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>
          }
          deleteMany: {
            args: Prisma.empleadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.empleadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.empleadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empleadosPayload>
          }
          aggregate: {
            args: Prisma.EmpleadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpleados>
          }
          groupBy: {
            args: Prisma.empleadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpleadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.empleadosCountArgs<ExtArgs>
            result: $Utils.Optional<EmpleadosCountAggregateOutputType> | number
          }
        }
      }
      funciones: {
        payload: Prisma.$funcionesPayload<ExtArgs>
        fields: Prisma.funcionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.funcionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.funcionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>
          }
          findFirst: {
            args: Prisma.funcionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.funcionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>
          }
          findMany: {
            args: Prisma.funcionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>[]
          }
          create: {
            args: Prisma.funcionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>
          }
          createMany: {
            args: Prisma.funcionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.funcionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>
          }
          update: {
            args: Prisma.funcionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>
          }
          deleteMany: {
            args: Prisma.funcionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.funcionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.funcionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$funcionesPayload>
          }
          aggregate: {
            args: Prisma.FuncionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFunciones>
          }
          groupBy: {
            args: Prisma.funcionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<FuncionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.funcionesCountArgs<ExtArgs>
            result: $Utils.Optional<FuncionesCountAggregateOutputType> | number
          }
        }
      }
      generos: {
        payload: Prisma.$generosPayload<ExtArgs>
        fields: Prisma.generosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.generosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.generosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>
          }
          findFirst: {
            args: Prisma.generosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.generosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>
          }
          findMany: {
            args: Prisma.generosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>[]
          }
          create: {
            args: Prisma.generosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>
          }
          createMany: {
            args: Prisma.generosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.generosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>
          }
          update: {
            args: Prisma.generosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>
          }
          deleteMany: {
            args: Prisma.generosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.generosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.generosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$generosPayload>
          }
          aggregate: {
            args: Prisma.GenerosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGeneros>
          }
          groupBy: {
            args: Prisma.generosGroupByArgs<ExtArgs>
            result: $Utils.Optional<GenerosGroupByOutputType>[]
          }
          count: {
            args: Prisma.generosCountArgs<ExtArgs>
            result: $Utils.Optional<GenerosCountAggregateOutputType> | number
          }
        }
      }
      historial_reproduccion: {
        payload: Prisma.$historial_reproduccionPayload<ExtArgs>
        fields: Prisma.historial_reproduccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historial_reproduccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historial_reproduccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>
          }
          findFirst: {
            args: Prisma.historial_reproduccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historial_reproduccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>
          }
          findMany: {
            args: Prisma.historial_reproduccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>[]
          }
          create: {
            args: Prisma.historial_reproduccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>
          }
          createMany: {
            args: Prisma.historial_reproduccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.historial_reproduccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>
          }
          update: {
            args: Prisma.historial_reproduccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>
          }
          deleteMany: {
            args: Prisma.historial_reproduccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.historial_reproduccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.historial_reproduccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_reproduccionPayload>
          }
          aggregate: {
            args: Prisma.Historial_reproduccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorial_reproduccion>
          }
          groupBy: {
            args: Prisma.historial_reproduccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Historial_reproduccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.historial_reproduccionCountArgs<ExtArgs>
            result: $Utils.Optional<Historial_reproduccionCountAggregateOutputType> | number
          }
        }
      }
      imagenes_extra: {
        payload: Prisma.$imagenes_extraPayload<ExtArgs>
        fields: Prisma.imagenes_extraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imagenes_extraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imagenes_extraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>
          }
          findFirst: {
            args: Prisma.imagenes_extraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imagenes_extraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>
          }
          findMany: {
            args: Prisma.imagenes_extraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>[]
          }
          create: {
            args: Prisma.imagenes_extraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>
          }
          createMany: {
            args: Prisma.imagenes_extraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.imagenes_extraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>
          }
          update: {
            args: Prisma.imagenes_extraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>
          }
          deleteMany: {
            args: Prisma.imagenes_extraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.imagenes_extraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.imagenes_extraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagenes_extraPayload>
          }
          aggregate: {
            args: Prisma.Imagenes_extraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImagenes_extra>
          }
          groupBy: {
            args: Prisma.imagenes_extraGroupByArgs<ExtArgs>
            result: $Utils.Optional<Imagenes_extraGroupByOutputType>[]
          }
          count: {
            args: Prisma.imagenes_extraCountArgs<ExtArgs>
            result: $Utils.Optional<Imagenes_extraCountAggregateOutputType> | number
          }
        }
      }
      intentos_login: {
        payload: Prisma.$intentos_loginPayload<ExtArgs>
        fields: Prisma.intentos_loginFieldRefs
        operations: {
          findUnique: {
            args: Prisma.intentos_loginFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.intentos_loginFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>
          }
          findFirst: {
            args: Prisma.intentos_loginFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.intentos_loginFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>
          }
          findMany: {
            args: Prisma.intentos_loginFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>[]
          }
          create: {
            args: Prisma.intentos_loginCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>
          }
          createMany: {
            args: Prisma.intentos_loginCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.intentos_loginDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>
          }
          update: {
            args: Prisma.intentos_loginUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>
          }
          deleteMany: {
            args: Prisma.intentos_loginDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.intentos_loginUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.intentos_loginUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$intentos_loginPayload>
          }
          aggregate: {
            args: Prisma.Intentos_loginAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIntentos_login>
          }
          groupBy: {
            args: Prisma.intentos_loginGroupByArgs<ExtArgs>
            result: $Utils.Optional<Intentos_loginGroupByOutputType>[]
          }
          count: {
            args: Prisma.intentos_loginCountArgs<ExtArgs>
            result: $Utils.Optional<Intentos_loginCountAggregateOutputType> | number
          }
        }
      }
      logs_actividad: {
        payload: Prisma.$logs_actividadPayload<ExtArgs>
        fields: Prisma.logs_actividadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.logs_actividadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.logs_actividadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>
          }
          findFirst: {
            args: Prisma.logs_actividadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.logs_actividadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>
          }
          findMany: {
            args: Prisma.logs_actividadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>[]
          }
          create: {
            args: Prisma.logs_actividadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>
          }
          createMany: {
            args: Prisma.logs_actividadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.logs_actividadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>
          }
          update: {
            args: Prisma.logs_actividadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>
          }
          deleteMany: {
            args: Prisma.logs_actividadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.logs_actividadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.logs_actividadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logs_actividadPayload>
          }
          aggregate: {
            args: Prisma.Logs_actividadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLogs_actividad>
          }
          groupBy: {
            args: Prisma.logs_actividadGroupByArgs<ExtArgs>
            result: $Utils.Optional<Logs_actividadGroupByOutputType>[]
          }
          count: {
            args: Prisma.logs_actividadCountArgs<ExtArgs>
            result: $Utils.Optional<Logs_actividadCountAggregateOutputType> | number
          }
        }
      }
      metodos_pago: {
        payload: Prisma.$metodos_pagoPayload<ExtArgs>
        fields: Prisma.metodos_pagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.metodos_pagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.metodos_pagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>
          }
          findFirst: {
            args: Prisma.metodos_pagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.metodos_pagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>
          }
          findMany: {
            args: Prisma.metodos_pagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>[]
          }
          create: {
            args: Prisma.metodos_pagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>
          }
          createMany: {
            args: Prisma.metodos_pagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.metodos_pagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>
          }
          update: {
            args: Prisma.metodos_pagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>
          }
          deleteMany: {
            args: Prisma.metodos_pagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.metodos_pagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.metodos_pagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$metodos_pagoPayload>
          }
          aggregate: {
            args: Prisma.Metodos_pagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetodos_pago>
          }
          groupBy: {
            args: Prisma.metodos_pagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Metodos_pagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.metodos_pagoCountArgs<ExtArgs>
            result: $Utils.Optional<Metodos_pagoCountAggregateOutputType> | number
          }
        }
      }
      notificaciones: {
        payload: Prisma.$notificacionesPayload<ExtArgs>
        fields: Prisma.notificacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>
          }
          findFirst: {
            args: Prisma.notificacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>
          }
          findMany: {
            args: Prisma.notificacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>[]
          }
          create: {
            args: Prisma.notificacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>
          }
          createMany: {
            args: Prisma.notificacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.notificacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>
          }
          update: {
            args: Prisma.notificacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>
          }
          deleteMany: {
            args: Prisma.notificacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.notificacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificacionesPayload>
          }
          aggregate: {
            args: Prisma.NotificacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificaciones>
          }
          groupBy: {
            args: Prisma.notificacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificacionesCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacionesCountAggregateOutputType> | number
          }
        }
      }
      pagos: {
        payload: Prisma.$pagosPayload<ExtArgs>
        fields: Prisma.pagosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pagosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pagosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>
          }
          findFirst: {
            args: Prisma.pagosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pagosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>
          }
          findMany: {
            args: Prisma.pagosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>[]
          }
          create: {
            args: Prisma.pagosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>
          }
          createMany: {
            args: Prisma.pagosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.pagosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>
          }
          update: {
            args: Prisma.pagosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>
          }
          deleteMany: {
            args: Prisma.pagosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pagosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.pagosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagosPayload>
          }
          aggregate: {
            args: Prisma.PagosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagos>
          }
          groupBy: {
            args: Prisma.pagosGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagosGroupByOutputType>[]
          }
          count: {
            args: Prisma.pagosCountArgs<ExtArgs>
            result: $Utils.Optional<PagosCountAggregateOutputType> | number
          }
        }
      }
      peliculas: {
        payload: Prisma.$peliculasPayload<ExtArgs>
        fields: Prisma.peliculasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.peliculasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.peliculasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>
          }
          findFirst: {
            args: Prisma.peliculasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.peliculasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>
          }
          findMany: {
            args: Prisma.peliculasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>[]
          }
          create: {
            args: Prisma.peliculasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>
          }
          createMany: {
            args: Prisma.peliculasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.peliculasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>
          }
          update: {
            args: Prisma.peliculasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>
          }
          deleteMany: {
            args: Prisma.peliculasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.peliculasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.peliculasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculasPayload>
          }
          aggregate: {
            args: Prisma.PeliculasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePeliculas>
          }
          groupBy: {
            args: Prisma.peliculasGroupByArgs<ExtArgs>
            result: $Utils.Optional<PeliculasGroupByOutputType>[]
          }
          count: {
            args: Prisma.peliculasCountArgs<ExtArgs>
            result: $Utils.Optional<PeliculasCountAggregateOutputType> | number
          }
        }
      }
      peliculas_directores: {
        payload: Prisma.$peliculas_directoresPayload<ExtArgs>
        fields: Prisma.peliculas_directoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.peliculas_directoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.peliculas_directoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>
          }
          findFirst: {
            args: Prisma.peliculas_directoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.peliculas_directoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>
          }
          findMany: {
            args: Prisma.peliculas_directoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>[]
          }
          create: {
            args: Prisma.peliculas_directoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>
          }
          createMany: {
            args: Prisma.peliculas_directoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.peliculas_directoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>
          }
          update: {
            args: Prisma.peliculas_directoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>
          }
          deleteMany: {
            args: Prisma.peliculas_directoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.peliculas_directoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.peliculas_directoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_directoresPayload>
          }
          aggregate: {
            args: Prisma.Peliculas_directoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePeliculas_directores>
          }
          groupBy: {
            args: Prisma.peliculas_directoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<Peliculas_directoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.peliculas_directoresCountArgs<ExtArgs>
            result: $Utils.Optional<Peliculas_directoresCountAggregateOutputType> | number
          }
        }
      }
      peliculas_generos: {
        payload: Prisma.$peliculas_generosPayload<ExtArgs>
        fields: Prisma.peliculas_generosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.peliculas_generosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.peliculas_generosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>
          }
          findFirst: {
            args: Prisma.peliculas_generosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.peliculas_generosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>
          }
          findMany: {
            args: Prisma.peliculas_generosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>[]
          }
          create: {
            args: Prisma.peliculas_generosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>
          }
          createMany: {
            args: Prisma.peliculas_generosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.peliculas_generosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>
          }
          update: {
            args: Prisma.peliculas_generosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>
          }
          deleteMany: {
            args: Prisma.peliculas_generosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.peliculas_generosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.peliculas_generosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$peliculas_generosPayload>
          }
          aggregate: {
            args: Prisma.Peliculas_generosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePeliculas_generos>
          }
          groupBy: {
            args: Prisma.peliculas_generosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Peliculas_generosGroupByOutputType>[]
          }
          count: {
            args: Prisma.peliculas_generosCountArgs<ExtArgs>
            result: $Utils.Optional<Peliculas_generosCountAggregateOutputType> | number
          }
        }
      }
      planes: {
        payload: Prisma.$planesPayload<ExtArgs>
        fields: Prisma.planesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.planesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.planesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>
          }
          findFirst: {
            args: Prisma.planesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.planesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>
          }
          findMany: {
            args: Prisma.planesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>[]
          }
          create: {
            args: Prisma.planesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>
          }
          createMany: {
            args: Prisma.planesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.planesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>
          }
          update: {
            args: Prisma.planesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>
          }
          deleteMany: {
            args: Prisma.planesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.planesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.planesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$planesPayload>
          }
          aggregate: {
            args: Prisma.PlanesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlanes>
          }
          groupBy: {
            args: Prisma.planesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlanesGroupByOutputType>[]
          }
          count: {
            args: Prisma.planesCountArgs<ExtArgs>
            result: $Utils.Optional<PlanesCountAggregateOutputType> | number
          }
        }
      }
      productoras: {
        payload: Prisma.$productorasPayload<ExtArgs>
        fields: Prisma.productorasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productorasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productorasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>
          }
          findFirst: {
            args: Prisma.productorasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productorasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>
          }
          findMany: {
            args: Prisma.productorasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>[]
          }
          create: {
            args: Prisma.productorasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>
          }
          createMany: {
            args: Prisma.productorasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.productorasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>
          }
          update: {
            args: Prisma.productorasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>
          }
          deleteMany: {
            args: Prisma.productorasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productorasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.productorasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productorasPayload>
          }
          aggregate: {
            args: Prisma.ProductorasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductoras>
          }
          groupBy: {
            args: Prisma.productorasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductorasGroupByOutputType>[]
          }
          count: {
            args: Prisma.productorasCountArgs<ExtArgs>
            result: $Utils.Optional<ProductorasCountAggregateOutputType> | number
          }
        }
      }
      promociones: {
        payload: Prisma.$promocionesPayload<ExtArgs>
        fields: Prisma.promocionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.promocionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.promocionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>
          }
          findFirst: {
            args: Prisma.promocionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.promocionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>
          }
          findMany: {
            args: Prisma.promocionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>[]
          }
          create: {
            args: Prisma.promocionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>
          }
          createMany: {
            args: Prisma.promocionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.promocionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>
          }
          update: {
            args: Prisma.promocionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>
          }
          deleteMany: {
            args: Prisma.promocionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.promocionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.promocionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionesPayload>
          }
          aggregate: {
            args: Prisma.PromocionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromociones>
          }
          groupBy: {
            args: Prisma.promocionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromocionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.promocionesCountArgs<ExtArgs>
            result: $Utils.Optional<PromocionesCountAggregateOutputType> | number
          }
        }
      }
      reparto: {
        payload: Prisma.$repartoPayload<ExtArgs>
        fields: Prisma.repartoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.repartoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.repartoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>
          }
          findFirst: {
            args: Prisma.repartoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.repartoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>
          }
          findMany: {
            args: Prisma.repartoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>[]
          }
          create: {
            args: Prisma.repartoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>
          }
          createMany: {
            args: Prisma.repartoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.repartoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>
          }
          update: {
            args: Prisma.repartoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>
          }
          deleteMany: {
            args: Prisma.repartoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.repartoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.repartoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$repartoPayload>
          }
          aggregate: {
            args: Prisma.RepartoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReparto>
          }
          groupBy: {
            args: Prisma.repartoGroupByArgs<ExtArgs>
            result: $Utils.Optional<RepartoGroupByOutputType>[]
          }
          count: {
            args: Prisma.repartoCountArgs<ExtArgs>
            result: $Utils.Optional<RepartoCountAggregateOutputType> | number
          }
        }
      }
      reportes_usuarios: {
        payload: Prisma.$reportes_usuariosPayload<ExtArgs>
        fields: Prisma.reportes_usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportes_usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportes_usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>
          }
          findFirst: {
            args: Prisma.reportes_usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportes_usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>
          }
          findMany: {
            args: Prisma.reportes_usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>[]
          }
          create: {
            args: Prisma.reportes_usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>
          }
          createMany: {
            args: Prisma.reportes_usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reportes_usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>
          }
          update: {
            args: Prisma.reportes_usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>
          }
          deleteMany: {
            args: Prisma.reportes_usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportes_usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reportes_usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportes_usuariosPayload>
          }
          aggregate: {
            args: Prisma.Reportes_usuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportes_usuarios>
          }
          groupBy: {
            args: Prisma.reportes_usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Reportes_usuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportes_usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<Reportes_usuariosCountAggregateOutputType> | number
          }
        }
      }
      roles_empleados: {
        payload: Prisma.$roles_empleadosPayload<ExtArgs>
        fields: Prisma.roles_empleadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.roles_empleadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.roles_empleadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>
          }
          findFirst: {
            args: Prisma.roles_empleadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.roles_empleadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>
          }
          findMany: {
            args: Prisma.roles_empleadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>[]
          }
          create: {
            args: Prisma.roles_empleadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>
          }
          createMany: {
            args: Prisma.roles_empleadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.roles_empleadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>
          }
          update: {
            args: Prisma.roles_empleadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>
          }
          deleteMany: {
            args: Prisma.roles_empleadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.roles_empleadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.roles_empleadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_empleadosPayload>
          }
          aggregate: {
            args: Prisma.Roles_empleadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles_empleados>
          }
          groupBy: {
            args: Prisma.roles_empleadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Roles_empleadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.roles_empleadosCountArgs<ExtArgs>
            result: $Utils.Optional<Roles_empleadosCountAggregateOutputType> | number
          }
        }
      }
      salas: {
        payload: Prisma.$salasPayload<ExtArgs>
        fields: Prisma.salasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.salasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.salasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          findFirst: {
            args: Prisma.salasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.salasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          findMany: {
            args: Prisma.salasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>[]
          }
          create: {
            args: Prisma.salasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          createMany: {
            args: Prisma.salasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.salasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          update: {
            args: Prisma.salasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          deleteMany: {
            args: Prisma.salasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.salasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.salasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          aggregate: {
            args: Prisma.SalasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalas>
          }
          groupBy: {
            args: Prisma.salasGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalasGroupByOutputType>[]
          }
          count: {
            args: Prisma.salasCountArgs<ExtArgs>
            result: $Utils.Optional<SalasCountAggregateOutputType> | number
          }
        }
      }
      suscripciones: {
        payload: Prisma.$suscripcionesPayload<ExtArgs>
        fields: Prisma.suscripcionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.suscripcionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.suscripcionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>
          }
          findFirst: {
            args: Prisma.suscripcionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.suscripcionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>
          }
          findMany: {
            args: Prisma.suscripcionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>[]
          }
          create: {
            args: Prisma.suscripcionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>
          }
          createMany: {
            args: Prisma.suscripcionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.suscripcionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>
          }
          update: {
            args: Prisma.suscripcionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>
          }
          deleteMany: {
            args: Prisma.suscripcionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.suscripcionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.suscripcionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suscripcionesPayload>
          }
          aggregate: {
            args: Prisma.SuscripcionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSuscripciones>
          }
          groupBy: {
            args: Prisma.suscripcionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuscripcionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.suscripcionesCountArgs<ExtArgs>
            result: $Utils.Optional<SuscripcionesCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
      valoraciones: {
        payload: Prisma.$valoracionesPayload<ExtArgs>
        fields: Prisma.valoracionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.valoracionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.valoracionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>
          }
          findFirst: {
            args: Prisma.valoracionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.valoracionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>
          }
          findMany: {
            args: Prisma.valoracionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>[]
          }
          create: {
            args: Prisma.valoracionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>
          }
          createMany: {
            args: Prisma.valoracionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.valoracionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>
          }
          update: {
            args: Prisma.valoracionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>
          }
          deleteMany: {
            args: Prisma.valoracionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.valoracionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.valoracionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$valoracionesPayload>
          }
          aggregate: {
            args: Prisma.ValoracionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateValoraciones>
          }
          groupBy: {
            args: Prisma.valoracionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ValoracionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.valoracionesCountArgs<ExtArgs>
            result: $Utils.Optional<ValoracionesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    actores?: actoresOmit
    boletos?: boletosOmit
    candy_bar?: candy_barOmit
    carteleras?: cartelerasOmit
    cines?: cinesOmit
    clasificaciones?: clasificacionesOmit
    directores?: directoresOmit
    empleados?: empleadosOmit
    funciones?: funcionesOmit
    generos?: generosOmit
    historial_reproduccion?: historial_reproduccionOmit
    imagenes_extra?: imagenes_extraOmit
    intentos_login?: intentos_loginOmit
    logs_actividad?: logs_actividadOmit
    metodos_pago?: metodos_pagoOmit
    notificaciones?: notificacionesOmit
    pagos?: pagosOmit
    peliculas?: peliculasOmit
    peliculas_directores?: peliculas_directoresOmit
    peliculas_generos?: peliculas_generosOmit
    planes?: planesOmit
    productoras?: productorasOmit
    promociones?: promocionesOmit
    reparto?: repartoOmit
    reportes_usuarios?: reportes_usuariosOmit
    roles_empleados?: roles_empleadosOmit
    salas?: salasOmit
    suscripciones?: suscripcionesOmit
    usuarios?: usuariosOmit
    valoraciones?: valoracionesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ActoresCountOutputType
   */

  export type ActoresCountOutputType = {
    reparto: number
  }

  export type ActoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reparto?: boolean | ActoresCountOutputTypeCountRepartoArgs
  }

  // Custom InputTypes
  /**
   * ActoresCountOutputType without action
   */
  export type ActoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActoresCountOutputType
     */
    select?: ActoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ActoresCountOutputType without action
   */
  export type ActoresCountOutputTypeCountRepartoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: repartoWhereInput
  }


  /**
   * Count Type BoletosCountOutputType
   */

  export type BoletosCountOutputType = {
    logs_actividad: number
  }

  export type BoletosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs_actividad?: boolean | BoletosCountOutputTypeCountLogs_actividadArgs
  }

  // Custom InputTypes
  /**
   * BoletosCountOutputType without action
   */
  export type BoletosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoletosCountOutputType
     */
    select?: BoletosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BoletosCountOutputType without action
   */
  export type BoletosCountOutputTypeCountLogs_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logs_actividadWhereInput
  }


  /**
   * Count Type CartelerasCountOutputType
   */

  export type CartelerasCountOutputType = {
    funciones: number
  }

  export type CartelerasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | CartelerasCountOutputTypeCountFuncionesArgs
  }

  // Custom InputTypes
  /**
   * CartelerasCountOutputType without action
   */
  export type CartelerasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartelerasCountOutputType
     */
    select?: CartelerasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CartelerasCountOutputType without action
   */
  export type CartelerasCountOutputTypeCountFuncionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: funcionesWhereInput
  }


  /**
   * Count Type CinesCountOutputType
   */

  export type CinesCountOutputType = {
    empleados: number
    salas: number
  }

  export type CinesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | CinesCountOutputTypeCountEmpleadosArgs
    salas?: boolean | CinesCountOutputTypeCountSalasArgs
  }

  // Custom InputTypes
  /**
   * CinesCountOutputType without action
   */
  export type CinesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CinesCountOutputType
     */
    select?: CinesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CinesCountOutputType without action
   */
  export type CinesCountOutputTypeCountEmpleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empleadosWhereInput
  }

  /**
   * CinesCountOutputType without action
   */
  export type CinesCountOutputTypeCountSalasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salasWhereInput
  }


  /**
   * Count Type ClasificacionesCountOutputType
   */

  export type ClasificacionesCountOutputType = {
    peliculas: number
  }

  export type ClasificacionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas?: boolean | ClasificacionesCountOutputTypeCountPeliculasArgs
  }

  // Custom InputTypes
  /**
   * ClasificacionesCountOutputType without action
   */
  export type ClasificacionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClasificacionesCountOutputType
     */
    select?: ClasificacionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClasificacionesCountOutputType without action
   */
  export type ClasificacionesCountOutputTypeCountPeliculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculasWhereInput
  }


  /**
   * Count Type DirectoresCountOutputType
   */

  export type DirectoresCountOutputType = {
    peliculas_directores: number
  }

  export type DirectoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas_directores?: boolean | DirectoresCountOutputTypeCountPeliculas_directoresArgs
  }

  // Custom InputTypes
  /**
   * DirectoresCountOutputType without action
   */
  export type DirectoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DirectoresCountOutputType
     */
    select?: DirectoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DirectoresCountOutputType without action
   */
  export type DirectoresCountOutputTypeCountPeliculas_directoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculas_directoresWhereInput
  }


  /**
   * Count Type EmpleadosCountOutputType
   */

  export type EmpleadosCountOutputType = {
    logs_actividad: number
    notificaciones: number
  }

  export type EmpleadosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs_actividad?: boolean | EmpleadosCountOutputTypeCountLogs_actividadArgs
    notificaciones?: boolean | EmpleadosCountOutputTypeCountNotificacionesArgs
  }

  // Custom InputTypes
  /**
   * EmpleadosCountOutputType without action
   */
  export type EmpleadosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpleadosCountOutputType
     */
    select?: EmpleadosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpleadosCountOutputType without action
   */
  export type EmpleadosCountOutputTypeCountLogs_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logs_actividadWhereInput
  }

  /**
   * EmpleadosCountOutputType without action
   */
  export type EmpleadosCountOutputTypeCountNotificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacionesWhereInput
  }


  /**
   * Count Type FuncionesCountOutputType
   */

  export type FuncionesCountOutputType = {
    boletos: number
  }

  export type FuncionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boletos?: boolean | FuncionesCountOutputTypeCountBoletosArgs
  }

  // Custom InputTypes
  /**
   * FuncionesCountOutputType without action
   */
  export type FuncionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionesCountOutputType
     */
    select?: FuncionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FuncionesCountOutputType without action
   */
  export type FuncionesCountOutputTypeCountBoletosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: boletosWhereInput
  }


  /**
   * Count Type GenerosCountOutputType
   */

  export type GenerosCountOutputType = {
    peliculas_generos: number
  }

  export type GenerosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas_generos?: boolean | GenerosCountOutputTypeCountPeliculas_generosArgs
  }

  // Custom InputTypes
  /**
   * GenerosCountOutputType without action
   */
  export type GenerosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GenerosCountOutputType
     */
    select?: GenerosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GenerosCountOutputType without action
   */
  export type GenerosCountOutputTypeCountPeliculas_generosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculas_generosWhereInput
  }


  /**
   * Count Type Metodos_pagoCountOutputType
   */

  export type Metodos_pagoCountOutputType = {
    pagos: number
  }

  export type Metodos_pagoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagos?: boolean | Metodos_pagoCountOutputTypeCountPagosArgs
  }

  // Custom InputTypes
  /**
   * Metodos_pagoCountOutputType without action
   */
  export type Metodos_pagoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Metodos_pagoCountOutputType
     */
    select?: Metodos_pagoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Metodos_pagoCountOutputType without action
   */
  export type Metodos_pagoCountOutputTypeCountPagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagosWhereInput
  }


  /**
   * Count Type PeliculasCountOutputType
   */

  export type PeliculasCountOutputType = {
    funciones: number
    historial_reproduccion: number
    peliculas_directores: number
    peliculas_generos: number
    reparto: number
    valoraciones: number
  }

  export type PeliculasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | PeliculasCountOutputTypeCountFuncionesArgs
    historial_reproduccion?: boolean | PeliculasCountOutputTypeCountHistorial_reproduccionArgs
    peliculas_directores?: boolean | PeliculasCountOutputTypeCountPeliculas_directoresArgs
    peliculas_generos?: boolean | PeliculasCountOutputTypeCountPeliculas_generosArgs
    reparto?: boolean | PeliculasCountOutputTypeCountRepartoArgs
    valoraciones?: boolean | PeliculasCountOutputTypeCountValoracionesArgs
  }

  // Custom InputTypes
  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PeliculasCountOutputType
     */
    select?: PeliculasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeCountFuncionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: funcionesWhereInput
  }

  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeCountHistorial_reproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_reproduccionWhereInput
  }

  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeCountPeliculas_directoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculas_directoresWhereInput
  }

  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeCountPeliculas_generosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculas_generosWhereInput
  }

  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeCountRepartoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: repartoWhereInput
  }

  /**
   * PeliculasCountOutputType without action
   */
  export type PeliculasCountOutputTypeCountValoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: valoracionesWhereInput
  }


  /**
   * Count Type PlanesCountOutputType
   */

  export type PlanesCountOutputType = {
    suscripciones: number
  }

  export type PlanesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    suscripciones?: boolean | PlanesCountOutputTypeCountSuscripcionesArgs
  }

  // Custom InputTypes
  /**
   * PlanesCountOutputType without action
   */
  export type PlanesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanesCountOutputType
     */
    select?: PlanesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PlanesCountOutputType without action
   */
  export type PlanesCountOutputTypeCountSuscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: suscripcionesWhereInput
  }


  /**
   * Count Type ProductorasCountOutputType
   */

  export type ProductorasCountOutputType = {
    peliculas: number
  }

  export type ProductorasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas?: boolean | ProductorasCountOutputTypeCountPeliculasArgs
  }

  // Custom InputTypes
  /**
   * ProductorasCountOutputType without action
   */
  export type ProductorasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductorasCountOutputType
     */
    select?: ProductorasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductorasCountOutputType without action
   */
  export type ProductorasCountOutputTypeCountPeliculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculasWhereInput
  }


  /**
   * Count Type Roles_empleadosCountOutputType
   */

  export type Roles_empleadosCountOutputType = {
    empleados: number
  }

  export type Roles_empleadosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | Roles_empleadosCountOutputTypeCountEmpleadosArgs
  }

  // Custom InputTypes
  /**
   * Roles_empleadosCountOutputType without action
   */
  export type Roles_empleadosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles_empleadosCountOutputType
     */
    select?: Roles_empleadosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Roles_empleadosCountOutputType without action
   */
  export type Roles_empleadosCountOutputTypeCountEmpleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empleadosWhereInput
  }


  /**
   * Count Type SalasCountOutputType
   */

  export type SalasCountOutputType = {
    funciones: number
  }

  export type SalasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | SalasCountOutputTypeCountFuncionesArgs
  }

  // Custom InputTypes
  /**
   * SalasCountOutputType without action
   */
  export type SalasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalasCountOutputType
     */
    select?: SalasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalasCountOutputType without action
   */
  export type SalasCountOutputTypeCountFuncionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: funcionesWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    boletos: number
    historial_reproduccion: number
    intentos_login: number
    logs_actividad: number
    notificaciones: number
    pagos: number
    reportes_usuarios: number
    suscripciones: number
    valoraciones: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boletos?: boolean | UsuariosCountOutputTypeCountBoletosArgs
    historial_reproduccion?: boolean | UsuariosCountOutputTypeCountHistorial_reproduccionArgs
    intentos_login?: boolean | UsuariosCountOutputTypeCountIntentos_loginArgs
    logs_actividad?: boolean | UsuariosCountOutputTypeCountLogs_actividadArgs
    notificaciones?: boolean | UsuariosCountOutputTypeCountNotificacionesArgs
    pagos?: boolean | UsuariosCountOutputTypeCountPagosArgs
    reportes_usuarios?: boolean | UsuariosCountOutputTypeCountReportes_usuariosArgs
    suscripciones?: boolean | UsuariosCountOutputTypeCountSuscripcionesArgs
    valoraciones?: boolean | UsuariosCountOutputTypeCountValoracionesArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountBoletosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: boletosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountHistorial_reproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_reproduccionWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountIntentos_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: intentos_loginWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountLogs_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logs_actividadWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountNotificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacionesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountPagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountReportes_usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportes_usuariosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountSuscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: suscripcionesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountValoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: valoracionesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model actores
   */

  export type AggregateActores = {
    _count: ActoresCountAggregateOutputType | null
    _avg: ActoresAvgAggregateOutputType | null
    _sum: ActoresSumAggregateOutputType | null
    _min: ActoresMinAggregateOutputType | null
    _max: ActoresMaxAggregateOutputType | null
  }

  export type ActoresAvgAggregateOutputType = {
    id_actor: number | null
  }

  export type ActoresSumAggregateOutputType = {
    id_actor: number | null
  }

  export type ActoresMinAggregateOutputType = {
    id_actor: number | null
    nombre_actor: string | null
    apellido_actor: string | null
    fecha_nacimiento: Date | null
    biografia: string | null
  }

  export type ActoresMaxAggregateOutputType = {
    id_actor: number | null
    nombre_actor: string | null
    apellido_actor: string | null
    fecha_nacimiento: Date | null
    biografia: string | null
  }

  export type ActoresCountAggregateOutputType = {
    id_actor: number
    nombre_actor: number
    apellido_actor: number
    fecha_nacimiento: number
    biografia: number
    _all: number
  }


  export type ActoresAvgAggregateInputType = {
    id_actor?: true
  }

  export type ActoresSumAggregateInputType = {
    id_actor?: true
  }

  export type ActoresMinAggregateInputType = {
    id_actor?: true
    nombre_actor?: true
    apellido_actor?: true
    fecha_nacimiento?: true
    biografia?: true
  }

  export type ActoresMaxAggregateInputType = {
    id_actor?: true
    nombre_actor?: true
    apellido_actor?: true
    fecha_nacimiento?: true
    biografia?: true
  }

  export type ActoresCountAggregateInputType = {
    id_actor?: true
    nombre_actor?: true
    apellido_actor?: true
    fecha_nacimiento?: true
    biografia?: true
    _all?: true
  }

  export type ActoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which actores to aggregate.
     */
    where?: actoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of actores to fetch.
     */
    orderBy?: actoresOrderByWithRelationInput | actoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: actoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` actores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` actores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned actores
    **/
    _count?: true | ActoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ActoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ActoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActoresMaxAggregateInputType
  }

  export type GetActoresAggregateType<T extends ActoresAggregateArgs> = {
        [P in keyof T & keyof AggregateActores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActores[P]>
      : GetScalarType<T[P], AggregateActores[P]>
  }




  export type actoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: actoresWhereInput
    orderBy?: actoresOrderByWithAggregationInput | actoresOrderByWithAggregationInput[]
    by: ActoresScalarFieldEnum[] | ActoresScalarFieldEnum
    having?: actoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActoresCountAggregateInputType | true
    _avg?: ActoresAvgAggregateInputType
    _sum?: ActoresSumAggregateInputType
    _min?: ActoresMinAggregateInputType
    _max?: ActoresMaxAggregateInputType
  }

  export type ActoresGroupByOutputType = {
    id_actor: number
    nombre_actor: string
    apellido_actor: string | null
    fecha_nacimiento: Date | null
    biografia: string | null
    _count: ActoresCountAggregateOutputType | null
    _avg: ActoresAvgAggregateOutputType | null
    _sum: ActoresSumAggregateOutputType | null
    _min: ActoresMinAggregateOutputType | null
    _max: ActoresMaxAggregateOutputType | null
  }

  type GetActoresGroupByPayload<T extends actoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ActoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActoresGroupByOutputType[P]>
            : GetScalarType<T[P], ActoresGroupByOutputType[P]>
        }
      >
    >


  export type actoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_actor?: boolean
    nombre_actor?: boolean
    apellido_actor?: boolean
    fecha_nacimiento?: boolean
    biografia?: boolean
    reparto?: boolean | actores$repartoArgs<ExtArgs>
    _count?: boolean | ActoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["actores"]>



  export type actoresSelectScalar = {
    id_actor?: boolean
    nombre_actor?: boolean
    apellido_actor?: boolean
    fecha_nacimiento?: boolean
    biografia?: boolean
  }

  export type actoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_actor" | "nombre_actor" | "apellido_actor" | "fecha_nacimiento" | "biografia", ExtArgs["result"]["actores"]>
  export type actoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reparto?: boolean | actores$repartoArgs<ExtArgs>
    _count?: boolean | ActoresCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $actoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "actores"
    objects: {
      reparto: Prisma.$repartoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_actor: number
      nombre_actor: string
      apellido_actor: string | null
      fecha_nacimiento: Date | null
      biografia: string | null
    }, ExtArgs["result"]["actores"]>
    composites: {}
  }

  type actoresGetPayload<S extends boolean | null | undefined | actoresDefaultArgs> = $Result.GetResult<Prisma.$actoresPayload, S>

  type actoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<actoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ActoresCountAggregateInputType | true
    }

  export interface actoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['actores'], meta: { name: 'actores' } }
    /**
     * Find zero or one Actores that matches the filter.
     * @param {actoresFindUniqueArgs} args - Arguments to find a Actores
     * @example
     * // Get one Actores
     * const actores = await prisma.actores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends actoresFindUniqueArgs>(args: SelectSubset<T, actoresFindUniqueArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Actores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {actoresFindUniqueOrThrowArgs} args - Arguments to find a Actores
     * @example
     * // Get one Actores
     * const actores = await prisma.actores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends actoresFindUniqueOrThrowArgs>(args: SelectSubset<T, actoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Actores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {actoresFindFirstArgs} args - Arguments to find a Actores
     * @example
     * // Get one Actores
     * const actores = await prisma.actores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends actoresFindFirstArgs>(args?: SelectSubset<T, actoresFindFirstArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Actores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {actoresFindFirstOrThrowArgs} args - Arguments to find a Actores
     * @example
     * // Get one Actores
     * const actores = await prisma.actores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends actoresFindFirstOrThrowArgs>(args?: SelectSubset<T, actoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Actores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {actoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Actores
     * const actores = await prisma.actores.findMany()
     * 
     * // Get first 10 Actores
     * const actores = await prisma.actores.findMany({ take: 10 })
     * 
     * // Only select the `id_actor`
     * const actoresWithId_actorOnly = await prisma.actores.findMany({ select: { id_actor: true } })
     * 
     */
    findMany<T extends actoresFindManyArgs>(args?: SelectSubset<T, actoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Actores.
     * @param {actoresCreateArgs} args - Arguments to create a Actores.
     * @example
     * // Create one Actores
     * const Actores = await prisma.actores.create({
     *   data: {
     *     // ... data to create a Actores
     *   }
     * })
     * 
     */
    create<T extends actoresCreateArgs>(args: SelectSubset<T, actoresCreateArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Actores.
     * @param {actoresCreateManyArgs} args - Arguments to create many Actores.
     * @example
     * // Create many Actores
     * const actores = await prisma.actores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends actoresCreateManyArgs>(args?: SelectSubset<T, actoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Actores.
     * @param {actoresDeleteArgs} args - Arguments to delete one Actores.
     * @example
     * // Delete one Actores
     * const Actores = await prisma.actores.delete({
     *   where: {
     *     // ... filter to delete one Actores
     *   }
     * })
     * 
     */
    delete<T extends actoresDeleteArgs>(args: SelectSubset<T, actoresDeleteArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Actores.
     * @param {actoresUpdateArgs} args - Arguments to update one Actores.
     * @example
     * // Update one Actores
     * const actores = await prisma.actores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends actoresUpdateArgs>(args: SelectSubset<T, actoresUpdateArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Actores.
     * @param {actoresDeleteManyArgs} args - Arguments to filter Actores to delete.
     * @example
     * // Delete a few Actores
     * const { count } = await prisma.actores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends actoresDeleteManyArgs>(args?: SelectSubset<T, actoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Actores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {actoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Actores
     * const actores = await prisma.actores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends actoresUpdateManyArgs>(args: SelectSubset<T, actoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Actores.
     * @param {actoresUpsertArgs} args - Arguments to update or create a Actores.
     * @example
     * // Update or create a Actores
     * const actores = await prisma.actores.upsert({
     *   create: {
     *     // ... data to create a Actores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Actores we want to update
     *   }
     * })
     */
    upsert<T extends actoresUpsertArgs>(args: SelectSubset<T, actoresUpsertArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Actores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {actoresCountArgs} args - Arguments to filter Actores to count.
     * @example
     * // Count the number of Actores
     * const count = await prisma.actores.count({
     *   where: {
     *     // ... the filter for the Actores we want to count
     *   }
     * })
    **/
    count<T extends actoresCountArgs>(
      args?: Subset<T, actoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Actores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActoresAggregateArgs>(args: Subset<T, ActoresAggregateArgs>): Prisma.PrismaPromise<GetActoresAggregateType<T>>

    /**
     * Group by Actores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {actoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends actoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: actoresGroupByArgs['orderBy'] }
        : { orderBy?: actoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, actoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the actores model
   */
  readonly fields: actoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for actores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__actoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reparto<T extends actores$repartoArgs<ExtArgs> = {}>(args?: Subset<T, actores$repartoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the actores model
   */
  interface actoresFieldRefs {
    readonly id_actor: FieldRef<"actores", 'Int'>
    readonly nombre_actor: FieldRef<"actores", 'String'>
    readonly apellido_actor: FieldRef<"actores", 'String'>
    readonly fecha_nacimiento: FieldRef<"actores", 'DateTime'>
    readonly biografia: FieldRef<"actores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * actores findUnique
   */
  export type actoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * Filter, which actores to fetch.
     */
    where: actoresWhereUniqueInput
  }

  /**
   * actores findUniqueOrThrow
   */
  export type actoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * Filter, which actores to fetch.
     */
    where: actoresWhereUniqueInput
  }

  /**
   * actores findFirst
   */
  export type actoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * Filter, which actores to fetch.
     */
    where?: actoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of actores to fetch.
     */
    orderBy?: actoresOrderByWithRelationInput | actoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for actores.
     */
    cursor?: actoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` actores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` actores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of actores.
     */
    distinct?: ActoresScalarFieldEnum | ActoresScalarFieldEnum[]
  }

  /**
   * actores findFirstOrThrow
   */
  export type actoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * Filter, which actores to fetch.
     */
    where?: actoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of actores to fetch.
     */
    orderBy?: actoresOrderByWithRelationInput | actoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for actores.
     */
    cursor?: actoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` actores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` actores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of actores.
     */
    distinct?: ActoresScalarFieldEnum | ActoresScalarFieldEnum[]
  }

  /**
   * actores findMany
   */
  export type actoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * Filter, which actores to fetch.
     */
    where?: actoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of actores to fetch.
     */
    orderBy?: actoresOrderByWithRelationInput | actoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing actores.
     */
    cursor?: actoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` actores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` actores.
     */
    skip?: number
    distinct?: ActoresScalarFieldEnum | ActoresScalarFieldEnum[]
  }

  /**
   * actores create
   */
  export type actoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * The data needed to create a actores.
     */
    data: XOR<actoresCreateInput, actoresUncheckedCreateInput>
  }

  /**
   * actores createMany
   */
  export type actoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many actores.
     */
    data: actoresCreateManyInput | actoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * actores update
   */
  export type actoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * The data needed to update a actores.
     */
    data: XOR<actoresUpdateInput, actoresUncheckedUpdateInput>
    /**
     * Choose, which actores to update.
     */
    where: actoresWhereUniqueInput
  }

  /**
   * actores updateMany
   */
  export type actoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update actores.
     */
    data: XOR<actoresUpdateManyMutationInput, actoresUncheckedUpdateManyInput>
    /**
     * Filter which actores to update
     */
    where?: actoresWhereInput
    /**
     * Limit how many actores to update.
     */
    limit?: number
  }

  /**
   * actores upsert
   */
  export type actoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * The filter to search for the actores to update in case it exists.
     */
    where: actoresWhereUniqueInput
    /**
     * In case the actores found by the `where` argument doesn't exist, create a new actores with this data.
     */
    create: XOR<actoresCreateInput, actoresUncheckedCreateInput>
    /**
     * In case the actores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<actoresUpdateInput, actoresUncheckedUpdateInput>
  }

  /**
   * actores delete
   */
  export type actoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
    /**
     * Filter which actores to delete.
     */
    where: actoresWhereUniqueInput
  }

  /**
   * actores deleteMany
   */
  export type actoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which actores to delete
     */
    where?: actoresWhereInput
    /**
     * Limit how many actores to delete.
     */
    limit?: number
  }

  /**
   * actores.reparto
   */
  export type actores$repartoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    where?: repartoWhereInput
    orderBy?: repartoOrderByWithRelationInput | repartoOrderByWithRelationInput[]
    cursor?: repartoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RepartoScalarFieldEnum | RepartoScalarFieldEnum[]
  }

  /**
   * actores without action
   */
  export type actoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the actores
     */
    select?: actoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the actores
     */
    omit?: actoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: actoresInclude<ExtArgs> | null
  }


  /**
   * Model boletos
   */

  export type AggregateBoletos = {
    _count: BoletosCountAggregateOutputType | null
    _avg: BoletosAvgAggregateOutputType | null
    _sum: BoletosSumAggregateOutputType | null
    _min: BoletosMinAggregateOutputType | null
    _max: BoletosMaxAggregateOutputType | null
  }

  export type BoletosAvgAggregateOutputType = {
    id_boleto: number | null
    id_funcion: number | null
    id_usuario: number | null
  }

  export type BoletosSumAggregateOutputType = {
    id_boleto: number | null
    id_funcion: number | null
    id_usuario: number | null
  }

  export type BoletosMinAggregateOutputType = {
    id_boleto: number | null
    id_funcion: number | null
    id_usuario: number | null
    asiento: string | null
    estado: $Enums.boletos_estado | null
  }

  export type BoletosMaxAggregateOutputType = {
    id_boleto: number | null
    id_funcion: number | null
    id_usuario: number | null
    asiento: string | null
    estado: $Enums.boletos_estado | null
  }

  export type BoletosCountAggregateOutputType = {
    id_boleto: number
    id_funcion: number
    id_usuario: number
    asiento: number
    estado: number
    _all: number
  }


  export type BoletosAvgAggregateInputType = {
    id_boleto?: true
    id_funcion?: true
    id_usuario?: true
  }

  export type BoletosSumAggregateInputType = {
    id_boleto?: true
    id_funcion?: true
    id_usuario?: true
  }

  export type BoletosMinAggregateInputType = {
    id_boleto?: true
    id_funcion?: true
    id_usuario?: true
    asiento?: true
    estado?: true
  }

  export type BoletosMaxAggregateInputType = {
    id_boleto?: true
    id_funcion?: true
    id_usuario?: true
    asiento?: true
    estado?: true
  }

  export type BoletosCountAggregateInputType = {
    id_boleto?: true
    id_funcion?: true
    id_usuario?: true
    asiento?: true
    estado?: true
    _all?: true
  }

  export type BoletosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which boletos to aggregate.
     */
    where?: boletosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of boletos to fetch.
     */
    orderBy?: boletosOrderByWithRelationInput | boletosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: boletosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` boletos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` boletos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned boletos
    **/
    _count?: true | BoletosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BoletosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BoletosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BoletosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BoletosMaxAggregateInputType
  }

  export type GetBoletosAggregateType<T extends BoletosAggregateArgs> = {
        [P in keyof T & keyof AggregateBoletos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBoletos[P]>
      : GetScalarType<T[P], AggregateBoletos[P]>
  }




  export type boletosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: boletosWhereInput
    orderBy?: boletosOrderByWithAggregationInput | boletosOrderByWithAggregationInput[]
    by: BoletosScalarFieldEnum[] | BoletosScalarFieldEnum
    having?: boletosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BoletosCountAggregateInputType | true
    _avg?: BoletosAvgAggregateInputType
    _sum?: BoletosSumAggregateInputType
    _min?: BoletosMinAggregateInputType
    _max?: BoletosMaxAggregateInputType
  }

  export type BoletosGroupByOutputType = {
    id_boleto: number
    id_funcion: number
    id_usuario: number
    asiento: string | null
    estado: $Enums.boletos_estado | null
    _count: BoletosCountAggregateOutputType | null
    _avg: BoletosAvgAggregateOutputType | null
    _sum: BoletosSumAggregateOutputType | null
    _min: BoletosMinAggregateOutputType | null
    _max: BoletosMaxAggregateOutputType | null
  }

  type GetBoletosGroupByPayload<T extends boletosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BoletosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BoletosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BoletosGroupByOutputType[P]>
            : GetScalarType<T[P], BoletosGroupByOutputType[P]>
        }
      >
    >


  export type boletosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_boleto?: boolean
    id_funcion?: boolean
    id_usuario?: boolean
    asiento?: boolean
    estado?: boolean
    funciones?: boolean | funcionesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    logs_actividad?: boolean | boletos$logs_actividadArgs<ExtArgs>
    _count?: boolean | BoletosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["boletos"]>



  export type boletosSelectScalar = {
    id_boleto?: boolean
    id_funcion?: boolean
    id_usuario?: boolean
    asiento?: boolean
    estado?: boolean
  }

  export type boletosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_boleto" | "id_funcion" | "id_usuario" | "asiento" | "estado", ExtArgs["result"]["boletos"]>
  export type boletosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | funcionesDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    logs_actividad?: boolean | boletos$logs_actividadArgs<ExtArgs>
    _count?: boolean | BoletosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $boletosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "boletos"
    objects: {
      funciones: Prisma.$funcionesPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
      logs_actividad: Prisma.$logs_actividadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_boleto: number
      id_funcion: number
      id_usuario: number
      asiento: string | null
      estado: $Enums.boletos_estado | null
    }, ExtArgs["result"]["boletos"]>
    composites: {}
  }

  type boletosGetPayload<S extends boolean | null | undefined | boletosDefaultArgs> = $Result.GetResult<Prisma.$boletosPayload, S>

  type boletosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<boletosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BoletosCountAggregateInputType | true
    }

  export interface boletosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['boletos'], meta: { name: 'boletos' } }
    /**
     * Find zero or one Boletos that matches the filter.
     * @param {boletosFindUniqueArgs} args - Arguments to find a Boletos
     * @example
     * // Get one Boletos
     * const boletos = await prisma.boletos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends boletosFindUniqueArgs>(args: SelectSubset<T, boletosFindUniqueArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Boletos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {boletosFindUniqueOrThrowArgs} args - Arguments to find a Boletos
     * @example
     * // Get one Boletos
     * const boletos = await prisma.boletos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends boletosFindUniqueOrThrowArgs>(args: SelectSubset<T, boletosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Boletos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {boletosFindFirstArgs} args - Arguments to find a Boletos
     * @example
     * // Get one Boletos
     * const boletos = await prisma.boletos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends boletosFindFirstArgs>(args?: SelectSubset<T, boletosFindFirstArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Boletos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {boletosFindFirstOrThrowArgs} args - Arguments to find a Boletos
     * @example
     * // Get one Boletos
     * const boletos = await prisma.boletos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends boletosFindFirstOrThrowArgs>(args?: SelectSubset<T, boletosFindFirstOrThrowArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Boletos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {boletosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Boletos
     * const boletos = await prisma.boletos.findMany()
     * 
     * // Get first 10 Boletos
     * const boletos = await prisma.boletos.findMany({ take: 10 })
     * 
     * // Only select the `id_boleto`
     * const boletosWithId_boletoOnly = await prisma.boletos.findMany({ select: { id_boleto: true } })
     * 
     */
    findMany<T extends boletosFindManyArgs>(args?: SelectSubset<T, boletosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Boletos.
     * @param {boletosCreateArgs} args - Arguments to create a Boletos.
     * @example
     * // Create one Boletos
     * const Boletos = await prisma.boletos.create({
     *   data: {
     *     // ... data to create a Boletos
     *   }
     * })
     * 
     */
    create<T extends boletosCreateArgs>(args: SelectSubset<T, boletosCreateArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Boletos.
     * @param {boletosCreateManyArgs} args - Arguments to create many Boletos.
     * @example
     * // Create many Boletos
     * const boletos = await prisma.boletos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends boletosCreateManyArgs>(args?: SelectSubset<T, boletosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Boletos.
     * @param {boletosDeleteArgs} args - Arguments to delete one Boletos.
     * @example
     * // Delete one Boletos
     * const Boletos = await prisma.boletos.delete({
     *   where: {
     *     // ... filter to delete one Boletos
     *   }
     * })
     * 
     */
    delete<T extends boletosDeleteArgs>(args: SelectSubset<T, boletosDeleteArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Boletos.
     * @param {boletosUpdateArgs} args - Arguments to update one Boletos.
     * @example
     * // Update one Boletos
     * const boletos = await prisma.boletos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends boletosUpdateArgs>(args: SelectSubset<T, boletosUpdateArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Boletos.
     * @param {boletosDeleteManyArgs} args - Arguments to filter Boletos to delete.
     * @example
     * // Delete a few Boletos
     * const { count } = await prisma.boletos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends boletosDeleteManyArgs>(args?: SelectSubset<T, boletosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Boletos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {boletosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Boletos
     * const boletos = await prisma.boletos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends boletosUpdateManyArgs>(args: SelectSubset<T, boletosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Boletos.
     * @param {boletosUpsertArgs} args - Arguments to update or create a Boletos.
     * @example
     * // Update or create a Boletos
     * const boletos = await prisma.boletos.upsert({
     *   create: {
     *     // ... data to create a Boletos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Boletos we want to update
     *   }
     * })
     */
    upsert<T extends boletosUpsertArgs>(args: SelectSubset<T, boletosUpsertArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Boletos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {boletosCountArgs} args - Arguments to filter Boletos to count.
     * @example
     * // Count the number of Boletos
     * const count = await prisma.boletos.count({
     *   where: {
     *     // ... the filter for the Boletos we want to count
     *   }
     * })
    **/
    count<T extends boletosCountArgs>(
      args?: Subset<T, boletosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BoletosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Boletos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoletosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BoletosAggregateArgs>(args: Subset<T, BoletosAggregateArgs>): Prisma.PrismaPromise<GetBoletosAggregateType<T>>

    /**
     * Group by Boletos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {boletosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends boletosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: boletosGroupByArgs['orderBy'] }
        : { orderBy?: boletosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, boletosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBoletosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the boletos model
   */
  readonly fields: boletosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for boletos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__boletosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funciones<T extends funcionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, funcionesDefaultArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logs_actividad<T extends boletos$logs_actividadArgs<ExtArgs> = {}>(args?: Subset<T, boletos$logs_actividadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the boletos model
   */
  interface boletosFieldRefs {
    readonly id_boleto: FieldRef<"boletos", 'Int'>
    readonly id_funcion: FieldRef<"boletos", 'Int'>
    readonly id_usuario: FieldRef<"boletos", 'Int'>
    readonly asiento: FieldRef<"boletos", 'String'>
    readonly estado: FieldRef<"boletos", 'boletos_estado'>
  }
    

  // Custom InputTypes
  /**
   * boletos findUnique
   */
  export type boletosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * Filter, which boletos to fetch.
     */
    where: boletosWhereUniqueInput
  }

  /**
   * boletos findUniqueOrThrow
   */
  export type boletosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * Filter, which boletos to fetch.
     */
    where: boletosWhereUniqueInput
  }

  /**
   * boletos findFirst
   */
  export type boletosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * Filter, which boletos to fetch.
     */
    where?: boletosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of boletos to fetch.
     */
    orderBy?: boletosOrderByWithRelationInput | boletosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for boletos.
     */
    cursor?: boletosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` boletos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` boletos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of boletos.
     */
    distinct?: BoletosScalarFieldEnum | BoletosScalarFieldEnum[]
  }

  /**
   * boletos findFirstOrThrow
   */
  export type boletosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * Filter, which boletos to fetch.
     */
    where?: boletosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of boletos to fetch.
     */
    orderBy?: boletosOrderByWithRelationInput | boletosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for boletos.
     */
    cursor?: boletosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` boletos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` boletos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of boletos.
     */
    distinct?: BoletosScalarFieldEnum | BoletosScalarFieldEnum[]
  }

  /**
   * boletos findMany
   */
  export type boletosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * Filter, which boletos to fetch.
     */
    where?: boletosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of boletos to fetch.
     */
    orderBy?: boletosOrderByWithRelationInput | boletosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing boletos.
     */
    cursor?: boletosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` boletos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` boletos.
     */
    skip?: number
    distinct?: BoletosScalarFieldEnum | BoletosScalarFieldEnum[]
  }

  /**
   * boletos create
   */
  export type boletosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * The data needed to create a boletos.
     */
    data: XOR<boletosCreateInput, boletosUncheckedCreateInput>
  }

  /**
   * boletos createMany
   */
  export type boletosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many boletos.
     */
    data: boletosCreateManyInput | boletosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * boletos update
   */
  export type boletosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * The data needed to update a boletos.
     */
    data: XOR<boletosUpdateInput, boletosUncheckedUpdateInput>
    /**
     * Choose, which boletos to update.
     */
    where: boletosWhereUniqueInput
  }

  /**
   * boletos updateMany
   */
  export type boletosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update boletos.
     */
    data: XOR<boletosUpdateManyMutationInput, boletosUncheckedUpdateManyInput>
    /**
     * Filter which boletos to update
     */
    where?: boletosWhereInput
    /**
     * Limit how many boletos to update.
     */
    limit?: number
  }

  /**
   * boletos upsert
   */
  export type boletosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * The filter to search for the boletos to update in case it exists.
     */
    where: boletosWhereUniqueInput
    /**
     * In case the boletos found by the `where` argument doesn't exist, create a new boletos with this data.
     */
    create: XOR<boletosCreateInput, boletosUncheckedCreateInput>
    /**
     * In case the boletos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<boletosUpdateInput, boletosUncheckedUpdateInput>
  }

  /**
   * boletos delete
   */
  export type boletosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    /**
     * Filter which boletos to delete.
     */
    where: boletosWhereUniqueInput
  }

  /**
   * boletos deleteMany
   */
  export type boletosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which boletos to delete
     */
    where?: boletosWhereInput
    /**
     * Limit how many boletos to delete.
     */
    limit?: number
  }

  /**
   * boletos.logs_actividad
   */
  export type boletos$logs_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    where?: logs_actividadWhereInput
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    cursor?: logs_actividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Logs_actividadScalarFieldEnum | Logs_actividadScalarFieldEnum[]
  }

  /**
   * boletos without action
   */
  export type boletosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
  }


  /**
   * Model candy_bar
   */

  export type AggregateCandy_bar = {
    _count: Candy_barCountAggregateOutputType | null
    _avg: Candy_barAvgAggregateOutputType | null
    _sum: Candy_barSumAggregateOutputType | null
    _min: Candy_barMinAggregateOutputType | null
    _max: Candy_barMaxAggregateOutputType | null
  }

  export type Candy_barAvgAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    precio_promocional: Decimal | null
    stock: number | null
  }

  export type Candy_barSumAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    precio_promocional: Decimal | null
    stock: number | null
  }

  export type Candy_barMinAggregateOutputType = {
    id_producto: number | null
    nombre_producto: string | null
    descripcion: string | null
    precio: Decimal | null
    imagen_url: string | null
    es_promocion: boolean | null
    precio_promocional: Decimal | null
    promo_fecha_inicio: Date | null
    promo_fecha_fin: Date | null
    categoria: string | null
    stock: number | null
  }

  export type Candy_barMaxAggregateOutputType = {
    id_producto: number | null
    nombre_producto: string | null
    descripcion: string | null
    precio: Decimal | null
    imagen_url: string | null
    es_promocion: boolean | null
    precio_promocional: Decimal | null
    promo_fecha_inicio: Date | null
    promo_fecha_fin: Date | null
    categoria: string | null
    stock: number | null
  }

  export type Candy_barCountAggregateOutputType = {
    id_producto: number
    nombre_producto: number
    descripcion: number
    precio: number
    imagen_url: number
    es_promocion: number
    precio_promocional: number
    promo_fecha_inicio: number
    promo_fecha_fin: number
    categoria: number
    stock: number
    _all: number
  }


  export type Candy_barAvgAggregateInputType = {
    id_producto?: true
    precio?: true
    precio_promocional?: true
    stock?: true
  }

  export type Candy_barSumAggregateInputType = {
    id_producto?: true
    precio?: true
    precio_promocional?: true
    stock?: true
  }

  export type Candy_barMinAggregateInputType = {
    id_producto?: true
    nombre_producto?: true
    descripcion?: true
    precio?: true
    imagen_url?: true
    es_promocion?: true
    precio_promocional?: true
    promo_fecha_inicio?: true
    promo_fecha_fin?: true
    categoria?: true
    stock?: true
  }

  export type Candy_barMaxAggregateInputType = {
    id_producto?: true
    nombre_producto?: true
    descripcion?: true
    precio?: true
    imagen_url?: true
    es_promocion?: true
    precio_promocional?: true
    promo_fecha_inicio?: true
    promo_fecha_fin?: true
    categoria?: true
    stock?: true
  }

  export type Candy_barCountAggregateInputType = {
    id_producto?: true
    nombre_producto?: true
    descripcion?: true
    precio?: true
    imagen_url?: true
    es_promocion?: true
    precio_promocional?: true
    promo_fecha_inicio?: true
    promo_fecha_fin?: true
    categoria?: true
    stock?: true
    _all?: true
  }

  export type Candy_barAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which candy_bar to aggregate.
     */
    where?: candy_barWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candy_bars to fetch.
     */
    orderBy?: candy_barOrderByWithRelationInput | candy_barOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: candy_barWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candy_bars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candy_bars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned candy_bars
    **/
    _count?: true | Candy_barCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Candy_barAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Candy_barSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Candy_barMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Candy_barMaxAggregateInputType
  }

  export type GetCandy_barAggregateType<T extends Candy_barAggregateArgs> = {
        [P in keyof T & keyof AggregateCandy_bar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandy_bar[P]>
      : GetScalarType<T[P], AggregateCandy_bar[P]>
  }




  export type candy_barGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: candy_barWhereInput
    orderBy?: candy_barOrderByWithAggregationInput | candy_barOrderByWithAggregationInput[]
    by: Candy_barScalarFieldEnum[] | Candy_barScalarFieldEnum
    having?: candy_barScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Candy_barCountAggregateInputType | true
    _avg?: Candy_barAvgAggregateInputType
    _sum?: Candy_barSumAggregateInputType
    _min?: Candy_barMinAggregateInputType
    _max?: Candy_barMaxAggregateInputType
  }

  export type Candy_barGroupByOutputType = {
    id_producto: number
    nombre_producto: string
    descripcion: string
    precio: Decimal
    imagen_url: string | null
    es_promocion: boolean
    precio_promocional: Decimal | null
    promo_fecha_inicio: Date | null
    promo_fecha_fin: Date | null
    categoria: string | null
    stock: number | null
    _count: Candy_barCountAggregateOutputType | null
    _avg: Candy_barAvgAggregateOutputType | null
    _sum: Candy_barSumAggregateOutputType | null
    _min: Candy_barMinAggregateOutputType | null
    _max: Candy_barMaxAggregateOutputType | null
  }

  type GetCandy_barGroupByPayload<T extends candy_barGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Candy_barGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Candy_barGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Candy_barGroupByOutputType[P]>
            : GetScalarType<T[P], Candy_barGroupByOutputType[P]>
        }
      >
    >


  export type candy_barSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre_producto?: boolean
    descripcion?: boolean
    precio?: boolean
    imagen_url?: boolean
    es_promocion?: boolean
    precio_promocional?: boolean
    promo_fecha_inicio?: boolean
    promo_fecha_fin?: boolean
    categoria?: boolean
    stock?: boolean
  }, ExtArgs["result"]["candy_bar"]>



  export type candy_barSelectScalar = {
    id_producto?: boolean
    nombre_producto?: boolean
    descripcion?: boolean
    precio?: boolean
    imagen_url?: boolean
    es_promocion?: boolean
    precio_promocional?: boolean
    promo_fecha_inicio?: boolean
    promo_fecha_fin?: boolean
    categoria?: boolean
    stock?: boolean
  }

  export type candy_barOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_producto" | "nombre_producto" | "descripcion" | "precio" | "imagen_url" | "es_promocion" | "precio_promocional" | "promo_fecha_inicio" | "promo_fecha_fin" | "categoria" | "stock", ExtArgs["result"]["candy_bar"]>

  export type $candy_barPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "candy_bar"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_producto: number
      nombre_producto: string
      descripcion: string
      precio: Prisma.Decimal
      imagen_url: string | null
      es_promocion: boolean
      precio_promocional: Prisma.Decimal | null
      promo_fecha_inicio: Date | null
      promo_fecha_fin: Date | null
      categoria: string | null
      stock: number | null
    }, ExtArgs["result"]["candy_bar"]>
    composites: {}
  }

  type candy_barGetPayload<S extends boolean | null | undefined | candy_barDefaultArgs> = $Result.GetResult<Prisma.$candy_barPayload, S>

  type candy_barCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<candy_barFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Candy_barCountAggregateInputType | true
    }

  export interface candy_barDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['candy_bar'], meta: { name: 'candy_bar' } }
    /**
     * Find zero or one Candy_bar that matches the filter.
     * @param {candy_barFindUniqueArgs} args - Arguments to find a Candy_bar
     * @example
     * // Get one Candy_bar
     * const candy_bar = await prisma.candy_bar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends candy_barFindUniqueArgs>(args: SelectSubset<T, candy_barFindUniqueArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Candy_bar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {candy_barFindUniqueOrThrowArgs} args - Arguments to find a Candy_bar
     * @example
     * // Get one Candy_bar
     * const candy_bar = await prisma.candy_bar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends candy_barFindUniqueOrThrowArgs>(args: SelectSubset<T, candy_barFindUniqueOrThrowArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candy_bar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candy_barFindFirstArgs} args - Arguments to find a Candy_bar
     * @example
     * // Get one Candy_bar
     * const candy_bar = await prisma.candy_bar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends candy_barFindFirstArgs>(args?: SelectSubset<T, candy_barFindFirstArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candy_bar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candy_barFindFirstOrThrowArgs} args - Arguments to find a Candy_bar
     * @example
     * // Get one Candy_bar
     * const candy_bar = await prisma.candy_bar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends candy_barFindFirstOrThrowArgs>(args?: SelectSubset<T, candy_barFindFirstOrThrowArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Candy_bars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candy_barFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candy_bars
     * const candy_bars = await prisma.candy_bar.findMany()
     * 
     * // Get first 10 Candy_bars
     * const candy_bars = await prisma.candy_bar.findMany({ take: 10 })
     * 
     * // Only select the `id_producto`
     * const candy_barWithId_productoOnly = await prisma.candy_bar.findMany({ select: { id_producto: true } })
     * 
     */
    findMany<T extends candy_barFindManyArgs>(args?: SelectSubset<T, candy_barFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Candy_bar.
     * @param {candy_barCreateArgs} args - Arguments to create a Candy_bar.
     * @example
     * // Create one Candy_bar
     * const Candy_bar = await prisma.candy_bar.create({
     *   data: {
     *     // ... data to create a Candy_bar
     *   }
     * })
     * 
     */
    create<T extends candy_barCreateArgs>(args: SelectSubset<T, candy_barCreateArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Candy_bars.
     * @param {candy_barCreateManyArgs} args - Arguments to create many Candy_bars.
     * @example
     * // Create many Candy_bars
     * const candy_bar = await prisma.candy_bar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends candy_barCreateManyArgs>(args?: SelectSubset<T, candy_barCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Candy_bar.
     * @param {candy_barDeleteArgs} args - Arguments to delete one Candy_bar.
     * @example
     * // Delete one Candy_bar
     * const Candy_bar = await prisma.candy_bar.delete({
     *   where: {
     *     // ... filter to delete one Candy_bar
     *   }
     * })
     * 
     */
    delete<T extends candy_barDeleteArgs>(args: SelectSubset<T, candy_barDeleteArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Candy_bar.
     * @param {candy_barUpdateArgs} args - Arguments to update one Candy_bar.
     * @example
     * // Update one Candy_bar
     * const candy_bar = await prisma.candy_bar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends candy_barUpdateArgs>(args: SelectSubset<T, candy_barUpdateArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Candy_bars.
     * @param {candy_barDeleteManyArgs} args - Arguments to filter Candy_bars to delete.
     * @example
     * // Delete a few Candy_bars
     * const { count } = await prisma.candy_bar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends candy_barDeleteManyArgs>(args?: SelectSubset<T, candy_barDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candy_bars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candy_barUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candy_bars
     * const candy_bar = await prisma.candy_bar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends candy_barUpdateManyArgs>(args: SelectSubset<T, candy_barUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Candy_bar.
     * @param {candy_barUpsertArgs} args - Arguments to update or create a Candy_bar.
     * @example
     * // Update or create a Candy_bar
     * const candy_bar = await prisma.candy_bar.upsert({
     *   create: {
     *     // ... data to create a Candy_bar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candy_bar we want to update
     *   }
     * })
     */
    upsert<T extends candy_barUpsertArgs>(args: SelectSubset<T, candy_barUpsertArgs<ExtArgs>>): Prisma__candy_barClient<$Result.GetResult<Prisma.$candy_barPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Candy_bars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candy_barCountArgs} args - Arguments to filter Candy_bars to count.
     * @example
     * // Count the number of Candy_bars
     * const count = await prisma.candy_bar.count({
     *   where: {
     *     // ... the filter for the Candy_bars we want to count
     *   }
     * })
    **/
    count<T extends candy_barCountArgs>(
      args?: Subset<T, candy_barCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Candy_barCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candy_bar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Candy_barAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Candy_barAggregateArgs>(args: Subset<T, Candy_barAggregateArgs>): Prisma.PrismaPromise<GetCandy_barAggregateType<T>>

    /**
     * Group by Candy_bar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {candy_barGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends candy_barGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: candy_barGroupByArgs['orderBy'] }
        : { orderBy?: candy_barGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, candy_barGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandy_barGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the candy_bar model
   */
  readonly fields: candy_barFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for candy_bar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__candy_barClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the candy_bar model
   */
  interface candy_barFieldRefs {
    readonly id_producto: FieldRef<"candy_bar", 'Int'>
    readonly nombre_producto: FieldRef<"candy_bar", 'String'>
    readonly descripcion: FieldRef<"candy_bar", 'String'>
    readonly precio: FieldRef<"candy_bar", 'Decimal'>
    readonly imagen_url: FieldRef<"candy_bar", 'String'>
    readonly es_promocion: FieldRef<"candy_bar", 'Boolean'>
    readonly precio_promocional: FieldRef<"candy_bar", 'Decimal'>
    readonly promo_fecha_inicio: FieldRef<"candy_bar", 'DateTime'>
    readonly promo_fecha_fin: FieldRef<"candy_bar", 'DateTime'>
    readonly categoria: FieldRef<"candy_bar", 'String'>
    readonly stock: FieldRef<"candy_bar", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * candy_bar findUnique
   */
  export type candy_barFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * Filter, which candy_bar to fetch.
     */
    where: candy_barWhereUniqueInput
  }

  /**
   * candy_bar findUniqueOrThrow
   */
  export type candy_barFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * Filter, which candy_bar to fetch.
     */
    where: candy_barWhereUniqueInput
  }

  /**
   * candy_bar findFirst
   */
  export type candy_barFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * Filter, which candy_bar to fetch.
     */
    where?: candy_barWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candy_bars to fetch.
     */
    orderBy?: candy_barOrderByWithRelationInput | candy_barOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for candy_bars.
     */
    cursor?: candy_barWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candy_bars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candy_bars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of candy_bars.
     */
    distinct?: Candy_barScalarFieldEnum | Candy_barScalarFieldEnum[]
  }

  /**
   * candy_bar findFirstOrThrow
   */
  export type candy_barFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * Filter, which candy_bar to fetch.
     */
    where?: candy_barWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candy_bars to fetch.
     */
    orderBy?: candy_barOrderByWithRelationInput | candy_barOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for candy_bars.
     */
    cursor?: candy_barWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candy_bars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candy_bars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of candy_bars.
     */
    distinct?: Candy_barScalarFieldEnum | Candy_barScalarFieldEnum[]
  }

  /**
   * candy_bar findMany
   */
  export type candy_barFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * Filter, which candy_bars to fetch.
     */
    where?: candy_barWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of candy_bars to fetch.
     */
    orderBy?: candy_barOrderByWithRelationInput | candy_barOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing candy_bars.
     */
    cursor?: candy_barWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` candy_bars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` candy_bars.
     */
    skip?: number
    distinct?: Candy_barScalarFieldEnum | Candy_barScalarFieldEnum[]
  }

  /**
   * candy_bar create
   */
  export type candy_barCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * The data needed to create a candy_bar.
     */
    data: XOR<candy_barCreateInput, candy_barUncheckedCreateInput>
  }

  /**
   * candy_bar createMany
   */
  export type candy_barCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many candy_bars.
     */
    data: candy_barCreateManyInput | candy_barCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * candy_bar update
   */
  export type candy_barUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * The data needed to update a candy_bar.
     */
    data: XOR<candy_barUpdateInput, candy_barUncheckedUpdateInput>
    /**
     * Choose, which candy_bar to update.
     */
    where: candy_barWhereUniqueInput
  }

  /**
   * candy_bar updateMany
   */
  export type candy_barUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update candy_bars.
     */
    data: XOR<candy_barUpdateManyMutationInput, candy_barUncheckedUpdateManyInput>
    /**
     * Filter which candy_bars to update
     */
    where?: candy_barWhereInput
    /**
     * Limit how many candy_bars to update.
     */
    limit?: number
  }

  /**
   * candy_bar upsert
   */
  export type candy_barUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * The filter to search for the candy_bar to update in case it exists.
     */
    where: candy_barWhereUniqueInput
    /**
     * In case the candy_bar found by the `where` argument doesn't exist, create a new candy_bar with this data.
     */
    create: XOR<candy_barCreateInput, candy_barUncheckedCreateInput>
    /**
     * In case the candy_bar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<candy_barUpdateInput, candy_barUncheckedUpdateInput>
  }

  /**
   * candy_bar delete
   */
  export type candy_barDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
    /**
     * Filter which candy_bar to delete.
     */
    where: candy_barWhereUniqueInput
  }

  /**
   * candy_bar deleteMany
   */
  export type candy_barDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which candy_bars to delete
     */
    where?: candy_barWhereInput
    /**
     * Limit how many candy_bars to delete.
     */
    limit?: number
  }

  /**
   * candy_bar without action
   */
  export type candy_barDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the candy_bar
     */
    select?: candy_barSelect<ExtArgs> | null
    /**
     * Omit specific fields from the candy_bar
     */
    omit?: candy_barOmit<ExtArgs> | null
  }


  /**
   * Model carteleras
   */

  export type AggregateCarteleras = {
    _count: CartelerasCountAggregateOutputType | null
    _avg: CartelerasAvgAggregateOutputType | null
    _sum: CartelerasSumAggregateOutputType | null
    _min: CartelerasMinAggregateOutputType | null
    _max: CartelerasMaxAggregateOutputType | null
  }

  export type CartelerasAvgAggregateOutputType = {
    id_cartelera: number | null
  }

  export type CartelerasSumAggregateOutputType = {
    id_cartelera: number | null
  }

  export type CartelerasMinAggregateOutputType = {
    id_cartelera: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    descripcion: string | null
  }

  export type CartelerasMaxAggregateOutputType = {
    id_cartelera: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    descripcion: string | null
  }

  export type CartelerasCountAggregateOutputType = {
    id_cartelera: number
    fecha_inicio: number
    fecha_fin: number
    descripcion: number
    _all: number
  }


  export type CartelerasAvgAggregateInputType = {
    id_cartelera?: true
  }

  export type CartelerasSumAggregateInputType = {
    id_cartelera?: true
  }

  export type CartelerasMinAggregateInputType = {
    id_cartelera?: true
    fecha_inicio?: true
    fecha_fin?: true
    descripcion?: true
  }

  export type CartelerasMaxAggregateInputType = {
    id_cartelera?: true
    fecha_inicio?: true
    fecha_fin?: true
    descripcion?: true
  }

  export type CartelerasCountAggregateInputType = {
    id_cartelera?: true
    fecha_inicio?: true
    fecha_fin?: true
    descripcion?: true
    _all?: true
  }

  export type CartelerasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which carteleras to aggregate.
     */
    where?: cartelerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carteleras to fetch.
     */
    orderBy?: cartelerasOrderByWithRelationInput | cartelerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cartelerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carteleras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carteleras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned carteleras
    **/
    _count?: true | CartelerasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CartelerasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CartelerasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CartelerasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CartelerasMaxAggregateInputType
  }

  export type GetCartelerasAggregateType<T extends CartelerasAggregateArgs> = {
        [P in keyof T & keyof AggregateCarteleras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarteleras[P]>
      : GetScalarType<T[P], AggregateCarteleras[P]>
  }




  export type cartelerasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cartelerasWhereInput
    orderBy?: cartelerasOrderByWithAggregationInput | cartelerasOrderByWithAggregationInput[]
    by: CartelerasScalarFieldEnum[] | CartelerasScalarFieldEnum
    having?: cartelerasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CartelerasCountAggregateInputType | true
    _avg?: CartelerasAvgAggregateInputType
    _sum?: CartelerasSumAggregateInputType
    _min?: CartelerasMinAggregateInputType
    _max?: CartelerasMaxAggregateInputType
  }

  export type CartelerasGroupByOutputType = {
    id_cartelera: number
    fecha_inicio: Date
    fecha_fin: Date
    descripcion: string | null
    _count: CartelerasCountAggregateOutputType | null
    _avg: CartelerasAvgAggregateOutputType | null
    _sum: CartelerasSumAggregateOutputType | null
    _min: CartelerasMinAggregateOutputType | null
    _max: CartelerasMaxAggregateOutputType | null
  }

  type GetCartelerasGroupByPayload<T extends cartelerasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CartelerasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CartelerasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CartelerasGroupByOutputType[P]>
            : GetScalarType<T[P], CartelerasGroupByOutputType[P]>
        }
      >
    >


  export type cartelerasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cartelera?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    descripcion?: boolean
    funciones?: boolean | carteleras$funcionesArgs<ExtArgs>
    _count?: boolean | CartelerasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carteleras"]>



  export type cartelerasSelectScalar = {
    id_cartelera?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    descripcion?: boolean
  }

  export type cartelerasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cartelera" | "fecha_inicio" | "fecha_fin" | "descripcion", ExtArgs["result"]["carteleras"]>
  export type cartelerasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | carteleras$funcionesArgs<ExtArgs>
    _count?: boolean | CartelerasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $cartelerasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "carteleras"
    objects: {
      funciones: Prisma.$funcionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cartelera: number
      fecha_inicio: Date
      fecha_fin: Date
      descripcion: string | null
    }, ExtArgs["result"]["carteleras"]>
    composites: {}
  }

  type cartelerasGetPayload<S extends boolean | null | undefined | cartelerasDefaultArgs> = $Result.GetResult<Prisma.$cartelerasPayload, S>

  type cartelerasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cartelerasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CartelerasCountAggregateInputType | true
    }

  export interface cartelerasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['carteleras'], meta: { name: 'carteleras' } }
    /**
     * Find zero or one Carteleras that matches the filter.
     * @param {cartelerasFindUniqueArgs} args - Arguments to find a Carteleras
     * @example
     * // Get one Carteleras
     * const carteleras = await prisma.carteleras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cartelerasFindUniqueArgs>(args: SelectSubset<T, cartelerasFindUniqueArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Carteleras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cartelerasFindUniqueOrThrowArgs} args - Arguments to find a Carteleras
     * @example
     * // Get one Carteleras
     * const carteleras = await prisma.carteleras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cartelerasFindUniqueOrThrowArgs>(args: SelectSubset<T, cartelerasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Carteleras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartelerasFindFirstArgs} args - Arguments to find a Carteleras
     * @example
     * // Get one Carteleras
     * const carteleras = await prisma.carteleras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cartelerasFindFirstArgs>(args?: SelectSubset<T, cartelerasFindFirstArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Carteleras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartelerasFindFirstOrThrowArgs} args - Arguments to find a Carteleras
     * @example
     * // Get one Carteleras
     * const carteleras = await prisma.carteleras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cartelerasFindFirstOrThrowArgs>(args?: SelectSubset<T, cartelerasFindFirstOrThrowArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Carteleras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartelerasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Carteleras
     * const carteleras = await prisma.carteleras.findMany()
     * 
     * // Get first 10 Carteleras
     * const carteleras = await prisma.carteleras.findMany({ take: 10 })
     * 
     * // Only select the `id_cartelera`
     * const cartelerasWithId_carteleraOnly = await prisma.carteleras.findMany({ select: { id_cartelera: true } })
     * 
     */
    findMany<T extends cartelerasFindManyArgs>(args?: SelectSubset<T, cartelerasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Carteleras.
     * @param {cartelerasCreateArgs} args - Arguments to create a Carteleras.
     * @example
     * // Create one Carteleras
     * const Carteleras = await prisma.carteleras.create({
     *   data: {
     *     // ... data to create a Carteleras
     *   }
     * })
     * 
     */
    create<T extends cartelerasCreateArgs>(args: SelectSubset<T, cartelerasCreateArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Carteleras.
     * @param {cartelerasCreateManyArgs} args - Arguments to create many Carteleras.
     * @example
     * // Create many Carteleras
     * const carteleras = await prisma.carteleras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cartelerasCreateManyArgs>(args?: SelectSubset<T, cartelerasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Carteleras.
     * @param {cartelerasDeleteArgs} args - Arguments to delete one Carteleras.
     * @example
     * // Delete one Carteleras
     * const Carteleras = await prisma.carteleras.delete({
     *   where: {
     *     // ... filter to delete one Carteleras
     *   }
     * })
     * 
     */
    delete<T extends cartelerasDeleteArgs>(args: SelectSubset<T, cartelerasDeleteArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Carteleras.
     * @param {cartelerasUpdateArgs} args - Arguments to update one Carteleras.
     * @example
     * // Update one Carteleras
     * const carteleras = await prisma.carteleras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cartelerasUpdateArgs>(args: SelectSubset<T, cartelerasUpdateArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Carteleras.
     * @param {cartelerasDeleteManyArgs} args - Arguments to filter Carteleras to delete.
     * @example
     * // Delete a few Carteleras
     * const { count } = await prisma.carteleras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cartelerasDeleteManyArgs>(args?: SelectSubset<T, cartelerasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carteleras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartelerasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Carteleras
     * const carteleras = await prisma.carteleras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cartelerasUpdateManyArgs>(args: SelectSubset<T, cartelerasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Carteleras.
     * @param {cartelerasUpsertArgs} args - Arguments to update or create a Carteleras.
     * @example
     * // Update or create a Carteleras
     * const carteleras = await prisma.carteleras.upsert({
     *   create: {
     *     // ... data to create a Carteleras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Carteleras we want to update
     *   }
     * })
     */
    upsert<T extends cartelerasUpsertArgs>(args: SelectSubset<T, cartelerasUpsertArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Carteleras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartelerasCountArgs} args - Arguments to filter Carteleras to count.
     * @example
     * // Count the number of Carteleras
     * const count = await prisma.carteleras.count({
     *   where: {
     *     // ... the filter for the Carteleras we want to count
     *   }
     * })
    **/
    count<T extends cartelerasCountArgs>(
      args?: Subset<T, cartelerasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CartelerasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Carteleras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartelerasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CartelerasAggregateArgs>(args: Subset<T, CartelerasAggregateArgs>): Prisma.PrismaPromise<GetCartelerasAggregateType<T>>

    /**
     * Group by Carteleras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartelerasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cartelerasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cartelerasGroupByArgs['orderBy'] }
        : { orderBy?: cartelerasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cartelerasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCartelerasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the carteleras model
   */
  readonly fields: cartelerasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for carteleras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cartelerasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funciones<T extends carteleras$funcionesArgs<ExtArgs> = {}>(args?: Subset<T, carteleras$funcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the carteleras model
   */
  interface cartelerasFieldRefs {
    readonly id_cartelera: FieldRef<"carteleras", 'Int'>
    readonly fecha_inicio: FieldRef<"carteleras", 'DateTime'>
    readonly fecha_fin: FieldRef<"carteleras", 'DateTime'>
    readonly descripcion: FieldRef<"carteleras", 'String'>
  }
    

  // Custom InputTypes
  /**
   * carteleras findUnique
   */
  export type cartelerasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * Filter, which carteleras to fetch.
     */
    where: cartelerasWhereUniqueInput
  }

  /**
   * carteleras findUniqueOrThrow
   */
  export type cartelerasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * Filter, which carteleras to fetch.
     */
    where: cartelerasWhereUniqueInput
  }

  /**
   * carteleras findFirst
   */
  export type cartelerasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * Filter, which carteleras to fetch.
     */
    where?: cartelerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carteleras to fetch.
     */
    orderBy?: cartelerasOrderByWithRelationInput | cartelerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for carteleras.
     */
    cursor?: cartelerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carteleras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carteleras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of carteleras.
     */
    distinct?: CartelerasScalarFieldEnum | CartelerasScalarFieldEnum[]
  }

  /**
   * carteleras findFirstOrThrow
   */
  export type cartelerasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * Filter, which carteleras to fetch.
     */
    where?: cartelerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carteleras to fetch.
     */
    orderBy?: cartelerasOrderByWithRelationInput | cartelerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for carteleras.
     */
    cursor?: cartelerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carteleras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carteleras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of carteleras.
     */
    distinct?: CartelerasScalarFieldEnum | CartelerasScalarFieldEnum[]
  }

  /**
   * carteleras findMany
   */
  export type cartelerasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * Filter, which carteleras to fetch.
     */
    where?: cartelerasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carteleras to fetch.
     */
    orderBy?: cartelerasOrderByWithRelationInput | cartelerasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing carteleras.
     */
    cursor?: cartelerasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carteleras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carteleras.
     */
    skip?: number
    distinct?: CartelerasScalarFieldEnum | CartelerasScalarFieldEnum[]
  }

  /**
   * carteleras create
   */
  export type cartelerasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * The data needed to create a carteleras.
     */
    data: XOR<cartelerasCreateInput, cartelerasUncheckedCreateInput>
  }

  /**
   * carteleras createMany
   */
  export type cartelerasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many carteleras.
     */
    data: cartelerasCreateManyInput | cartelerasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * carteleras update
   */
  export type cartelerasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * The data needed to update a carteleras.
     */
    data: XOR<cartelerasUpdateInput, cartelerasUncheckedUpdateInput>
    /**
     * Choose, which carteleras to update.
     */
    where: cartelerasWhereUniqueInput
  }

  /**
   * carteleras updateMany
   */
  export type cartelerasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update carteleras.
     */
    data: XOR<cartelerasUpdateManyMutationInput, cartelerasUncheckedUpdateManyInput>
    /**
     * Filter which carteleras to update
     */
    where?: cartelerasWhereInput
    /**
     * Limit how many carteleras to update.
     */
    limit?: number
  }

  /**
   * carteleras upsert
   */
  export type cartelerasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * The filter to search for the carteleras to update in case it exists.
     */
    where: cartelerasWhereUniqueInput
    /**
     * In case the carteleras found by the `where` argument doesn't exist, create a new carteleras with this data.
     */
    create: XOR<cartelerasCreateInput, cartelerasUncheckedCreateInput>
    /**
     * In case the carteleras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cartelerasUpdateInput, cartelerasUncheckedUpdateInput>
  }

  /**
   * carteleras delete
   */
  export type cartelerasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
    /**
     * Filter which carteleras to delete.
     */
    where: cartelerasWhereUniqueInput
  }

  /**
   * carteleras deleteMany
   */
  export type cartelerasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which carteleras to delete
     */
    where?: cartelerasWhereInput
    /**
     * Limit how many carteleras to delete.
     */
    limit?: number
  }

  /**
   * carteleras.funciones
   */
  export type carteleras$funcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    where?: funcionesWhereInput
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    cursor?: funcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionesScalarFieldEnum | FuncionesScalarFieldEnum[]
  }

  /**
   * carteleras without action
   */
  export type cartelerasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carteleras
     */
    select?: cartelerasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carteleras
     */
    omit?: cartelerasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartelerasInclude<ExtArgs> | null
  }


  /**
   * Model cines
   */

  export type AggregateCines = {
    _count: CinesCountAggregateOutputType | null
    _avg: CinesAvgAggregateOutputType | null
    _sum: CinesSumAggregateOutputType | null
    _min: CinesMinAggregateOutputType | null
    _max: CinesMaxAggregateOutputType | null
  }

  export type CinesAvgAggregateOutputType = {
    id_cine: number | null
  }

  export type CinesSumAggregateOutputType = {
    id_cine: number | null
  }

  export type CinesMinAggregateOutputType = {
    id_cine: number | null
    nombre_cine: string | null
    direccion: string | null
    telefono: string | null
    facebook_url: string | null
    instagram_url: string | null
    tiktok_url: string | null
    email: string | null
    ubicacion_url: string | null
  }

  export type CinesMaxAggregateOutputType = {
    id_cine: number | null
    nombre_cine: string | null
    direccion: string | null
    telefono: string | null
    facebook_url: string | null
    instagram_url: string | null
    tiktok_url: string | null
    email: string | null
    ubicacion_url: string | null
  }

  export type CinesCountAggregateOutputType = {
    id_cine: number
    nombre_cine: number
    direccion: number
    telefono: number
    facebook_url: number
    instagram_url: number
    tiktok_url: number
    email: number
    ubicacion_url: number
    _all: number
  }


  export type CinesAvgAggregateInputType = {
    id_cine?: true
  }

  export type CinesSumAggregateInputType = {
    id_cine?: true
  }

  export type CinesMinAggregateInputType = {
    id_cine?: true
    nombre_cine?: true
    direccion?: true
    telefono?: true
    facebook_url?: true
    instagram_url?: true
    tiktok_url?: true
    email?: true
    ubicacion_url?: true
  }

  export type CinesMaxAggregateInputType = {
    id_cine?: true
    nombre_cine?: true
    direccion?: true
    telefono?: true
    facebook_url?: true
    instagram_url?: true
    tiktok_url?: true
    email?: true
    ubicacion_url?: true
  }

  export type CinesCountAggregateInputType = {
    id_cine?: true
    nombre_cine?: true
    direccion?: true
    telefono?: true
    facebook_url?: true
    instagram_url?: true
    tiktok_url?: true
    email?: true
    ubicacion_url?: true
    _all?: true
  }

  export type CinesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cines to aggregate.
     */
    where?: cinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cines to fetch.
     */
    orderBy?: cinesOrderByWithRelationInput | cinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cines
    **/
    _count?: true | CinesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CinesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CinesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CinesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CinesMaxAggregateInputType
  }

  export type GetCinesAggregateType<T extends CinesAggregateArgs> = {
        [P in keyof T & keyof AggregateCines]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCines[P]>
      : GetScalarType<T[P], AggregateCines[P]>
  }




  export type cinesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cinesWhereInput
    orderBy?: cinesOrderByWithAggregationInput | cinesOrderByWithAggregationInput[]
    by: CinesScalarFieldEnum[] | CinesScalarFieldEnum
    having?: cinesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CinesCountAggregateInputType | true
    _avg?: CinesAvgAggregateInputType
    _sum?: CinesSumAggregateInputType
    _min?: CinesMinAggregateInputType
    _max?: CinesMaxAggregateInputType
  }

  export type CinesGroupByOutputType = {
    id_cine: number
    nombre_cine: string
    direccion: string | null
    telefono: string | null
    facebook_url: string | null
    instagram_url: string | null
    tiktok_url: string | null
    email: string | null
    ubicacion_url: string | null
    _count: CinesCountAggregateOutputType | null
    _avg: CinesAvgAggregateOutputType | null
    _sum: CinesSumAggregateOutputType | null
    _min: CinesMinAggregateOutputType | null
    _max: CinesMaxAggregateOutputType | null
  }

  type GetCinesGroupByPayload<T extends cinesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CinesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CinesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CinesGroupByOutputType[P]>
            : GetScalarType<T[P], CinesGroupByOutputType[P]>
        }
      >
    >


  export type cinesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cine?: boolean
    nombre_cine?: boolean
    direccion?: boolean
    telefono?: boolean
    facebook_url?: boolean
    instagram_url?: boolean
    tiktok_url?: boolean
    email?: boolean
    ubicacion_url?: boolean
    empleados?: boolean | cines$empleadosArgs<ExtArgs>
    salas?: boolean | cines$salasArgs<ExtArgs>
    _count?: boolean | CinesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cines"]>



  export type cinesSelectScalar = {
    id_cine?: boolean
    nombre_cine?: boolean
    direccion?: boolean
    telefono?: boolean
    facebook_url?: boolean
    instagram_url?: boolean
    tiktok_url?: boolean
    email?: boolean
    ubicacion_url?: boolean
  }

  export type cinesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cine" | "nombre_cine" | "direccion" | "telefono" | "facebook_url" | "instagram_url" | "tiktok_url" | "email" | "ubicacion_url", ExtArgs["result"]["cines"]>
  export type cinesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | cines$empleadosArgs<ExtArgs>
    salas?: boolean | cines$salasArgs<ExtArgs>
    _count?: boolean | CinesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $cinesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cines"
    objects: {
      empleados: Prisma.$empleadosPayload<ExtArgs>[]
      salas: Prisma.$salasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cine: number
      nombre_cine: string
      direccion: string | null
      telefono: string | null
      facebook_url: string | null
      instagram_url: string | null
      tiktok_url: string | null
      email: string | null
      ubicacion_url: string | null
    }, ExtArgs["result"]["cines"]>
    composites: {}
  }

  type cinesGetPayload<S extends boolean | null | undefined | cinesDefaultArgs> = $Result.GetResult<Prisma.$cinesPayload, S>

  type cinesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cinesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CinesCountAggregateInputType | true
    }

  export interface cinesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cines'], meta: { name: 'cines' } }
    /**
     * Find zero or one Cines that matches the filter.
     * @param {cinesFindUniqueArgs} args - Arguments to find a Cines
     * @example
     * // Get one Cines
     * const cines = await prisma.cines.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cinesFindUniqueArgs>(args: SelectSubset<T, cinesFindUniqueArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cines that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cinesFindUniqueOrThrowArgs} args - Arguments to find a Cines
     * @example
     * // Get one Cines
     * const cines = await prisma.cines.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cinesFindUniqueOrThrowArgs>(args: SelectSubset<T, cinesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cinesFindFirstArgs} args - Arguments to find a Cines
     * @example
     * // Get one Cines
     * const cines = await prisma.cines.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cinesFindFirstArgs>(args?: SelectSubset<T, cinesFindFirstArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cines that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cinesFindFirstOrThrowArgs} args - Arguments to find a Cines
     * @example
     * // Get one Cines
     * const cines = await prisma.cines.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cinesFindFirstOrThrowArgs>(args?: SelectSubset<T, cinesFindFirstOrThrowArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cinesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cines
     * const cines = await prisma.cines.findMany()
     * 
     * // Get first 10 Cines
     * const cines = await prisma.cines.findMany({ take: 10 })
     * 
     * // Only select the `id_cine`
     * const cinesWithId_cineOnly = await prisma.cines.findMany({ select: { id_cine: true } })
     * 
     */
    findMany<T extends cinesFindManyArgs>(args?: SelectSubset<T, cinesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cines.
     * @param {cinesCreateArgs} args - Arguments to create a Cines.
     * @example
     * // Create one Cines
     * const Cines = await prisma.cines.create({
     *   data: {
     *     // ... data to create a Cines
     *   }
     * })
     * 
     */
    create<T extends cinesCreateArgs>(args: SelectSubset<T, cinesCreateArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cines.
     * @param {cinesCreateManyArgs} args - Arguments to create many Cines.
     * @example
     * // Create many Cines
     * const cines = await prisma.cines.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cinesCreateManyArgs>(args?: SelectSubset<T, cinesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cines.
     * @param {cinesDeleteArgs} args - Arguments to delete one Cines.
     * @example
     * // Delete one Cines
     * const Cines = await prisma.cines.delete({
     *   where: {
     *     // ... filter to delete one Cines
     *   }
     * })
     * 
     */
    delete<T extends cinesDeleteArgs>(args: SelectSubset<T, cinesDeleteArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cines.
     * @param {cinesUpdateArgs} args - Arguments to update one Cines.
     * @example
     * // Update one Cines
     * const cines = await prisma.cines.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cinesUpdateArgs>(args: SelectSubset<T, cinesUpdateArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cines.
     * @param {cinesDeleteManyArgs} args - Arguments to filter Cines to delete.
     * @example
     * // Delete a few Cines
     * const { count } = await prisma.cines.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cinesDeleteManyArgs>(args?: SelectSubset<T, cinesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cinesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cines
     * const cines = await prisma.cines.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cinesUpdateManyArgs>(args: SelectSubset<T, cinesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cines.
     * @param {cinesUpsertArgs} args - Arguments to update or create a Cines.
     * @example
     * // Update or create a Cines
     * const cines = await prisma.cines.upsert({
     *   create: {
     *     // ... data to create a Cines
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cines we want to update
     *   }
     * })
     */
    upsert<T extends cinesUpsertArgs>(args: SelectSubset<T, cinesUpsertArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cinesCountArgs} args - Arguments to filter Cines to count.
     * @example
     * // Count the number of Cines
     * const count = await prisma.cines.count({
     *   where: {
     *     // ... the filter for the Cines we want to count
     *   }
     * })
    **/
    count<T extends cinesCountArgs>(
      args?: Subset<T, cinesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CinesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CinesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CinesAggregateArgs>(args: Subset<T, CinesAggregateArgs>): Prisma.PrismaPromise<GetCinesAggregateType<T>>

    /**
     * Group by Cines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cinesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cinesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cinesGroupByArgs['orderBy'] }
        : { orderBy?: cinesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cinesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCinesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cines model
   */
  readonly fields: cinesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cines.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cinesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleados<T extends cines$empleadosArgs<ExtArgs> = {}>(args?: Subset<T, cines$empleadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    salas<T extends cines$salasArgs<ExtArgs> = {}>(args?: Subset<T, cines$salasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cines model
   */
  interface cinesFieldRefs {
    readonly id_cine: FieldRef<"cines", 'Int'>
    readonly nombre_cine: FieldRef<"cines", 'String'>
    readonly direccion: FieldRef<"cines", 'String'>
    readonly telefono: FieldRef<"cines", 'String'>
    readonly facebook_url: FieldRef<"cines", 'String'>
    readonly instagram_url: FieldRef<"cines", 'String'>
    readonly tiktok_url: FieldRef<"cines", 'String'>
    readonly email: FieldRef<"cines", 'String'>
    readonly ubicacion_url: FieldRef<"cines", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cines findUnique
   */
  export type cinesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * Filter, which cines to fetch.
     */
    where: cinesWhereUniqueInput
  }

  /**
   * cines findUniqueOrThrow
   */
  export type cinesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * Filter, which cines to fetch.
     */
    where: cinesWhereUniqueInput
  }

  /**
   * cines findFirst
   */
  export type cinesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * Filter, which cines to fetch.
     */
    where?: cinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cines to fetch.
     */
    orderBy?: cinesOrderByWithRelationInput | cinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cines.
     */
    cursor?: cinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cines.
     */
    distinct?: CinesScalarFieldEnum | CinesScalarFieldEnum[]
  }

  /**
   * cines findFirstOrThrow
   */
  export type cinesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * Filter, which cines to fetch.
     */
    where?: cinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cines to fetch.
     */
    orderBy?: cinesOrderByWithRelationInput | cinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cines.
     */
    cursor?: cinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cines.
     */
    distinct?: CinesScalarFieldEnum | CinesScalarFieldEnum[]
  }

  /**
   * cines findMany
   */
  export type cinesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * Filter, which cines to fetch.
     */
    where?: cinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cines to fetch.
     */
    orderBy?: cinesOrderByWithRelationInput | cinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cines.
     */
    cursor?: cinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cines.
     */
    skip?: number
    distinct?: CinesScalarFieldEnum | CinesScalarFieldEnum[]
  }

  /**
   * cines create
   */
  export type cinesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * The data needed to create a cines.
     */
    data: XOR<cinesCreateInput, cinesUncheckedCreateInput>
  }

  /**
   * cines createMany
   */
  export type cinesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cines.
     */
    data: cinesCreateManyInput | cinesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cines update
   */
  export type cinesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * The data needed to update a cines.
     */
    data: XOR<cinesUpdateInput, cinesUncheckedUpdateInput>
    /**
     * Choose, which cines to update.
     */
    where: cinesWhereUniqueInput
  }

  /**
   * cines updateMany
   */
  export type cinesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cines.
     */
    data: XOR<cinesUpdateManyMutationInput, cinesUncheckedUpdateManyInput>
    /**
     * Filter which cines to update
     */
    where?: cinesWhereInput
    /**
     * Limit how many cines to update.
     */
    limit?: number
  }

  /**
   * cines upsert
   */
  export type cinesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * The filter to search for the cines to update in case it exists.
     */
    where: cinesWhereUniqueInput
    /**
     * In case the cines found by the `where` argument doesn't exist, create a new cines with this data.
     */
    create: XOR<cinesCreateInput, cinesUncheckedCreateInput>
    /**
     * In case the cines was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cinesUpdateInput, cinesUncheckedUpdateInput>
  }

  /**
   * cines delete
   */
  export type cinesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    /**
     * Filter which cines to delete.
     */
    where: cinesWhereUniqueInput
  }

  /**
   * cines deleteMany
   */
  export type cinesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cines to delete
     */
    where?: cinesWhereInput
    /**
     * Limit how many cines to delete.
     */
    limit?: number
  }

  /**
   * cines.empleados
   */
  export type cines$empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    where?: empleadosWhereInput
    orderBy?: empleadosOrderByWithRelationInput | empleadosOrderByWithRelationInput[]
    cursor?: empleadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpleadosScalarFieldEnum | EmpleadosScalarFieldEnum[]
  }

  /**
   * cines.salas
   */
  export type cines$salasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    where?: salasWhereInput
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    cursor?: salasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * cines without action
   */
  export type cinesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
  }


  /**
   * Model clasificaciones
   */

  export type AggregateClasificaciones = {
    _count: ClasificacionesCountAggregateOutputType | null
    _avg: ClasificacionesAvgAggregateOutputType | null
    _sum: ClasificacionesSumAggregateOutputType | null
    _min: ClasificacionesMinAggregateOutputType | null
    _max: ClasificacionesMaxAggregateOutputType | null
  }

  export type ClasificacionesAvgAggregateOutputType = {
    id_clasificacion: number | null
  }

  export type ClasificacionesSumAggregateOutputType = {
    id_clasificacion: number | null
  }

  export type ClasificacionesMinAggregateOutputType = {
    id_clasificacion: number | null
    codigo: string | null
    descripcion: string | null
  }

  export type ClasificacionesMaxAggregateOutputType = {
    id_clasificacion: number | null
    codigo: string | null
    descripcion: string | null
  }

  export type ClasificacionesCountAggregateOutputType = {
    id_clasificacion: number
    codigo: number
    descripcion: number
    _all: number
  }


  export type ClasificacionesAvgAggregateInputType = {
    id_clasificacion?: true
  }

  export type ClasificacionesSumAggregateInputType = {
    id_clasificacion?: true
  }

  export type ClasificacionesMinAggregateInputType = {
    id_clasificacion?: true
    codigo?: true
    descripcion?: true
  }

  export type ClasificacionesMaxAggregateInputType = {
    id_clasificacion?: true
    codigo?: true
    descripcion?: true
  }

  export type ClasificacionesCountAggregateInputType = {
    id_clasificacion?: true
    codigo?: true
    descripcion?: true
    _all?: true
  }

  export type ClasificacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clasificaciones to aggregate.
     */
    where?: clasificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clasificaciones to fetch.
     */
    orderBy?: clasificacionesOrderByWithRelationInput | clasificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clasificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clasificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clasificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clasificaciones
    **/
    _count?: true | ClasificacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClasificacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClasificacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClasificacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClasificacionesMaxAggregateInputType
  }

  export type GetClasificacionesAggregateType<T extends ClasificacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateClasificaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClasificaciones[P]>
      : GetScalarType<T[P], AggregateClasificaciones[P]>
  }




  export type clasificacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clasificacionesWhereInput
    orderBy?: clasificacionesOrderByWithAggregationInput | clasificacionesOrderByWithAggregationInput[]
    by: ClasificacionesScalarFieldEnum[] | ClasificacionesScalarFieldEnum
    having?: clasificacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClasificacionesCountAggregateInputType | true
    _avg?: ClasificacionesAvgAggregateInputType
    _sum?: ClasificacionesSumAggregateInputType
    _min?: ClasificacionesMinAggregateInputType
    _max?: ClasificacionesMaxAggregateInputType
  }

  export type ClasificacionesGroupByOutputType = {
    id_clasificacion: number
    codigo: string
    descripcion: string | null
    _count: ClasificacionesCountAggregateOutputType | null
    _avg: ClasificacionesAvgAggregateOutputType | null
    _sum: ClasificacionesSumAggregateOutputType | null
    _min: ClasificacionesMinAggregateOutputType | null
    _max: ClasificacionesMaxAggregateOutputType | null
  }

  type GetClasificacionesGroupByPayload<T extends clasificacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClasificacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClasificacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClasificacionesGroupByOutputType[P]>
            : GetScalarType<T[P], ClasificacionesGroupByOutputType[P]>
        }
      >
    >


  export type clasificacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_clasificacion?: boolean
    codigo?: boolean
    descripcion?: boolean
    peliculas?: boolean | clasificaciones$peliculasArgs<ExtArgs>
    _count?: boolean | ClasificacionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clasificaciones"]>



  export type clasificacionesSelectScalar = {
    id_clasificacion?: boolean
    codigo?: boolean
    descripcion?: boolean
  }

  export type clasificacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_clasificacion" | "codigo" | "descripcion", ExtArgs["result"]["clasificaciones"]>
  export type clasificacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas?: boolean | clasificaciones$peliculasArgs<ExtArgs>
    _count?: boolean | ClasificacionesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $clasificacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "clasificaciones"
    objects: {
      peliculas: Prisma.$peliculasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_clasificacion: number
      codigo: string
      descripcion: string | null
    }, ExtArgs["result"]["clasificaciones"]>
    composites: {}
  }

  type clasificacionesGetPayload<S extends boolean | null | undefined | clasificacionesDefaultArgs> = $Result.GetResult<Prisma.$clasificacionesPayload, S>

  type clasificacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<clasificacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClasificacionesCountAggregateInputType | true
    }

  export interface clasificacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['clasificaciones'], meta: { name: 'clasificaciones' } }
    /**
     * Find zero or one Clasificaciones that matches the filter.
     * @param {clasificacionesFindUniqueArgs} args - Arguments to find a Clasificaciones
     * @example
     * // Get one Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clasificacionesFindUniqueArgs>(args: SelectSubset<T, clasificacionesFindUniqueArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Clasificaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {clasificacionesFindUniqueOrThrowArgs} args - Arguments to find a Clasificaciones
     * @example
     * // Get one Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clasificacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, clasificacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clasificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clasificacionesFindFirstArgs} args - Arguments to find a Clasificaciones
     * @example
     * // Get one Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clasificacionesFindFirstArgs>(args?: SelectSubset<T, clasificacionesFindFirstArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clasificaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clasificacionesFindFirstOrThrowArgs} args - Arguments to find a Clasificaciones
     * @example
     * // Get one Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clasificacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, clasificacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clasificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clasificacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.findMany()
     * 
     * // Get first 10 Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.findMany({ take: 10 })
     * 
     * // Only select the `id_clasificacion`
     * const clasificacionesWithId_clasificacionOnly = await prisma.clasificaciones.findMany({ select: { id_clasificacion: true } })
     * 
     */
    findMany<T extends clasificacionesFindManyArgs>(args?: SelectSubset<T, clasificacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Clasificaciones.
     * @param {clasificacionesCreateArgs} args - Arguments to create a Clasificaciones.
     * @example
     * // Create one Clasificaciones
     * const Clasificaciones = await prisma.clasificaciones.create({
     *   data: {
     *     // ... data to create a Clasificaciones
     *   }
     * })
     * 
     */
    create<T extends clasificacionesCreateArgs>(args: SelectSubset<T, clasificacionesCreateArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clasificaciones.
     * @param {clasificacionesCreateManyArgs} args - Arguments to create many Clasificaciones.
     * @example
     * // Create many Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clasificacionesCreateManyArgs>(args?: SelectSubset<T, clasificacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Clasificaciones.
     * @param {clasificacionesDeleteArgs} args - Arguments to delete one Clasificaciones.
     * @example
     * // Delete one Clasificaciones
     * const Clasificaciones = await prisma.clasificaciones.delete({
     *   where: {
     *     // ... filter to delete one Clasificaciones
     *   }
     * })
     * 
     */
    delete<T extends clasificacionesDeleteArgs>(args: SelectSubset<T, clasificacionesDeleteArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Clasificaciones.
     * @param {clasificacionesUpdateArgs} args - Arguments to update one Clasificaciones.
     * @example
     * // Update one Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clasificacionesUpdateArgs>(args: SelectSubset<T, clasificacionesUpdateArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clasificaciones.
     * @param {clasificacionesDeleteManyArgs} args - Arguments to filter Clasificaciones to delete.
     * @example
     * // Delete a few Clasificaciones
     * const { count } = await prisma.clasificaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clasificacionesDeleteManyArgs>(args?: SelectSubset<T, clasificacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clasificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clasificacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clasificacionesUpdateManyArgs>(args: SelectSubset<T, clasificacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Clasificaciones.
     * @param {clasificacionesUpsertArgs} args - Arguments to update or create a Clasificaciones.
     * @example
     * // Update or create a Clasificaciones
     * const clasificaciones = await prisma.clasificaciones.upsert({
     *   create: {
     *     // ... data to create a Clasificaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clasificaciones we want to update
     *   }
     * })
     */
    upsert<T extends clasificacionesUpsertArgs>(args: SelectSubset<T, clasificacionesUpsertArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clasificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clasificacionesCountArgs} args - Arguments to filter Clasificaciones to count.
     * @example
     * // Count the number of Clasificaciones
     * const count = await prisma.clasificaciones.count({
     *   where: {
     *     // ... the filter for the Clasificaciones we want to count
     *   }
     * })
    **/
    count<T extends clasificacionesCountArgs>(
      args?: Subset<T, clasificacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClasificacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clasificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClasificacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClasificacionesAggregateArgs>(args: Subset<T, ClasificacionesAggregateArgs>): Prisma.PrismaPromise<GetClasificacionesAggregateType<T>>

    /**
     * Group by Clasificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clasificacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clasificacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clasificacionesGroupByArgs['orderBy'] }
        : { orderBy?: clasificacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clasificacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClasificacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the clasificaciones model
   */
  readonly fields: clasificacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for clasificaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clasificacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peliculas<T extends clasificaciones$peliculasArgs<ExtArgs> = {}>(args?: Subset<T, clasificaciones$peliculasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the clasificaciones model
   */
  interface clasificacionesFieldRefs {
    readonly id_clasificacion: FieldRef<"clasificaciones", 'Int'>
    readonly codigo: FieldRef<"clasificaciones", 'String'>
    readonly descripcion: FieldRef<"clasificaciones", 'String'>
  }
    

  // Custom InputTypes
  /**
   * clasificaciones findUnique
   */
  export type clasificacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * Filter, which clasificaciones to fetch.
     */
    where: clasificacionesWhereUniqueInput
  }

  /**
   * clasificaciones findUniqueOrThrow
   */
  export type clasificacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * Filter, which clasificaciones to fetch.
     */
    where: clasificacionesWhereUniqueInput
  }

  /**
   * clasificaciones findFirst
   */
  export type clasificacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * Filter, which clasificaciones to fetch.
     */
    where?: clasificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clasificaciones to fetch.
     */
    orderBy?: clasificacionesOrderByWithRelationInput | clasificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clasificaciones.
     */
    cursor?: clasificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clasificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clasificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clasificaciones.
     */
    distinct?: ClasificacionesScalarFieldEnum | ClasificacionesScalarFieldEnum[]
  }

  /**
   * clasificaciones findFirstOrThrow
   */
  export type clasificacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * Filter, which clasificaciones to fetch.
     */
    where?: clasificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clasificaciones to fetch.
     */
    orderBy?: clasificacionesOrderByWithRelationInput | clasificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clasificaciones.
     */
    cursor?: clasificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clasificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clasificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clasificaciones.
     */
    distinct?: ClasificacionesScalarFieldEnum | ClasificacionesScalarFieldEnum[]
  }

  /**
   * clasificaciones findMany
   */
  export type clasificacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * Filter, which clasificaciones to fetch.
     */
    where?: clasificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clasificaciones to fetch.
     */
    orderBy?: clasificacionesOrderByWithRelationInput | clasificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clasificaciones.
     */
    cursor?: clasificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clasificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clasificaciones.
     */
    skip?: number
    distinct?: ClasificacionesScalarFieldEnum | ClasificacionesScalarFieldEnum[]
  }

  /**
   * clasificaciones create
   */
  export type clasificacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a clasificaciones.
     */
    data: XOR<clasificacionesCreateInput, clasificacionesUncheckedCreateInput>
  }

  /**
   * clasificaciones createMany
   */
  export type clasificacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clasificaciones.
     */
    data: clasificacionesCreateManyInput | clasificacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clasificaciones update
   */
  export type clasificacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a clasificaciones.
     */
    data: XOR<clasificacionesUpdateInput, clasificacionesUncheckedUpdateInput>
    /**
     * Choose, which clasificaciones to update.
     */
    where: clasificacionesWhereUniqueInput
  }

  /**
   * clasificaciones updateMany
   */
  export type clasificacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clasificaciones.
     */
    data: XOR<clasificacionesUpdateManyMutationInput, clasificacionesUncheckedUpdateManyInput>
    /**
     * Filter which clasificaciones to update
     */
    where?: clasificacionesWhereInput
    /**
     * Limit how many clasificaciones to update.
     */
    limit?: number
  }

  /**
   * clasificaciones upsert
   */
  export type clasificacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the clasificaciones to update in case it exists.
     */
    where: clasificacionesWhereUniqueInput
    /**
     * In case the clasificaciones found by the `where` argument doesn't exist, create a new clasificaciones with this data.
     */
    create: XOR<clasificacionesCreateInput, clasificacionesUncheckedCreateInput>
    /**
     * In case the clasificaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clasificacionesUpdateInput, clasificacionesUncheckedUpdateInput>
  }

  /**
   * clasificaciones delete
   */
  export type clasificacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    /**
     * Filter which clasificaciones to delete.
     */
    where: clasificacionesWhereUniqueInput
  }

  /**
   * clasificaciones deleteMany
   */
  export type clasificacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clasificaciones to delete
     */
    where?: clasificacionesWhereInput
    /**
     * Limit how many clasificaciones to delete.
     */
    limit?: number
  }

  /**
   * clasificaciones.peliculas
   */
  export type clasificaciones$peliculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    where?: peliculasWhereInput
    orderBy?: peliculasOrderByWithRelationInput | peliculasOrderByWithRelationInput[]
    cursor?: peliculasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeliculasScalarFieldEnum | PeliculasScalarFieldEnum[]
  }

  /**
   * clasificaciones without action
   */
  export type clasificacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
  }


  /**
   * Model directores
   */

  export type AggregateDirectores = {
    _count: DirectoresCountAggregateOutputType | null
    _avg: DirectoresAvgAggregateOutputType | null
    _sum: DirectoresSumAggregateOutputType | null
    _min: DirectoresMinAggregateOutputType | null
    _max: DirectoresMaxAggregateOutputType | null
  }

  export type DirectoresAvgAggregateOutputType = {
    id_director: number | null
  }

  export type DirectoresSumAggregateOutputType = {
    id_director: number | null
  }

  export type DirectoresMinAggregateOutputType = {
    id_director: number | null
    nombre_director: string | null
    apellido_director: string | null
    biografia: string | null
  }

  export type DirectoresMaxAggregateOutputType = {
    id_director: number | null
    nombre_director: string | null
    apellido_director: string | null
    biografia: string | null
  }

  export type DirectoresCountAggregateOutputType = {
    id_director: number
    nombre_director: number
    apellido_director: number
    biografia: number
    _all: number
  }


  export type DirectoresAvgAggregateInputType = {
    id_director?: true
  }

  export type DirectoresSumAggregateInputType = {
    id_director?: true
  }

  export type DirectoresMinAggregateInputType = {
    id_director?: true
    nombre_director?: true
    apellido_director?: true
    biografia?: true
  }

  export type DirectoresMaxAggregateInputType = {
    id_director?: true
    nombre_director?: true
    apellido_director?: true
    biografia?: true
  }

  export type DirectoresCountAggregateInputType = {
    id_director?: true
    nombre_director?: true
    apellido_director?: true
    biografia?: true
    _all?: true
  }

  export type DirectoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which directores to aggregate.
     */
    where?: directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directores to fetch.
     */
    orderBy?: directoresOrderByWithRelationInput | directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned directores
    **/
    _count?: true | DirectoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DirectoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DirectoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DirectoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DirectoresMaxAggregateInputType
  }

  export type GetDirectoresAggregateType<T extends DirectoresAggregateArgs> = {
        [P in keyof T & keyof AggregateDirectores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDirectores[P]>
      : GetScalarType<T[P], AggregateDirectores[P]>
  }




  export type directoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: directoresWhereInput
    orderBy?: directoresOrderByWithAggregationInput | directoresOrderByWithAggregationInput[]
    by: DirectoresScalarFieldEnum[] | DirectoresScalarFieldEnum
    having?: directoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DirectoresCountAggregateInputType | true
    _avg?: DirectoresAvgAggregateInputType
    _sum?: DirectoresSumAggregateInputType
    _min?: DirectoresMinAggregateInputType
    _max?: DirectoresMaxAggregateInputType
  }

  export type DirectoresGroupByOutputType = {
    id_director: number
    nombre_director: string
    apellido_director: string | null
    biografia: string | null
    _count: DirectoresCountAggregateOutputType | null
    _avg: DirectoresAvgAggregateOutputType | null
    _sum: DirectoresSumAggregateOutputType | null
    _min: DirectoresMinAggregateOutputType | null
    _max: DirectoresMaxAggregateOutputType | null
  }

  type GetDirectoresGroupByPayload<T extends directoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DirectoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DirectoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DirectoresGroupByOutputType[P]>
            : GetScalarType<T[P], DirectoresGroupByOutputType[P]>
        }
      >
    >


  export type directoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_director?: boolean
    nombre_director?: boolean
    apellido_director?: boolean
    biografia?: boolean
    peliculas_directores?: boolean | directores$peliculas_directoresArgs<ExtArgs>
    _count?: boolean | DirectoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["directores"]>



  export type directoresSelectScalar = {
    id_director?: boolean
    nombre_director?: boolean
    apellido_director?: boolean
    biografia?: boolean
  }

  export type directoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_director" | "nombre_director" | "apellido_director" | "biografia", ExtArgs["result"]["directores"]>
  export type directoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas_directores?: boolean | directores$peliculas_directoresArgs<ExtArgs>
    _count?: boolean | DirectoresCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $directoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "directores"
    objects: {
      peliculas_directores: Prisma.$peliculas_directoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_director: number
      nombre_director: string
      apellido_director: string | null
      biografia: string | null
    }, ExtArgs["result"]["directores"]>
    composites: {}
  }

  type directoresGetPayload<S extends boolean | null | undefined | directoresDefaultArgs> = $Result.GetResult<Prisma.$directoresPayload, S>

  type directoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<directoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DirectoresCountAggregateInputType | true
    }

  export interface directoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['directores'], meta: { name: 'directores' } }
    /**
     * Find zero or one Directores that matches the filter.
     * @param {directoresFindUniqueArgs} args - Arguments to find a Directores
     * @example
     * // Get one Directores
     * const directores = await prisma.directores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends directoresFindUniqueArgs>(args: SelectSubset<T, directoresFindUniqueArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Directores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {directoresFindUniqueOrThrowArgs} args - Arguments to find a Directores
     * @example
     * // Get one Directores
     * const directores = await prisma.directores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends directoresFindUniqueOrThrowArgs>(args: SelectSubset<T, directoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Directores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directoresFindFirstArgs} args - Arguments to find a Directores
     * @example
     * // Get one Directores
     * const directores = await prisma.directores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends directoresFindFirstArgs>(args?: SelectSubset<T, directoresFindFirstArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Directores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directoresFindFirstOrThrowArgs} args - Arguments to find a Directores
     * @example
     * // Get one Directores
     * const directores = await prisma.directores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends directoresFindFirstOrThrowArgs>(args?: SelectSubset<T, directoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Directores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Directores
     * const directores = await prisma.directores.findMany()
     * 
     * // Get first 10 Directores
     * const directores = await prisma.directores.findMany({ take: 10 })
     * 
     * // Only select the `id_director`
     * const directoresWithId_directorOnly = await prisma.directores.findMany({ select: { id_director: true } })
     * 
     */
    findMany<T extends directoresFindManyArgs>(args?: SelectSubset<T, directoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Directores.
     * @param {directoresCreateArgs} args - Arguments to create a Directores.
     * @example
     * // Create one Directores
     * const Directores = await prisma.directores.create({
     *   data: {
     *     // ... data to create a Directores
     *   }
     * })
     * 
     */
    create<T extends directoresCreateArgs>(args: SelectSubset<T, directoresCreateArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Directores.
     * @param {directoresCreateManyArgs} args - Arguments to create many Directores.
     * @example
     * // Create many Directores
     * const directores = await prisma.directores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends directoresCreateManyArgs>(args?: SelectSubset<T, directoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Directores.
     * @param {directoresDeleteArgs} args - Arguments to delete one Directores.
     * @example
     * // Delete one Directores
     * const Directores = await prisma.directores.delete({
     *   where: {
     *     // ... filter to delete one Directores
     *   }
     * })
     * 
     */
    delete<T extends directoresDeleteArgs>(args: SelectSubset<T, directoresDeleteArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Directores.
     * @param {directoresUpdateArgs} args - Arguments to update one Directores.
     * @example
     * // Update one Directores
     * const directores = await prisma.directores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends directoresUpdateArgs>(args: SelectSubset<T, directoresUpdateArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Directores.
     * @param {directoresDeleteManyArgs} args - Arguments to filter Directores to delete.
     * @example
     * // Delete a few Directores
     * const { count } = await prisma.directores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends directoresDeleteManyArgs>(args?: SelectSubset<T, directoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Directores
     * const directores = await prisma.directores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends directoresUpdateManyArgs>(args: SelectSubset<T, directoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Directores.
     * @param {directoresUpsertArgs} args - Arguments to update or create a Directores.
     * @example
     * // Update or create a Directores
     * const directores = await prisma.directores.upsert({
     *   create: {
     *     // ... data to create a Directores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Directores we want to update
     *   }
     * })
     */
    upsert<T extends directoresUpsertArgs>(args: SelectSubset<T, directoresUpsertArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directoresCountArgs} args - Arguments to filter Directores to count.
     * @example
     * // Count the number of Directores
     * const count = await prisma.directores.count({
     *   where: {
     *     // ... the filter for the Directores we want to count
     *   }
     * })
    **/
    count<T extends directoresCountArgs>(
      args?: Subset<T, directoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DirectoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DirectoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DirectoresAggregateArgs>(args: Subset<T, DirectoresAggregateArgs>): Prisma.PrismaPromise<GetDirectoresAggregateType<T>>

    /**
     * Group by Directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends directoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: directoresGroupByArgs['orderBy'] }
        : { orderBy?: directoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, directoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDirectoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the directores model
   */
  readonly fields: directoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for directores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__directoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peliculas_directores<T extends directores$peliculas_directoresArgs<ExtArgs> = {}>(args?: Subset<T, directores$peliculas_directoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the directores model
   */
  interface directoresFieldRefs {
    readonly id_director: FieldRef<"directores", 'Int'>
    readonly nombre_director: FieldRef<"directores", 'String'>
    readonly apellido_director: FieldRef<"directores", 'String'>
    readonly biografia: FieldRef<"directores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * directores findUnique
   */
  export type directoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * Filter, which directores to fetch.
     */
    where: directoresWhereUniqueInput
  }

  /**
   * directores findUniqueOrThrow
   */
  export type directoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * Filter, which directores to fetch.
     */
    where: directoresWhereUniqueInput
  }

  /**
   * directores findFirst
   */
  export type directoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * Filter, which directores to fetch.
     */
    where?: directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directores to fetch.
     */
    orderBy?: directoresOrderByWithRelationInput | directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for directores.
     */
    cursor?: directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of directores.
     */
    distinct?: DirectoresScalarFieldEnum | DirectoresScalarFieldEnum[]
  }

  /**
   * directores findFirstOrThrow
   */
  export type directoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * Filter, which directores to fetch.
     */
    where?: directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directores to fetch.
     */
    orderBy?: directoresOrderByWithRelationInput | directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for directores.
     */
    cursor?: directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of directores.
     */
    distinct?: DirectoresScalarFieldEnum | DirectoresScalarFieldEnum[]
  }

  /**
   * directores findMany
   */
  export type directoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * Filter, which directores to fetch.
     */
    where?: directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directores to fetch.
     */
    orderBy?: directoresOrderByWithRelationInput | directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing directores.
     */
    cursor?: directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directores.
     */
    skip?: number
    distinct?: DirectoresScalarFieldEnum | DirectoresScalarFieldEnum[]
  }

  /**
   * directores create
   */
  export type directoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * The data needed to create a directores.
     */
    data: XOR<directoresCreateInput, directoresUncheckedCreateInput>
  }

  /**
   * directores createMany
   */
  export type directoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many directores.
     */
    data: directoresCreateManyInput | directoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * directores update
   */
  export type directoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * The data needed to update a directores.
     */
    data: XOR<directoresUpdateInput, directoresUncheckedUpdateInput>
    /**
     * Choose, which directores to update.
     */
    where: directoresWhereUniqueInput
  }

  /**
   * directores updateMany
   */
  export type directoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update directores.
     */
    data: XOR<directoresUpdateManyMutationInput, directoresUncheckedUpdateManyInput>
    /**
     * Filter which directores to update
     */
    where?: directoresWhereInput
    /**
     * Limit how many directores to update.
     */
    limit?: number
  }

  /**
   * directores upsert
   */
  export type directoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * The filter to search for the directores to update in case it exists.
     */
    where: directoresWhereUniqueInput
    /**
     * In case the directores found by the `where` argument doesn't exist, create a new directores with this data.
     */
    create: XOR<directoresCreateInput, directoresUncheckedCreateInput>
    /**
     * In case the directores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<directoresUpdateInput, directoresUncheckedUpdateInput>
  }

  /**
   * directores delete
   */
  export type directoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
    /**
     * Filter which directores to delete.
     */
    where: directoresWhereUniqueInput
  }

  /**
   * directores deleteMany
   */
  export type directoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which directores to delete
     */
    where?: directoresWhereInput
    /**
     * Limit how many directores to delete.
     */
    limit?: number
  }

  /**
   * directores.peliculas_directores
   */
  export type directores$peliculas_directoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    where?: peliculas_directoresWhereInput
    orderBy?: peliculas_directoresOrderByWithRelationInput | peliculas_directoresOrderByWithRelationInput[]
    cursor?: peliculas_directoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Peliculas_directoresScalarFieldEnum | Peliculas_directoresScalarFieldEnum[]
  }

  /**
   * directores without action
   */
  export type directoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the directores
     */
    select?: directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the directores
     */
    omit?: directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directoresInclude<ExtArgs> | null
  }


  /**
   * Model empleados
   */

  export type AggregateEmpleados = {
    _count: EmpleadosCountAggregateOutputType | null
    _avg: EmpleadosAvgAggregateOutputType | null
    _sum: EmpleadosSumAggregateOutputType | null
    _min: EmpleadosMinAggregateOutputType | null
    _max: EmpleadosMaxAggregateOutputType | null
  }

  export type EmpleadosAvgAggregateOutputType = {
    id_empleado: number | null
    id_cine: number | null
    id_rol: number | null
  }

  export type EmpleadosSumAggregateOutputType = {
    id_empleado: number | null
    id_cine: number | null
    id_rol: number | null
  }

  export type EmpleadosMinAggregateOutputType = {
    id_empleado: number | null
    nombre: string | null
    apellido: string | null
    ci: string | null
    correo: string | null
    telefono: string | null
    fecha_contrato: Date | null
    id_cine: number | null
    id_rol: number | null
    usuario_sistema: boolean | null
  }

  export type EmpleadosMaxAggregateOutputType = {
    id_empleado: number | null
    nombre: string | null
    apellido: string | null
    ci: string | null
    correo: string | null
    telefono: string | null
    fecha_contrato: Date | null
    id_cine: number | null
    id_rol: number | null
    usuario_sistema: boolean | null
  }

  export type EmpleadosCountAggregateOutputType = {
    id_empleado: number
    nombre: number
    apellido: number
    ci: number
    correo: number
    telefono: number
    fecha_contrato: number
    id_cine: number
    id_rol: number
    usuario_sistema: number
    _all: number
  }


  export type EmpleadosAvgAggregateInputType = {
    id_empleado?: true
    id_cine?: true
    id_rol?: true
  }

  export type EmpleadosSumAggregateInputType = {
    id_empleado?: true
    id_cine?: true
    id_rol?: true
  }

  export type EmpleadosMinAggregateInputType = {
    id_empleado?: true
    nombre?: true
    apellido?: true
    ci?: true
    correo?: true
    telefono?: true
    fecha_contrato?: true
    id_cine?: true
    id_rol?: true
    usuario_sistema?: true
  }

  export type EmpleadosMaxAggregateInputType = {
    id_empleado?: true
    nombre?: true
    apellido?: true
    ci?: true
    correo?: true
    telefono?: true
    fecha_contrato?: true
    id_cine?: true
    id_rol?: true
    usuario_sistema?: true
  }

  export type EmpleadosCountAggregateInputType = {
    id_empleado?: true
    nombre?: true
    apellido?: true
    ci?: true
    correo?: true
    telefono?: true
    fecha_contrato?: true
    id_cine?: true
    id_rol?: true
    usuario_sistema?: true
    _all?: true
  }

  export type EmpleadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which empleados to aggregate.
     */
    where?: empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadosOrderByWithRelationInput | empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned empleados
    **/
    _count?: true | EmpleadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpleadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpleadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpleadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpleadosMaxAggregateInputType
  }

  export type GetEmpleadosAggregateType<T extends EmpleadosAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpleados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpleados[P]>
      : GetScalarType<T[P], AggregateEmpleados[P]>
  }




  export type empleadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empleadosWhereInput
    orderBy?: empleadosOrderByWithAggregationInput | empleadosOrderByWithAggregationInput[]
    by: EmpleadosScalarFieldEnum[] | EmpleadosScalarFieldEnum
    having?: empleadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpleadosCountAggregateInputType | true
    _avg?: EmpleadosAvgAggregateInputType
    _sum?: EmpleadosSumAggregateInputType
    _min?: EmpleadosMinAggregateInputType
    _max?: EmpleadosMaxAggregateInputType
  }

  export type EmpleadosGroupByOutputType = {
    id_empleado: number
    nombre: string | null
    apellido: string | null
    ci: string | null
    correo: string | null
    telefono: string | null
    fecha_contrato: Date | null
    id_cine: number | null
    id_rol: number | null
    usuario_sistema: boolean | null
    _count: EmpleadosCountAggregateOutputType | null
    _avg: EmpleadosAvgAggregateOutputType | null
    _sum: EmpleadosSumAggregateOutputType | null
    _min: EmpleadosMinAggregateOutputType | null
    _max: EmpleadosMaxAggregateOutputType | null
  }

  type GetEmpleadosGroupByPayload<T extends empleadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpleadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpleadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpleadosGroupByOutputType[P]>
            : GetScalarType<T[P], EmpleadosGroupByOutputType[P]>
        }
      >
    >


  export type empleadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_empleado?: boolean
    nombre?: boolean
    apellido?: boolean
    ci?: boolean
    correo?: boolean
    telefono?: boolean
    fecha_contrato?: boolean
    id_cine?: boolean
    id_rol?: boolean
    usuario_sistema?: boolean
    cines?: boolean | empleados$cinesArgs<ExtArgs>
    roles_empleados?: boolean | empleados$roles_empleadosArgs<ExtArgs>
    logs_actividad?: boolean | empleados$logs_actividadArgs<ExtArgs>
    notificaciones?: boolean | empleados$notificacionesArgs<ExtArgs>
    _count?: boolean | EmpleadosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleados"]>



  export type empleadosSelectScalar = {
    id_empleado?: boolean
    nombre?: boolean
    apellido?: boolean
    ci?: boolean
    correo?: boolean
    telefono?: boolean
    fecha_contrato?: boolean
    id_cine?: boolean
    id_rol?: boolean
    usuario_sistema?: boolean
  }

  export type empleadosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_empleado" | "nombre" | "apellido" | "ci" | "correo" | "telefono" | "fecha_contrato" | "id_cine" | "id_rol" | "usuario_sistema", ExtArgs["result"]["empleados"]>
  export type empleadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cines?: boolean | empleados$cinesArgs<ExtArgs>
    roles_empleados?: boolean | empleados$roles_empleadosArgs<ExtArgs>
    logs_actividad?: boolean | empleados$logs_actividadArgs<ExtArgs>
    notificaciones?: boolean | empleados$notificacionesArgs<ExtArgs>
    _count?: boolean | EmpleadosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $empleadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "empleados"
    objects: {
      cines: Prisma.$cinesPayload<ExtArgs> | null
      roles_empleados: Prisma.$roles_empleadosPayload<ExtArgs> | null
      logs_actividad: Prisma.$logs_actividadPayload<ExtArgs>[]
      notificaciones: Prisma.$notificacionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_empleado: number
      nombre: string | null
      apellido: string | null
      ci: string | null
      correo: string | null
      telefono: string | null
      fecha_contrato: Date | null
      id_cine: number | null
      id_rol: number | null
      usuario_sistema: boolean | null
    }, ExtArgs["result"]["empleados"]>
    composites: {}
  }

  type empleadosGetPayload<S extends boolean | null | undefined | empleadosDefaultArgs> = $Result.GetResult<Prisma.$empleadosPayload, S>

  type empleadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<empleadosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpleadosCountAggregateInputType | true
    }

  export interface empleadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['empleados'], meta: { name: 'empleados' } }
    /**
     * Find zero or one Empleados that matches the filter.
     * @param {empleadosFindUniqueArgs} args - Arguments to find a Empleados
     * @example
     * // Get one Empleados
     * const empleados = await prisma.empleados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends empleadosFindUniqueArgs>(args: SelectSubset<T, empleadosFindUniqueArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empleados that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {empleadosFindUniqueOrThrowArgs} args - Arguments to find a Empleados
     * @example
     * // Get one Empleados
     * const empleados = await prisma.empleados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends empleadosFindUniqueOrThrowArgs>(args: SelectSubset<T, empleadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadosFindFirstArgs} args - Arguments to find a Empleados
     * @example
     * // Get one Empleados
     * const empleados = await prisma.empleados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends empleadosFindFirstArgs>(args?: SelectSubset<T, empleadosFindFirstArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empleados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadosFindFirstOrThrowArgs} args - Arguments to find a Empleados
     * @example
     * // Get one Empleados
     * const empleados = await prisma.empleados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends empleadosFindFirstOrThrowArgs>(args?: SelectSubset<T, empleadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empleados
     * const empleados = await prisma.empleados.findMany()
     * 
     * // Get first 10 Empleados
     * const empleados = await prisma.empleados.findMany({ take: 10 })
     * 
     * // Only select the `id_empleado`
     * const empleadosWithId_empleadoOnly = await prisma.empleados.findMany({ select: { id_empleado: true } })
     * 
     */
    findMany<T extends empleadosFindManyArgs>(args?: SelectSubset<T, empleadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empleados.
     * @param {empleadosCreateArgs} args - Arguments to create a Empleados.
     * @example
     * // Create one Empleados
     * const Empleados = await prisma.empleados.create({
     *   data: {
     *     // ... data to create a Empleados
     *   }
     * })
     * 
     */
    create<T extends empleadosCreateArgs>(args: SelectSubset<T, empleadosCreateArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empleados.
     * @param {empleadosCreateManyArgs} args - Arguments to create many Empleados.
     * @example
     * // Create many Empleados
     * const empleados = await prisma.empleados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends empleadosCreateManyArgs>(args?: SelectSubset<T, empleadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Empleados.
     * @param {empleadosDeleteArgs} args - Arguments to delete one Empleados.
     * @example
     * // Delete one Empleados
     * const Empleados = await prisma.empleados.delete({
     *   where: {
     *     // ... filter to delete one Empleados
     *   }
     * })
     * 
     */
    delete<T extends empleadosDeleteArgs>(args: SelectSubset<T, empleadosDeleteArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empleados.
     * @param {empleadosUpdateArgs} args - Arguments to update one Empleados.
     * @example
     * // Update one Empleados
     * const empleados = await prisma.empleados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends empleadosUpdateArgs>(args: SelectSubset<T, empleadosUpdateArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empleados.
     * @param {empleadosDeleteManyArgs} args - Arguments to filter Empleados to delete.
     * @example
     * // Delete a few Empleados
     * const { count } = await prisma.empleados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends empleadosDeleteManyArgs>(args?: SelectSubset<T, empleadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empleados
     * const empleados = await prisma.empleados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends empleadosUpdateManyArgs>(args: SelectSubset<T, empleadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Empleados.
     * @param {empleadosUpsertArgs} args - Arguments to update or create a Empleados.
     * @example
     * // Update or create a Empleados
     * const empleados = await prisma.empleados.upsert({
     *   create: {
     *     // ... data to create a Empleados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empleados we want to update
     *   }
     * })
     */
    upsert<T extends empleadosUpsertArgs>(args: SelectSubset<T, empleadosUpsertArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadosCountArgs} args - Arguments to filter Empleados to count.
     * @example
     * // Count the number of Empleados
     * const count = await prisma.empleados.count({
     *   where: {
     *     // ... the filter for the Empleados we want to count
     *   }
     * })
    **/
    count<T extends empleadosCountArgs>(
      args?: Subset<T, empleadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpleadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpleadosAggregateArgs>(args: Subset<T, EmpleadosAggregateArgs>): Prisma.PrismaPromise<GetEmpleadosAggregateType<T>>

    /**
     * Group by Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empleadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends empleadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: empleadosGroupByArgs['orderBy'] }
        : { orderBy?: empleadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, empleadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpleadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the empleados model
   */
  readonly fields: empleadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for empleados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__empleadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cines<T extends empleados$cinesArgs<ExtArgs> = {}>(args?: Subset<T, empleados$cinesArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    roles_empleados<T extends empleados$roles_empleadosArgs<ExtArgs> = {}>(args?: Subset<T, empleados$roles_empleadosArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    logs_actividad<T extends empleados$logs_actividadArgs<ExtArgs> = {}>(args?: Subset<T, empleados$logs_actividadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificaciones<T extends empleados$notificacionesArgs<ExtArgs> = {}>(args?: Subset<T, empleados$notificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the empleados model
   */
  interface empleadosFieldRefs {
    readonly id_empleado: FieldRef<"empleados", 'Int'>
    readonly nombre: FieldRef<"empleados", 'String'>
    readonly apellido: FieldRef<"empleados", 'String'>
    readonly ci: FieldRef<"empleados", 'String'>
    readonly correo: FieldRef<"empleados", 'String'>
    readonly telefono: FieldRef<"empleados", 'String'>
    readonly fecha_contrato: FieldRef<"empleados", 'DateTime'>
    readonly id_cine: FieldRef<"empleados", 'Int'>
    readonly id_rol: FieldRef<"empleados", 'Int'>
    readonly usuario_sistema: FieldRef<"empleados", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * empleados findUnique
   */
  export type empleadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * Filter, which empleados to fetch.
     */
    where: empleadosWhereUniqueInput
  }

  /**
   * empleados findUniqueOrThrow
   */
  export type empleadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * Filter, which empleados to fetch.
     */
    where: empleadosWhereUniqueInput
  }

  /**
   * empleados findFirst
   */
  export type empleadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * Filter, which empleados to fetch.
     */
    where?: empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadosOrderByWithRelationInput | empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for empleados.
     */
    cursor?: empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of empleados.
     */
    distinct?: EmpleadosScalarFieldEnum | EmpleadosScalarFieldEnum[]
  }

  /**
   * empleados findFirstOrThrow
   */
  export type empleadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * Filter, which empleados to fetch.
     */
    where?: empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadosOrderByWithRelationInput | empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for empleados.
     */
    cursor?: empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of empleados.
     */
    distinct?: EmpleadosScalarFieldEnum | EmpleadosScalarFieldEnum[]
  }

  /**
   * empleados findMany
   */
  export type empleadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * Filter, which empleados to fetch.
     */
    where?: empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empleados to fetch.
     */
    orderBy?: empleadosOrderByWithRelationInput | empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing empleados.
     */
    cursor?: empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empleados.
     */
    skip?: number
    distinct?: EmpleadosScalarFieldEnum | EmpleadosScalarFieldEnum[]
  }

  /**
   * empleados create
   */
  export type empleadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * The data needed to create a empleados.
     */
    data?: XOR<empleadosCreateInput, empleadosUncheckedCreateInput>
  }

  /**
   * empleados createMany
   */
  export type empleadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many empleados.
     */
    data: empleadosCreateManyInput | empleadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * empleados update
   */
  export type empleadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * The data needed to update a empleados.
     */
    data: XOR<empleadosUpdateInput, empleadosUncheckedUpdateInput>
    /**
     * Choose, which empleados to update.
     */
    where: empleadosWhereUniqueInput
  }

  /**
   * empleados updateMany
   */
  export type empleadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update empleados.
     */
    data: XOR<empleadosUpdateManyMutationInput, empleadosUncheckedUpdateManyInput>
    /**
     * Filter which empleados to update
     */
    where?: empleadosWhereInput
    /**
     * Limit how many empleados to update.
     */
    limit?: number
  }

  /**
   * empleados upsert
   */
  export type empleadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * The filter to search for the empleados to update in case it exists.
     */
    where: empleadosWhereUniqueInput
    /**
     * In case the empleados found by the `where` argument doesn't exist, create a new empleados with this data.
     */
    create: XOR<empleadosCreateInput, empleadosUncheckedCreateInput>
    /**
     * In case the empleados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<empleadosUpdateInput, empleadosUncheckedUpdateInput>
  }

  /**
   * empleados delete
   */
  export type empleadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    /**
     * Filter which empleados to delete.
     */
    where: empleadosWhereUniqueInput
  }

  /**
   * empleados deleteMany
   */
  export type empleadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which empleados to delete
     */
    where?: empleadosWhereInput
    /**
     * Limit how many empleados to delete.
     */
    limit?: number
  }

  /**
   * empleados.cines
   */
  export type empleados$cinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cines
     */
    select?: cinesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cines
     */
    omit?: cinesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cinesInclude<ExtArgs> | null
    where?: cinesWhereInput
  }

  /**
   * empleados.roles_empleados
   */
  export type empleados$roles_empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    where?: roles_empleadosWhereInput
  }

  /**
   * empleados.logs_actividad
   */
  export type empleados$logs_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    where?: logs_actividadWhereInput
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    cursor?: logs_actividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Logs_actividadScalarFieldEnum | Logs_actividadScalarFieldEnum[]
  }

  /**
   * empleados.notificaciones
   */
  export type empleados$notificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    where?: notificacionesWhereInput
    orderBy?: notificacionesOrderByWithRelationInput | notificacionesOrderByWithRelationInput[]
    cursor?: notificacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * empleados without action
   */
  export type empleadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
  }


  /**
   * Model funciones
   */

  export type AggregateFunciones = {
    _count: FuncionesCountAggregateOutputType | null
    _avg: FuncionesAvgAggregateOutputType | null
    _sum: FuncionesSumAggregateOutputType | null
    _min: FuncionesMinAggregateOutputType | null
    _max: FuncionesMaxAggregateOutputType | null
  }

  export type FuncionesAvgAggregateOutputType = {
    id_funcion: number | null
    id_cartelera: number | null
    id_sala: number | null
    id_pelicula: number | null
    precio_boleto: Decimal | null
  }

  export type FuncionesSumAggregateOutputType = {
    id_funcion: number | null
    id_cartelera: number | null
    id_sala: number | null
    id_pelicula: number | null
    precio_boleto: Decimal | null
  }

  export type FuncionesMinAggregateOutputType = {
    id_funcion: number | null
    id_cartelera: number | null
    id_sala: number | null
    id_pelicula: number | null
    fecha_hora_inicio: Date | null
    fecha_hora_fin: Date | null
    precio_boleto: Decimal | null
  }

  export type FuncionesMaxAggregateOutputType = {
    id_funcion: number | null
    id_cartelera: number | null
    id_sala: number | null
    id_pelicula: number | null
    fecha_hora_inicio: Date | null
    fecha_hora_fin: Date | null
    precio_boleto: Decimal | null
  }

  export type FuncionesCountAggregateOutputType = {
    id_funcion: number
    id_cartelera: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio: number
    fecha_hora_fin: number
    precio_boleto: number
    _all: number
  }


  export type FuncionesAvgAggregateInputType = {
    id_funcion?: true
    id_cartelera?: true
    id_sala?: true
    id_pelicula?: true
    precio_boleto?: true
  }

  export type FuncionesSumAggregateInputType = {
    id_funcion?: true
    id_cartelera?: true
    id_sala?: true
    id_pelicula?: true
    precio_boleto?: true
  }

  export type FuncionesMinAggregateInputType = {
    id_funcion?: true
    id_cartelera?: true
    id_sala?: true
    id_pelicula?: true
    fecha_hora_inicio?: true
    fecha_hora_fin?: true
    precio_boleto?: true
  }

  export type FuncionesMaxAggregateInputType = {
    id_funcion?: true
    id_cartelera?: true
    id_sala?: true
    id_pelicula?: true
    fecha_hora_inicio?: true
    fecha_hora_fin?: true
    precio_boleto?: true
  }

  export type FuncionesCountAggregateInputType = {
    id_funcion?: true
    id_cartelera?: true
    id_sala?: true
    id_pelicula?: true
    fecha_hora_inicio?: true
    fecha_hora_fin?: true
    precio_boleto?: true
    _all?: true
  }

  export type FuncionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which funciones to aggregate.
     */
    where?: funcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of funciones to fetch.
     */
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: funcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` funciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` funciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned funciones
    **/
    _count?: true | FuncionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FuncionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FuncionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncionesMaxAggregateInputType
  }

  export type GetFuncionesAggregateType<T extends FuncionesAggregateArgs> = {
        [P in keyof T & keyof AggregateFunciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFunciones[P]>
      : GetScalarType<T[P], AggregateFunciones[P]>
  }




  export type funcionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: funcionesWhereInput
    orderBy?: funcionesOrderByWithAggregationInput | funcionesOrderByWithAggregationInput[]
    by: FuncionesScalarFieldEnum[] | FuncionesScalarFieldEnum
    having?: funcionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncionesCountAggregateInputType | true
    _avg?: FuncionesAvgAggregateInputType
    _sum?: FuncionesSumAggregateInputType
    _min?: FuncionesMinAggregateInputType
    _max?: FuncionesMaxAggregateInputType
  }

  export type FuncionesGroupByOutputType = {
    id_funcion: number
    id_cartelera: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio: Date | null
    fecha_hora_fin: Date | null
    precio_boleto: Decimal | null
    _count: FuncionesCountAggregateOutputType | null
    _avg: FuncionesAvgAggregateOutputType | null
    _sum: FuncionesSumAggregateOutputType | null
    _min: FuncionesMinAggregateOutputType | null
    _max: FuncionesMaxAggregateOutputType | null
  }

  type GetFuncionesGroupByPayload<T extends funcionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncionesGroupByOutputType[P]>
            : GetScalarType<T[P], FuncionesGroupByOutputType[P]>
        }
      >
    >


  export type funcionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_funcion?: boolean
    id_cartelera?: boolean
    id_sala?: boolean
    id_pelicula?: boolean
    fecha_hora_inicio?: boolean
    fecha_hora_fin?: boolean
    precio_boleto?: boolean
    boletos?: boolean | funciones$boletosArgs<ExtArgs>
    carteleras?: boolean | cartelerasDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
    salas?: boolean | salasDefaultArgs<ExtArgs>
    _count?: boolean | FuncionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funciones"]>



  export type funcionesSelectScalar = {
    id_funcion?: boolean
    id_cartelera?: boolean
    id_sala?: boolean
    id_pelicula?: boolean
    fecha_hora_inicio?: boolean
    fecha_hora_fin?: boolean
    precio_boleto?: boolean
  }

  export type funcionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_funcion" | "id_cartelera" | "id_sala" | "id_pelicula" | "fecha_hora_inicio" | "fecha_hora_fin" | "precio_boleto", ExtArgs["result"]["funciones"]>
  export type funcionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boletos?: boolean | funciones$boletosArgs<ExtArgs>
    carteleras?: boolean | cartelerasDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
    salas?: boolean | salasDefaultArgs<ExtArgs>
    _count?: boolean | FuncionesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $funcionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "funciones"
    objects: {
      boletos: Prisma.$boletosPayload<ExtArgs>[]
      carteleras: Prisma.$cartelerasPayload<ExtArgs>
      peliculas: Prisma.$peliculasPayload<ExtArgs>
      salas: Prisma.$salasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_funcion: number
      id_cartelera: number
      id_sala: number
      id_pelicula: number
      fecha_hora_inicio: Date | null
      fecha_hora_fin: Date | null
      precio_boleto: Prisma.Decimal | null
    }, ExtArgs["result"]["funciones"]>
    composites: {}
  }

  type funcionesGetPayload<S extends boolean | null | undefined | funcionesDefaultArgs> = $Result.GetResult<Prisma.$funcionesPayload, S>

  type funcionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<funcionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FuncionesCountAggregateInputType | true
    }

  export interface funcionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['funciones'], meta: { name: 'funciones' } }
    /**
     * Find zero or one Funciones that matches the filter.
     * @param {funcionesFindUniqueArgs} args - Arguments to find a Funciones
     * @example
     * // Get one Funciones
     * const funciones = await prisma.funciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends funcionesFindUniqueArgs>(args: SelectSubset<T, funcionesFindUniqueArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Funciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {funcionesFindUniqueOrThrowArgs} args - Arguments to find a Funciones
     * @example
     * // Get one Funciones
     * const funciones = await prisma.funciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends funcionesFindUniqueOrThrowArgs>(args: SelectSubset<T, funcionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Funciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {funcionesFindFirstArgs} args - Arguments to find a Funciones
     * @example
     * // Get one Funciones
     * const funciones = await prisma.funciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends funcionesFindFirstArgs>(args?: SelectSubset<T, funcionesFindFirstArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Funciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {funcionesFindFirstOrThrowArgs} args - Arguments to find a Funciones
     * @example
     * // Get one Funciones
     * const funciones = await prisma.funciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends funcionesFindFirstOrThrowArgs>(args?: SelectSubset<T, funcionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Funciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {funcionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Funciones
     * const funciones = await prisma.funciones.findMany()
     * 
     * // Get first 10 Funciones
     * const funciones = await prisma.funciones.findMany({ take: 10 })
     * 
     * // Only select the `id_funcion`
     * const funcionesWithId_funcionOnly = await prisma.funciones.findMany({ select: { id_funcion: true } })
     * 
     */
    findMany<T extends funcionesFindManyArgs>(args?: SelectSubset<T, funcionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Funciones.
     * @param {funcionesCreateArgs} args - Arguments to create a Funciones.
     * @example
     * // Create one Funciones
     * const Funciones = await prisma.funciones.create({
     *   data: {
     *     // ... data to create a Funciones
     *   }
     * })
     * 
     */
    create<T extends funcionesCreateArgs>(args: SelectSubset<T, funcionesCreateArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Funciones.
     * @param {funcionesCreateManyArgs} args - Arguments to create many Funciones.
     * @example
     * // Create many Funciones
     * const funciones = await prisma.funciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends funcionesCreateManyArgs>(args?: SelectSubset<T, funcionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Funciones.
     * @param {funcionesDeleteArgs} args - Arguments to delete one Funciones.
     * @example
     * // Delete one Funciones
     * const Funciones = await prisma.funciones.delete({
     *   where: {
     *     // ... filter to delete one Funciones
     *   }
     * })
     * 
     */
    delete<T extends funcionesDeleteArgs>(args: SelectSubset<T, funcionesDeleteArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Funciones.
     * @param {funcionesUpdateArgs} args - Arguments to update one Funciones.
     * @example
     * // Update one Funciones
     * const funciones = await prisma.funciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends funcionesUpdateArgs>(args: SelectSubset<T, funcionesUpdateArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Funciones.
     * @param {funcionesDeleteManyArgs} args - Arguments to filter Funciones to delete.
     * @example
     * // Delete a few Funciones
     * const { count } = await prisma.funciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends funcionesDeleteManyArgs>(args?: SelectSubset<T, funcionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {funcionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Funciones
     * const funciones = await prisma.funciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends funcionesUpdateManyArgs>(args: SelectSubset<T, funcionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Funciones.
     * @param {funcionesUpsertArgs} args - Arguments to update or create a Funciones.
     * @example
     * // Update or create a Funciones
     * const funciones = await prisma.funciones.upsert({
     *   create: {
     *     // ... data to create a Funciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Funciones we want to update
     *   }
     * })
     */
    upsert<T extends funcionesUpsertArgs>(args: SelectSubset<T, funcionesUpsertArgs<ExtArgs>>): Prisma__funcionesClient<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Funciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {funcionesCountArgs} args - Arguments to filter Funciones to count.
     * @example
     * // Count the number of Funciones
     * const count = await prisma.funciones.count({
     *   where: {
     *     // ... the filter for the Funciones we want to count
     *   }
     * })
    **/
    count<T extends funcionesCountArgs>(
      args?: Subset<T, funcionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Funciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncionesAggregateArgs>(args: Subset<T, FuncionesAggregateArgs>): Prisma.PrismaPromise<GetFuncionesAggregateType<T>>

    /**
     * Group by Funciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {funcionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends funcionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: funcionesGroupByArgs['orderBy'] }
        : { orderBy?: funcionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, funcionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the funciones model
   */
  readonly fields: funcionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for funciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__funcionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    boletos<T extends funciones$boletosArgs<ExtArgs> = {}>(args?: Subset<T, funciones$boletosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    carteleras<T extends cartelerasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cartelerasDefaultArgs<ExtArgs>>): Prisma__cartelerasClient<$Result.GetResult<Prisma.$cartelerasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    peliculas<T extends peliculasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, peliculasDefaultArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    salas<T extends salasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, salasDefaultArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the funciones model
   */
  interface funcionesFieldRefs {
    readonly id_funcion: FieldRef<"funciones", 'Int'>
    readonly id_cartelera: FieldRef<"funciones", 'Int'>
    readonly id_sala: FieldRef<"funciones", 'Int'>
    readonly id_pelicula: FieldRef<"funciones", 'Int'>
    readonly fecha_hora_inicio: FieldRef<"funciones", 'DateTime'>
    readonly fecha_hora_fin: FieldRef<"funciones", 'DateTime'>
    readonly precio_boleto: FieldRef<"funciones", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * funciones findUnique
   */
  export type funcionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * Filter, which funciones to fetch.
     */
    where: funcionesWhereUniqueInput
  }

  /**
   * funciones findUniqueOrThrow
   */
  export type funcionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * Filter, which funciones to fetch.
     */
    where: funcionesWhereUniqueInput
  }

  /**
   * funciones findFirst
   */
  export type funcionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * Filter, which funciones to fetch.
     */
    where?: funcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of funciones to fetch.
     */
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for funciones.
     */
    cursor?: funcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` funciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` funciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of funciones.
     */
    distinct?: FuncionesScalarFieldEnum | FuncionesScalarFieldEnum[]
  }

  /**
   * funciones findFirstOrThrow
   */
  export type funcionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * Filter, which funciones to fetch.
     */
    where?: funcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of funciones to fetch.
     */
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for funciones.
     */
    cursor?: funcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` funciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` funciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of funciones.
     */
    distinct?: FuncionesScalarFieldEnum | FuncionesScalarFieldEnum[]
  }

  /**
   * funciones findMany
   */
  export type funcionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * Filter, which funciones to fetch.
     */
    where?: funcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of funciones to fetch.
     */
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing funciones.
     */
    cursor?: funcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` funciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` funciones.
     */
    skip?: number
    distinct?: FuncionesScalarFieldEnum | FuncionesScalarFieldEnum[]
  }

  /**
   * funciones create
   */
  export type funcionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * The data needed to create a funciones.
     */
    data: XOR<funcionesCreateInput, funcionesUncheckedCreateInput>
  }

  /**
   * funciones createMany
   */
  export type funcionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many funciones.
     */
    data: funcionesCreateManyInput | funcionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * funciones update
   */
  export type funcionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * The data needed to update a funciones.
     */
    data: XOR<funcionesUpdateInput, funcionesUncheckedUpdateInput>
    /**
     * Choose, which funciones to update.
     */
    where: funcionesWhereUniqueInput
  }

  /**
   * funciones updateMany
   */
  export type funcionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update funciones.
     */
    data: XOR<funcionesUpdateManyMutationInput, funcionesUncheckedUpdateManyInput>
    /**
     * Filter which funciones to update
     */
    where?: funcionesWhereInput
    /**
     * Limit how many funciones to update.
     */
    limit?: number
  }

  /**
   * funciones upsert
   */
  export type funcionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * The filter to search for the funciones to update in case it exists.
     */
    where: funcionesWhereUniqueInput
    /**
     * In case the funciones found by the `where` argument doesn't exist, create a new funciones with this data.
     */
    create: XOR<funcionesCreateInput, funcionesUncheckedCreateInput>
    /**
     * In case the funciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<funcionesUpdateInput, funcionesUncheckedUpdateInput>
  }

  /**
   * funciones delete
   */
  export type funcionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    /**
     * Filter which funciones to delete.
     */
    where: funcionesWhereUniqueInput
  }

  /**
   * funciones deleteMany
   */
  export type funcionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which funciones to delete
     */
    where?: funcionesWhereInput
    /**
     * Limit how many funciones to delete.
     */
    limit?: number
  }

  /**
   * funciones.boletos
   */
  export type funciones$boletosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    where?: boletosWhereInput
    orderBy?: boletosOrderByWithRelationInput | boletosOrderByWithRelationInput[]
    cursor?: boletosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BoletosScalarFieldEnum | BoletosScalarFieldEnum[]
  }

  /**
   * funciones without action
   */
  export type funcionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
  }


  /**
   * Model generos
   */

  export type AggregateGeneros = {
    _count: GenerosCountAggregateOutputType | null
    _avg: GenerosAvgAggregateOutputType | null
    _sum: GenerosSumAggregateOutputType | null
    _min: GenerosMinAggregateOutputType | null
    _max: GenerosMaxAggregateOutputType | null
  }

  export type GenerosAvgAggregateOutputType = {
    id_genero: number | null
  }

  export type GenerosSumAggregateOutputType = {
    id_genero: number | null
  }

  export type GenerosMinAggregateOutputType = {
    id_genero: number | null
    nombre_genero: string | null
  }

  export type GenerosMaxAggregateOutputType = {
    id_genero: number | null
    nombre_genero: string | null
  }

  export type GenerosCountAggregateOutputType = {
    id_genero: number
    nombre_genero: number
    _all: number
  }


  export type GenerosAvgAggregateInputType = {
    id_genero?: true
  }

  export type GenerosSumAggregateInputType = {
    id_genero?: true
  }

  export type GenerosMinAggregateInputType = {
    id_genero?: true
    nombre_genero?: true
  }

  export type GenerosMaxAggregateInputType = {
    id_genero?: true
    nombre_genero?: true
  }

  export type GenerosCountAggregateInputType = {
    id_genero?: true
    nombre_genero?: true
    _all?: true
  }

  export type GenerosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which generos to aggregate.
     */
    where?: generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of generos to fetch.
     */
    orderBy?: generosOrderByWithRelationInput | generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned generos
    **/
    _count?: true | GenerosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GenerosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GenerosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GenerosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GenerosMaxAggregateInputType
  }

  export type GetGenerosAggregateType<T extends GenerosAggregateArgs> = {
        [P in keyof T & keyof AggregateGeneros]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGeneros[P]>
      : GetScalarType<T[P], AggregateGeneros[P]>
  }




  export type generosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: generosWhereInput
    orderBy?: generosOrderByWithAggregationInput | generosOrderByWithAggregationInput[]
    by: GenerosScalarFieldEnum[] | GenerosScalarFieldEnum
    having?: generosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GenerosCountAggregateInputType | true
    _avg?: GenerosAvgAggregateInputType
    _sum?: GenerosSumAggregateInputType
    _min?: GenerosMinAggregateInputType
    _max?: GenerosMaxAggregateInputType
  }

  export type GenerosGroupByOutputType = {
    id_genero: number
    nombre_genero: string
    _count: GenerosCountAggregateOutputType | null
    _avg: GenerosAvgAggregateOutputType | null
    _sum: GenerosSumAggregateOutputType | null
    _min: GenerosMinAggregateOutputType | null
    _max: GenerosMaxAggregateOutputType | null
  }

  type GetGenerosGroupByPayload<T extends generosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GenerosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GenerosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GenerosGroupByOutputType[P]>
            : GetScalarType<T[P], GenerosGroupByOutputType[P]>
        }
      >
    >


  export type generosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_genero?: boolean
    nombre_genero?: boolean
    peliculas_generos?: boolean | generos$peliculas_generosArgs<ExtArgs>
    _count?: boolean | GenerosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["generos"]>



  export type generosSelectScalar = {
    id_genero?: boolean
    nombre_genero?: boolean
  }

  export type generosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_genero" | "nombre_genero", ExtArgs["result"]["generos"]>
  export type generosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas_generos?: boolean | generos$peliculas_generosArgs<ExtArgs>
    _count?: boolean | GenerosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $generosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "generos"
    objects: {
      peliculas_generos: Prisma.$peliculas_generosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_genero: number
      nombre_genero: string
    }, ExtArgs["result"]["generos"]>
    composites: {}
  }

  type generosGetPayload<S extends boolean | null | undefined | generosDefaultArgs> = $Result.GetResult<Prisma.$generosPayload, S>

  type generosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<generosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GenerosCountAggregateInputType | true
    }

  export interface generosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['generos'], meta: { name: 'generos' } }
    /**
     * Find zero or one Generos that matches the filter.
     * @param {generosFindUniqueArgs} args - Arguments to find a Generos
     * @example
     * // Get one Generos
     * const generos = await prisma.generos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends generosFindUniqueArgs>(args: SelectSubset<T, generosFindUniqueArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Generos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {generosFindUniqueOrThrowArgs} args - Arguments to find a Generos
     * @example
     * // Get one Generos
     * const generos = await prisma.generos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends generosFindUniqueOrThrowArgs>(args: SelectSubset<T, generosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Generos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {generosFindFirstArgs} args - Arguments to find a Generos
     * @example
     * // Get one Generos
     * const generos = await prisma.generos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends generosFindFirstArgs>(args?: SelectSubset<T, generosFindFirstArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Generos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {generosFindFirstOrThrowArgs} args - Arguments to find a Generos
     * @example
     * // Get one Generos
     * const generos = await prisma.generos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends generosFindFirstOrThrowArgs>(args?: SelectSubset<T, generosFindFirstOrThrowArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Generos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {generosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Generos
     * const generos = await prisma.generos.findMany()
     * 
     * // Get first 10 Generos
     * const generos = await prisma.generos.findMany({ take: 10 })
     * 
     * // Only select the `id_genero`
     * const generosWithId_generoOnly = await prisma.generos.findMany({ select: { id_genero: true } })
     * 
     */
    findMany<T extends generosFindManyArgs>(args?: SelectSubset<T, generosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Generos.
     * @param {generosCreateArgs} args - Arguments to create a Generos.
     * @example
     * // Create one Generos
     * const Generos = await prisma.generos.create({
     *   data: {
     *     // ... data to create a Generos
     *   }
     * })
     * 
     */
    create<T extends generosCreateArgs>(args: SelectSubset<T, generosCreateArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Generos.
     * @param {generosCreateManyArgs} args - Arguments to create many Generos.
     * @example
     * // Create many Generos
     * const generos = await prisma.generos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends generosCreateManyArgs>(args?: SelectSubset<T, generosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Generos.
     * @param {generosDeleteArgs} args - Arguments to delete one Generos.
     * @example
     * // Delete one Generos
     * const Generos = await prisma.generos.delete({
     *   where: {
     *     // ... filter to delete one Generos
     *   }
     * })
     * 
     */
    delete<T extends generosDeleteArgs>(args: SelectSubset<T, generosDeleteArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Generos.
     * @param {generosUpdateArgs} args - Arguments to update one Generos.
     * @example
     * // Update one Generos
     * const generos = await prisma.generos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends generosUpdateArgs>(args: SelectSubset<T, generosUpdateArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Generos.
     * @param {generosDeleteManyArgs} args - Arguments to filter Generos to delete.
     * @example
     * // Delete a few Generos
     * const { count } = await prisma.generos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends generosDeleteManyArgs>(args?: SelectSubset<T, generosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {generosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Generos
     * const generos = await prisma.generos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends generosUpdateManyArgs>(args: SelectSubset<T, generosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Generos.
     * @param {generosUpsertArgs} args - Arguments to update or create a Generos.
     * @example
     * // Update or create a Generos
     * const generos = await prisma.generos.upsert({
     *   create: {
     *     // ... data to create a Generos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Generos we want to update
     *   }
     * })
     */
    upsert<T extends generosUpsertArgs>(args: SelectSubset<T, generosUpsertArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {generosCountArgs} args - Arguments to filter Generos to count.
     * @example
     * // Count the number of Generos
     * const count = await prisma.generos.count({
     *   where: {
     *     // ... the filter for the Generos we want to count
     *   }
     * })
    **/
    count<T extends generosCountArgs>(
      args?: Subset<T, generosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GenerosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GenerosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GenerosAggregateArgs>(args: Subset<T, GenerosAggregateArgs>): Prisma.PrismaPromise<GetGenerosAggregateType<T>>

    /**
     * Group by Generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {generosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends generosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: generosGroupByArgs['orderBy'] }
        : { orderBy?: generosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, generosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGenerosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the generos model
   */
  readonly fields: generosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for generos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__generosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peliculas_generos<T extends generos$peliculas_generosArgs<ExtArgs> = {}>(args?: Subset<T, generos$peliculas_generosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the generos model
   */
  interface generosFieldRefs {
    readonly id_genero: FieldRef<"generos", 'Int'>
    readonly nombre_genero: FieldRef<"generos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * generos findUnique
   */
  export type generosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * Filter, which generos to fetch.
     */
    where: generosWhereUniqueInput
  }

  /**
   * generos findUniqueOrThrow
   */
  export type generosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * Filter, which generos to fetch.
     */
    where: generosWhereUniqueInput
  }

  /**
   * generos findFirst
   */
  export type generosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * Filter, which generos to fetch.
     */
    where?: generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of generos to fetch.
     */
    orderBy?: generosOrderByWithRelationInput | generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for generos.
     */
    cursor?: generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of generos.
     */
    distinct?: GenerosScalarFieldEnum | GenerosScalarFieldEnum[]
  }

  /**
   * generos findFirstOrThrow
   */
  export type generosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * Filter, which generos to fetch.
     */
    where?: generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of generos to fetch.
     */
    orderBy?: generosOrderByWithRelationInput | generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for generos.
     */
    cursor?: generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of generos.
     */
    distinct?: GenerosScalarFieldEnum | GenerosScalarFieldEnum[]
  }

  /**
   * generos findMany
   */
  export type generosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * Filter, which generos to fetch.
     */
    where?: generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of generos to fetch.
     */
    orderBy?: generosOrderByWithRelationInput | generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing generos.
     */
    cursor?: generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` generos.
     */
    skip?: number
    distinct?: GenerosScalarFieldEnum | GenerosScalarFieldEnum[]
  }

  /**
   * generos create
   */
  export type generosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * The data needed to create a generos.
     */
    data: XOR<generosCreateInput, generosUncheckedCreateInput>
  }

  /**
   * generos createMany
   */
  export type generosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many generos.
     */
    data: generosCreateManyInput | generosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * generos update
   */
  export type generosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * The data needed to update a generos.
     */
    data: XOR<generosUpdateInput, generosUncheckedUpdateInput>
    /**
     * Choose, which generos to update.
     */
    where: generosWhereUniqueInput
  }

  /**
   * generos updateMany
   */
  export type generosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update generos.
     */
    data: XOR<generosUpdateManyMutationInput, generosUncheckedUpdateManyInput>
    /**
     * Filter which generos to update
     */
    where?: generosWhereInput
    /**
     * Limit how many generos to update.
     */
    limit?: number
  }

  /**
   * generos upsert
   */
  export type generosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * The filter to search for the generos to update in case it exists.
     */
    where: generosWhereUniqueInput
    /**
     * In case the generos found by the `where` argument doesn't exist, create a new generos with this data.
     */
    create: XOR<generosCreateInput, generosUncheckedCreateInput>
    /**
     * In case the generos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<generosUpdateInput, generosUncheckedUpdateInput>
  }

  /**
   * generos delete
   */
  export type generosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
    /**
     * Filter which generos to delete.
     */
    where: generosWhereUniqueInput
  }

  /**
   * generos deleteMany
   */
  export type generosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which generos to delete
     */
    where?: generosWhereInput
    /**
     * Limit how many generos to delete.
     */
    limit?: number
  }

  /**
   * generos.peliculas_generos
   */
  export type generos$peliculas_generosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    where?: peliculas_generosWhereInput
    orderBy?: peliculas_generosOrderByWithRelationInput | peliculas_generosOrderByWithRelationInput[]
    cursor?: peliculas_generosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Peliculas_generosScalarFieldEnum | Peliculas_generosScalarFieldEnum[]
  }

  /**
   * generos without action
   */
  export type generosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the generos
     */
    select?: generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the generos
     */
    omit?: generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: generosInclude<ExtArgs> | null
  }


  /**
   * Model historial_reproduccion
   */

  export type AggregateHistorial_reproduccion = {
    _count: Historial_reproduccionCountAggregateOutputType | null
    _avg: Historial_reproduccionAvgAggregateOutputType | null
    _sum: Historial_reproduccionSumAggregateOutputType | null
    _min: Historial_reproduccionMinAggregateOutputType | null
    _max: Historial_reproduccionMaxAggregateOutputType | null
  }

  export type Historial_reproduccionAvgAggregateOutputType = {
    id_usuario: number | null
    id_pelicula: number | null
    progreso_visto_porcentaje: number | null
  }

  export type Historial_reproduccionSumAggregateOutputType = {
    id_usuario: number | null
    id_pelicula: number | null
    progreso_visto_porcentaje: number | null
  }

  export type Historial_reproduccionMinAggregateOutputType = {
    id_usuario: number | null
    id_pelicula: number | null
    fecha_visualizacion: Date | null
    progreso_visto_porcentaje: number | null
  }

  export type Historial_reproduccionMaxAggregateOutputType = {
    id_usuario: number | null
    id_pelicula: number | null
    fecha_visualizacion: Date | null
    progreso_visto_porcentaje: number | null
  }

  export type Historial_reproduccionCountAggregateOutputType = {
    id_usuario: number
    id_pelicula: number
    fecha_visualizacion: number
    progreso_visto_porcentaje: number
    _all: number
  }


  export type Historial_reproduccionAvgAggregateInputType = {
    id_usuario?: true
    id_pelicula?: true
    progreso_visto_porcentaje?: true
  }

  export type Historial_reproduccionSumAggregateInputType = {
    id_usuario?: true
    id_pelicula?: true
    progreso_visto_porcentaje?: true
  }

  export type Historial_reproduccionMinAggregateInputType = {
    id_usuario?: true
    id_pelicula?: true
    fecha_visualizacion?: true
    progreso_visto_porcentaje?: true
  }

  export type Historial_reproduccionMaxAggregateInputType = {
    id_usuario?: true
    id_pelicula?: true
    fecha_visualizacion?: true
    progreso_visto_porcentaje?: true
  }

  export type Historial_reproduccionCountAggregateInputType = {
    id_usuario?: true
    id_pelicula?: true
    fecha_visualizacion?: true
    progreso_visto_porcentaje?: true
    _all?: true
  }

  export type Historial_reproduccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_reproduccion to aggregate.
     */
    where?: historial_reproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_reproduccions to fetch.
     */
    orderBy?: historial_reproduccionOrderByWithRelationInput | historial_reproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historial_reproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_reproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_reproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historial_reproduccions
    **/
    _count?: true | Historial_reproduccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Historial_reproduccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Historial_reproduccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Historial_reproduccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Historial_reproduccionMaxAggregateInputType
  }

  export type GetHistorial_reproduccionAggregateType<T extends Historial_reproduccionAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorial_reproduccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorial_reproduccion[P]>
      : GetScalarType<T[P], AggregateHistorial_reproduccion[P]>
  }




  export type historial_reproduccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_reproduccionWhereInput
    orderBy?: historial_reproduccionOrderByWithAggregationInput | historial_reproduccionOrderByWithAggregationInput[]
    by: Historial_reproduccionScalarFieldEnum[] | Historial_reproduccionScalarFieldEnum
    having?: historial_reproduccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Historial_reproduccionCountAggregateInputType | true
    _avg?: Historial_reproduccionAvgAggregateInputType
    _sum?: Historial_reproduccionSumAggregateInputType
    _min?: Historial_reproduccionMinAggregateInputType
    _max?: Historial_reproduccionMaxAggregateInputType
  }

  export type Historial_reproduccionGroupByOutputType = {
    id_usuario: number
    id_pelicula: number
    fecha_visualizacion: Date | null
    progreso_visto_porcentaje: number | null
    _count: Historial_reproduccionCountAggregateOutputType | null
    _avg: Historial_reproduccionAvgAggregateOutputType | null
    _sum: Historial_reproduccionSumAggregateOutputType | null
    _min: Historial_reproduccionMinAggregateOutputType | null
    _max: Historial_reproduccionMaxAggregateOutputType | null
  }

  type GetHistorial_reproduccionGroupByPayload<T extends historial_reproduccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Historial_reproduccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Historial_reproduccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Historial_reproduccionGroupByOutputType[P]>
            : GetScalarType<T[P], Historial_reproduccionGroupByOutputType[P]>
        }
      >
    >


  export type historial_reproduccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    id_pelicula?: boolean
    fecha_visualizacion?: boolean
    progreso_visto_porcentaje?: boolean
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_reproduccion"]>



  export type historial_reproduccionSelectScalar = {
    id_usuario?: boolean
    id_pelicula?: boolean
    fecha_visualizacion?: boolean
    progreso_visto_porcentaje?: boolean
  }

  export type historial_reproduccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "id_pelicula" | "fecha_visualizacion" | "progreso_visto_porcentaje", ExtArgs["result"]["historial_reproduccion"]>
  export type historial_reproduccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $historial_reproduccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historial_reproduccion"
    objects: {
      peliculas: Prisma.$peliculasPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      id_pelicula: number
      fecha_visualizacion: Date | null
      progreso_visto_porcentaje: number | null
    }, ExtArgs["result"]["historial_reproduccion"]>
    composites: {}
  }

  type historial_reproduccionGetPayload<S extends boolean | null | undefined | historial_reproduccionDefaultArgs> = $Result.GetResult<Prisma.$historial_reproduccionPayload, S>

  type historial_reproduccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<historial_reproduccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Historial_reproduccionCountAggregateInputType | true
    }

  export interface historial_reproduccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historial_reproduccion'], meta: { name: 'historial_reproduccion' } }
    /**
     * Find zero or one Historial_reproduccion that matches the filter.
     * @param {historial_reproduccionFindUniqueArgs} args - Arguments to find a Historial_reproduccion
     * @example
     * // Get one Historial_reproduccion
     * const historial_reproduccion = await prisma.historial_reproduccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends historial_reproduccionFindUniqueArgs>(args: SelectSubset<T, historial_reproduccionFindUniqueArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Historial_reproduccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {historial_reproduccionFindUniqueOrThrowArgs} args - Arguments to find a Historial_reproduccion
     * @example
     * // Get one Historial_reproduccion
     * const historial_reproduccion = await prisma.historial_reproduccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends historial_reproduccionFindUniqueOrThrowArgs>(args: SelectSubset<T, historial_reproduccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historial_reproduccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_reproduccionFindFirstArgs} args - Arguments to find a Historial_reproduccion
     * @example
     * // Get one Historial_reproduccion
     * const historial_reproduccion = await prisma.historial_reproduccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends historial_reproduccionFindFirstArgs>(args?: SelectSubset<T, historial_reproduccionFindFirstArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historial_reproduccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_reproduccionFindFirstOrThrowArgs} args - Arguments to find a Historial_reproduccion
     * @example
     * // Get one Historial_reproduccion
     * const historial_reproduccion = await prisma.historial_reproduccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends historial_reproduccionFindFirstOrThrowArgs>(args?: SelectSubset<T, historial_reproduccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Historial_reproduccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_reproduccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Historial_reproduccions
     * const historial_reproduccions = await prisma.historial_reproduccion.findMany()
     * 
     * // Get first 10 Historial_reproduccions
     * const historial_reproduccions = await prisma.historial_reproduccion.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const historial_reproduccionWithId_usuarioOnly = await prisma.historial_reproduccion.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends historial_reproduccionFindManyArgs>(args?: SelectSubset<T, historial_reproduccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Historial_reproduccion.
     * @param {historial_reproduccionCreateArgs} args - Arguments to create a Historial_reproduccion.
     * @example
     * // Create one Historial_reproduccion
     * const Historial_reproduccion = await prisma.historial_reproduccion.create({
     *   data: {
     *     // ... data to create a Historial_reproduccion
     *   }
     * })
     * 
     */
    create<T extends historial_reproduccionCreateArgs>(args: SelectSubset<T, historial_reproduccionCreateArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Historial_reproduccions.
     * @param {historial_reproduccionCreateManyArgs} args - Arguments to create many Historial_reproduccions.
     * @example
     * // Create many Historial_reproduccions
     * const historial_reproduccion = await prisma.historial_reproduccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends historial_reproduccionCreateManyArgs>(args?: SelectSubset<T, historial_reproduccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Historial_reproduccion.
     * @param {historial_reproduccionDeleteArgs} args - Arguments to delete one Historial_reproduccion.
     * @example
     * // Delete one Historial_reproduccion
     * const Historial_reproduccion = await prisma.historial_reproduccion.delete({
     *   where: {
     *     // ... filter to delete one Historial_reproduccion
     *   }
     * })
     * 
     */
    delete<T extends historial_reproduccionDeleteArgs>(args: SelectSubset<T, historial_reproduccionDeleteArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Historial_reproduccion.
     * @param {historial_reproduccionUpdateArgs} args - Arguments to update one Historial_reproduccion.
     * @example
     * // Update one Historial_reproduccion
     * const historial_reproduccion = await prisma.historial_reproduccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends historial_reproduccionUpdateArgs>(args: SelectSubset<T, historial_reproduccionUpdateArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Historial_reproduccions.
     * @param {historial_reproduccionDeleteManyArgs} args - Arguments to filter Historial_reproduccions to delete.
     * @example
     * // Delete a few Historial_reproduccions
     * const { count } = await prisma.historial_reproduccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends historial_reproduccionDeleteManyArgs>(args?: SelectSubset<T, historial_reproduccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historial_reproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_reproduccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Historial_reproduccions
     * const historial_reproduccion = await prisma.historial_reproduccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends historial_reproduccionUpdateManyArgs>(args: SelectSubset<T, historial_reproduccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Historial_reproduccion.
     * @param {historial_reproduccionUpsertArgs} args - Arguments to update or create a Historial_reproduccion.
     * @example
     * // Update or create a Historial_reproduccion
     * const historial_reproduccion = await prisma.historial_reproduccion.upsert({
     *   create: {
     *     // ... data to create a Historial_reproduccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Historial_reproduccion we want to update
     *   }
     * })
     */
    upsert<T extends historial_reproduccionUpsertArgs>(args: SelectSubset<T, historial_reproduccionUpsertArgs<ExtArgs>>): Prisma__historial_reproduccionClient<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Historial_reproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_reproduccionCountArgs} args - Arguments to filter Historial_reproduccions to count.
     * @example
     * // Count the number of Historial_reproduccions
     * const count = await prisma.historial_reproduccion.count({
     *   where: {
     *     // ... the filter for the Historial_reproduccions we want to count
     *   }
     * })
    **/
    count<T extends historial_reproduccionCountArgs>(
      args?: Subset<T, historial_reproduccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Historial_reproduccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Historial_reproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Historial_reproduccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Historial_reproduccionAggregateArgs>(args: Subset<T, Historial_reproduccionAggregateArgs>): Prisma.PrismaPromise<GetHistorial_reproduccionAggregateType<T>>

    /**
     * Group by Historial_reproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_reproduccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historial_reproduccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historial_reproduccionGroupByArgs['orderBy'] }
        : { orderBy?: historial_reproduccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historial_reproduccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorial_reproduccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historial_reproduccion model
   */
  readonly fields: historial_reproduccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historial_reproduccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historial_reproduccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peliculas<T extends peliculasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, peliculasDefaultArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the historial_reproduccion model
   */
  interface historial_reproduccionFieldRefs {
    readonly id_usuario: FieldRef<"historial_reproduccion", 'Int'>
    readonly id_pelicula: FieldRef<"historial_reproduccion", 'Int'>
    readonly fecha_visualizacion: FieldRef<"historial_reproduccion", 'DateTime'>
    readonly progreso_visto_porcentaje: FieldRef<"historial_reproduccion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * historial_reproduccion findUnique
   */
  export type historial_reproduccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * Filter, which historial_reproduccion to fetch.
     */
    where: historial_reproduccionWhereUniqueInput
  }

  /**
   * historial_reproduccion findUniqueOrThrow
   */
  export type historial_reproduccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * Filter, which historial_reproduccion to fetch.
     */
    where: historial_reproduccionWhereUniqueInput
  }

  /**
   * historial_reproduccion findFirst
   */
  export type historial_reproduccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * Filter, which historial_reproduccion to fetch.
     */
    where?: historial_reproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_reproduccions to fetch.
     */
    orderBy?: historial_reproduccionOrderByWithRelationInput | historial_reproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_reproduccions.
     */
    cursor?: historial_reproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_reproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_reproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_reproduccions.
     */
    distinct?: Historial_reproduccionScalarFieldEnum | Historial_reproduccionScalarFieldEnum[]
  }

  /**
   * historial_reproduccion findFirstOrThrow
   */
  export type historial_reproduccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * Filter, which historial_reproduccion to fetch.
     */
    where?: historial_reproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_reproduccions to fetch.
     */
    orderBy?: historial_reproduccionOrderByWithRelationInput | historial_reproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_reproduccions.
     */
    cursor?: historial_reproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_reproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_reproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_reproduccions.
     */
    distinct?: Historial_reproduccionScalarFieldEnum | Historial_reproduccionScalarFieldEnum[]
  }

  /**
   * historial_reproduccion findMany
   */
  export type historial_reproduccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * Filter, which historial_reproduccions to fetch.
     */
    where?: historial_reproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_reproduccions to fetch.
     */
    orderBy?: historial_reproduccionOrderByWithRelationInput | historial_reproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historial_reproduccions.
     */
    cursor?: historial_reproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_reproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_reproduccions.
     */
    skip?: number
    distinct?: Historial_reproduccionScalarFieldEnum | Historial_reproduccionScalarFieldEnum[]
  }

  /**
   * historial_reproduccion create
   */
  export type historial_reproduccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * The data needed to create a historial_reproduccion.
     */
    data: XOR<historial_reproduccionCreateInput, historial_reproduccionUncheckedCreateInput>
  }

  /**
   * historial_reproduccion createMany
   */
  export type historial_reproduccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historial_reproduccions.
     */
    data: historial_reproduccionCreateManyInput | historial_reproduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * historial_reproduccion update
   */
  export type historial_reproduccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * The data needed to update a historial_reproduccion.
     */
    data: XOR<historial_reproduccionUpdateInput, historial_reproduccionUncheckedUpdateInput>
    /**
     * Choose, which historial_reproduccion to update.
     */
    where: historial_reproduccionWhereUniqueInput
  }

  /**
   * historial_reproduccion updateMany
   */
  export type historial_reproduccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historial_reproduccions.
     */
    data: XOR<historial_reproduccionUpdateManyMutationInput, historial_reproduccionUncheckedUpdateManyInput>
    /**
     * Filter which historial_reproduccions to update
     */
    where?: historial_reproduccionWhereInput
    /**
     * Limit how many historial_reproduccions to update.
     */
    limit?: number
  }

  /**
   * historial_reproduccion upsert
   */
  export type historial_reproduccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * The filter to search for the historial_reproduccion to update in case it exists.
     */
    where: historial_reproduccionWhereUniqueInput
    /**
     * In case the historial_reproduccion found by the `where` argument doesn't exist, create a new historial_reproduccion with this data.
     */
    create: XOR<historial_reproduccionCreateInput, historial_reproduccionUncheckedCreateInput>
    /**
     * In case the historial_reproduccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historial_reproduccionUpdateInput, historial_reproduccionUncheckedUpdateInput>
  }

  /**
   * historial_reproduccion delete
   */
  export type historial_reproduccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    /**
     * Filter which historial_reproduccion to delete.
     */
    where: historial_reproduccionWhereUniqueInput
  }

  /**
   * historial_reproduccion deleteMany
   */
  export type historial_reproduccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_reproduccions to delete
     */
    where?: historial_reproduccionWhereInput
    /**
     * Limit how many historial_reproduccions to delete.
     */
    limit?: number
  }

  /**
   * historial_reproduccion without action
   */
  export type historial_reproduccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
  }


  /**
   * Model imagenes_extra
   */

  export type AggregateImagenes_extra = {
    _count: Imagenes_extraCountAggregateOutputType | null
    _avg: Imagenes_extraAvgAggregateOutputType | null
    _sum: Imagenes_extraSumAggregateOutputType | null
    _min: Imagenes_extraMinAggregateOutputType | null
    _max: Imagenes_extraMaxAggregateOutputType | null
  }

  export type Imagenes_extraAvgAggregateOutputType = {
    id_imagen_extra: number | null
  }

  export type Imagenes_extraSumAggregateOutputType = {
    id_imagen_extra: number | null
  }

  export type Imagenes_extraMinAggregateOutputType = {
    id_imagen_extra: number | null
    tipo: $Enums.imagenes_extra_tipo | null
    nombre: string | null
    url: string | null
    descripcion: string | null
  }

  export type Imagenes_extraMaxAggregateOutputType = {
    id_imagen_extra: number | null
    tipo: $Enums.imagenes_extra_tipo | null
    nombre: string | null
    url: string | null
    descripcion: string | null
  }

  export type Imagenes_extraCountAggregateOutputType = {
    id_imagen_extra: number
    tipo: number
    nombre: number
    url: number
    descripcion: number
    _all: number
  }


  export type Imagenes_extraAvgAggregateInputType = {
    id_imagen_extra?: true
  }

  export type Imagenes_extraSumAggregateInputType = {
    id_imagen_extra?: true
  }

  export type Imagenes_extraMinAggregateInputType = {
    id_imagen_extra?: true
    tipo?: true
    nombre?: true
    url?: true
    descripcion?: true
  }

  export type Imagenes_extraMaxAggregateInputType = {
    id_imagen_extra?: true
    tipo?: true
    nombre?: true
    url?: true
    descripcion?: true
  }

  export type Imagenes_extraCountAggregateInputType = {
    id_imagen_extra?: true
    tipo?: true
    nombre?: true
    url?: true
    descripcion?: true
    _all?: true
  }

  export type Imagenes_extraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagenes_extra to aggregate.
     */
    where?: imagenes_extraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_extras to fetch.
     */
    orderBy?: imagenes_extraOrderByWithRelationInput | imagenes_extraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imagenes_extraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_extras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_extras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imagenes_extras
    **/
    _count?: true | Imagenes_extraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Imagenes_extraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Imagenes_extraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Imagenes_extraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Imagenes_extraMaxAggregateInputType
  }

  export type GetImagenes_extraAggregateType<T extends Imagenes_extraAggregateArgs> = {
        [P in keyof T & keyof AggregateImagenes_extra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagenes_extra[P]>
      : GetScalarType<T[P], AggregateImagenes_extra[P]>
  }




  export type imagenes_extraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagenes_extraWhereInput
    orderBy?: imagenes_extraOrderByWithAggregationInput | imagenes_extraOrderByWithAggregationInput[]
    by: Imagenes_extraScalarFieldEnum[] | Imagenes_extraScalarFieldEnum
    having?: imagenes_extraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Imagenes_extraCountAggregateInputType | true
    _avg?: Imagenes_extraAvgAggregateInputType
    _sum?: Imagenes_extraSumAggregateInputType
    _min?: Imagenes_extraMinAggregateInputType
    _max?: Imagenes_extraMaxAggregateInputType
  }

  export type Imagenes_extraGroupByOutputType = {
    id_imagen_extra: number
    tipo: $Enums.imagenes_extra_tipo
    nombre: string
    url: string
    descripcion: string | null
    _count: Imagenes_extraCountAggregateOutputType | null
    _avg: Imagenes_extraAvgAggregateOutputType | null
    _sum: Imagenes_extraSumAggregateOutputType | null
    _min: Imagenes_extraMinAggregateOutputType | null
    _max: Imagenes_extraMaxAggregateOutputType | null
  }

  type GetImagenes_extraGroupByPayload<T extends imagenes_extraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Imagenes_extraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Imagenes_extraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Imagenes_extraGroupByOutputType[P]>
            : GetScalarType<T[P], Imagenes_extraGroupByOutputType[P]>
        }
      >
    >


  export type imagenes_extraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_imagen_extra?: boolean
    tipo?: boolean
    nombre?: boolean
    url?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["imagenes_extra"]>



  export type imagenes_extraSelectScalar = {
    id_imagen_extra?: boolean
    tipo?: boolean
    nombre?: boolean
    url?: boolean
    descripcion?: boolean
  }

  export type imagenes_extraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_imagen_extra" | "tipo" | "nombre" | "url" | "descripcion", ExtArgs["result"]["imagenes_extra"]>

  export type $imagenes_extraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imagenes_extra"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_imagen_extra: number
      tipo: $Enums.imagenes_extra_tipo
      nombre: string
      url: string
      descripcion: string | null
    }, ExtArgs["result"]["imagenes_extra"]>
    composites: {}
  }

  type imagenes_extraGetPayload<S extends boolean | null | undefined | imagenes_extraDefaultArgs> = $Result.GetResult<Prisma.$imagenes_extraPayload, S>

  type imagenes_extraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<imagenes_extraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Imagenes_extraCountAggregateInputType | true
    }

  export interface imagenes_extraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imagenes_extra'], meta: { name: 'imagenes_extra' } }
    /**
     * Find zero or one Imagenes_extra that matches the filter.
     * @param {imagenes_extraFindUniqueArgs} args - Arguments to find a Imagenes_extra
     * @example
     * // Get one Imagenes_extra
     * const imagenes_extra = await prisma.imagenes_extra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends imagenes_extraFindUniqueArgs>(args: SelectSubset<T, imagenes_extraFindUniqueArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Imagenes_extra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {imagenes_extraFindUniqueOrThrowArgs} args - Arguments to find a Imagenes_extra
     * @example
     * // Get one Imagenes_extra
     * const imagenes_extra = await prisma.imagenes_extra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends imagenes_extraFindUniqueOrThrowArgs>(args: SelectSubset<T, imagenes_extraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imagenes_extra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_extraFindFirstArgs} args - Arguments to find a Imagenes_extra
     * @example
     * // Get one Imagenes_extra
     * const imagenes_extra = await prisma.imagenes_extra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends imagenes_extraFindFirstArgs>(args?: SelectSubset<T, imagenes_extraFindFirstArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imagenes_extra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_extraFindFirstOrThrowArgs} args - Arguments to find a Imagenes_extra
     * @example
     * // Get one Imagenes_extra
     * const imagenes_extra = await prisma.imagenes_extra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends imagenes_extraFindFirstOrThrowArgs>(args?: SelectSubset<T, imagenes_extraFindFirstOrThrowArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Imagenes_extras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_extraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imagenes_extras
     * const imagenes_extras = await prisma.imagenes_extra.findMany()
     * 
     * // Get first 10 Imagenes_extras
     * const imagenes_extras = await prisma.imagenes_extra.findMany({ take: 10 })
     * 
     * // Only select the `id_imagen_extra`
     * const imagenes_extraWithId_imagen_extraOnly = await prisma.imagenes_extra.findMany({ select: { id_imagen_extra: true } })
     * 
     */
    findMany<T extends imagenes_extraFindManyArgs>(args?: SelectSubset<T, imagenes_extraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Imagenes_extra.
     * @param {imagenes_extraCreateArgs} args - Arguments to create a Imagenes_extra.
     * @example
     * // Create one Imagenes_extra
     * const Imagenes_extra = await prisma.imagenes_extra.create({
     *   data: {
     *     // ... data to create a Imagenes_extra
     *   }
     * })
     * 
     */
    create<T extends imagenes_extraCreateArgs>(args: SelectSubset<T, imagenes_extraCreateArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Imagenes_extras.
     * @param {imagenes_extraCreateManyArgs} args - Arguments to create many Imagenes_extras.
     * @example
     * // Create many Imagenes_extras
     * const imagenes_extra = await prisma.imagenes_extra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends imagenes_extraCreateManyArgs>(args?: SelectSubset<T, imagenes_extraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Imagenes_extra.
     * @param {imagenes_extraDeleteArgs} args - Arguments to delete one Imagenes_extra.
     * @example
     * // Delete one Imagenes_extra
     * const Imagenes_extra = await prisma.imagenes_extra.delete({
     *   where: {
     *     // ... filter to delete one Imagenes_extra
     *   }
     * })
     * 
     */
    delete<T extends imagenes_extraDeleteArgs>(args: SelectSubset<T, imagenes_extraDeleteArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Imagenes_extra.
     * @param {imagenes_extraUpdateArgs} args - Arguments to update one Imagenes_extra.
     * @example
     * // Update one Imagenes_extra
     * const imagenes_extra = await prisma.imagenes_extra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends imagenes_extraUpdateArgs>(args: SelectSubset<T, imagenes_extraUpdateArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Imagenes_extras.
     * @param {imagenes_extraDeleteManyArgs} args - Arguments to filter Imagenes_extras to delete.
     * @example
     * // Delete a few Imagenes_extras
     * const { count } = await prisma.imagenes_extra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends imagenes_extraDeleteManyArgs>(args?: SelectSubset<T, imagenes_extraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagenes_extras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_extraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imagenes_extras
     * const imagenes_extra = await prisma.imagenes_extra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends imagenes_extraUpdateManyArgs>(args: SelectSubset<T, imagenes_extraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Imagenes_extra.
     * @param {imagenes_extraUpsertArgs} args - Arguments to update or create a Imagenes_extra.
     * @example
     * // Update or create a Imagenes_extra
     * const imagenes_extra = await prisma.imagenes_extra.upsert({
     *   create: {
     *     // ... data to create a Imagenes_extra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imagenes_extra we want to update
     *   }
     * })
     */
    upsert<T extends imagenes_extraUpsertArgs>(args: SelectSubset<T, imagenes_extraUpsertArgs<ExtArgs>>): Prisma__imagenes_extraClient<$Result.GetResult<Prisma.$imagenes_extraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Imagenes_extras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_extraCountArgs} args - Arguments to filter Imagenes_extras to count.
     * @example
     * // Count the number of Imagenes_extras
     * const count = await prisma.imagenes_extra.count({
     *   where: {
     *     // ... the filter for the Imagenes_extras we want to count
     *   }
     * })
    **/
    count<T extends imagenes_extraCountArgs>(
      args?: Subset<T, imagenes_extraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Imagenes_extraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imagenes_extra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Imagenes_extraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Imagenes_extraAggregateArgs>(args: Subset<T, Imagenes_extraAggregateArgs>): Prisma.PrismaPromise<GetImagenes_extraAggregateType<T>>

    /**
     * Group by Imagenes_extra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_extraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imagenes_extraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imagenes_extraGroupByArgs['orderBy'] }
        : { orderBy?: imagenes_extraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imagenes_extraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagenes_extraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imagenes_extra model
   */
  readonly fields: imagenes_extraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imagenes_extra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imagenes_extraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the imagenes_extra model
   */
  interface imagenes_extraFieldRefs {
    readonly id_imagen_extra: FieldRef<"imagenes_extra", 'Int'>
    readonly tipo: FieldRef<"imagenes_extra", 'imagenes_extra_tipo'>
    readonly nombre: FieldRef<"imagenes_extra", 'String'>
    readonly url: FieldRef<"imagenes_extra", 'String'>
    readonly descripcion: FieldRef<"imagenes_extra", 'String'>
  }
    

  // Custom InputTypes
  /**
   * imagenes_extra findUnique
   */
  export type imagenes_extraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * Filter, which imagenes_extra to fetch.
     */
    where: imagenes_extraWhereUniqueInput
  }

  /**
   * imagenes_extra findUniqueOrThrow
   */
  export type imagenes_extraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * Filter, which imagenes_extra to fetch.
     */
    where: imagenes_extraWhereUniqueInput
  }

  /**
   * imagenes_extra findFirst
   */
  export type imagenes_extraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * Filter, which imagenes_extra to fetch.
     */
    where?: imagenes_extraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_extras to fetch.
     */
    orderBy?: imagenes_extraOrderByWithRelationInput | imagenes_extraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagenes_extras.
     */
    cursor?: imagenes_extraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_extras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_extras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagenes_extras.
     */
    distinct?: Imagenes_extraScalarFieldEnum | Imagenes_extraScalarFieldEnum[]
  }

  /**
   * imagenes_extra findFirstOrThrow
   */
  export type imagenes_extraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * Filter, which imagenes_extra to fetch.
     */
    where?: imagenes_extraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_extras to fetch.
     */
    orderBy?: imagenes_extraOrderByWithRelationInput | imagenes_extraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagenes_extras.
     */
    cursor?: imagenes_extraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_extras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_extras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagenes_extras.
     */
    distinct?: Imagenes_extraScalarFieldEnum | Imagenes_extraScalarFieldEnum[]
  }

  /**
   * imagenes_extra findMany
   */
  export type imagenes_extraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * Filter, which imagenes_extras to fetch.
     */
    where?: imagenes_extraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_extras to fetch.
     */
    orderBy?: imagenes_extraOrderByWithRelationInput | imagenes_extraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imagenes_extras.
     */
    cursor?: imagenes_extraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_extras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_extras.
     */
    skip?: number
    distinct?: Imagenes_extraScalarFieldEnum | Imagenes_extraScalarFieldEnum[]
  }

  /**
   * imagenes_extra create
   */
  export type imagenes_extraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * The data needed to create a imagenes_extra.
     */
    data: XOR<imagenes_extraCreateInput, imagenes_extraUncheckedCreateInput>
  }

  /**
   * imagenes_extra createMany
   */
  export type imagenes_extraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imagenes_extras.
     */
    data: imagenes_extraCreateManyInput | imagenes_extraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imagenes_extra update
   */
  export type imagenes_extraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * The data needed to update a imagenes_extra.
     */
    data: XOR<imagenes_extraUpdateInput, imagenes_extraUncheckedUpdateInput>
    /**
     * Choose, which imagenes_extra to update.
     */
    where: imagenes_extraWhereUniqueInput
  }

  /**
   * imagenes_extra updateMany
   */
  export type imagenes_extraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imagenes_extras.
     */
    data: XOR<imagenes_extraUpdateManyMutationInput, imagenes_extraUncheckedUpdateManyInput>
    /**
     * Filter which imagenes_extras to update
     */
    where?: imagenes_extraWhereInput
    /**
     * Limit how many imagenes_extras to update.
     */
    limit?: number
  }

  /**
   * imagenes_extra upsert
   */
  export type imagenes_extraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * The filter to search for the imagenes_extra to update in case it exists.
     */
    where: imagenes_extraWhereUniqueInput
    /**
     * In case the imagenes_extra found by the `where` argument doesn't exist, create a new imagenes_extra with this data.
     */
    create: XOR<imagenes_extraCreateInput, imagenes_extraUncheckedCreateInput>
    /**
     * In case the imagenes_extra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imagenes_extraUpdateInput, imagenes_extraUncheckedUpdateInput>
  }

  /**
   * imagenes_extra delete
   */
  export type imagenes_extraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
    /**
     * Filter which imagenes_extra to delete.
     */
    where: imagenes_extraWhereUniqueInput
  }

  /**
   * imagenes_extra deleteMany
   */
  export type imagenes_extraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagenes_extras to delete
     */
    where?: imagenes_extraWhereInput
    /**
     * Limit how many imagenes_extras to delete.
     */
    limit?: number
  }

  /**
   * imagenes_extra without action
   */
  export type imagenes_extraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_extra
     */
    select?: imagenes_extraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imagenes_extra
     */
    omit?: imagenes_extraOmit<ExtArgs> | null
  }


  /**
   * Model intentos_login
   */

  export type AggregateIntentos_login = {
    _count: Intentos_loginCountAggregateOutputType | null
    _avg: Intentos_loginAvgAggregateOutputType | null
    _sum: Intentos_loginSumAggregateOutputType | null
    _min: Intentos_loginMinAggregateOutputType | null
    _max: Intentos_loginMaxAggregateOutputType | null
  }

  export type Intentos_loginAvgAggregateOutputType = {
    id: number | null
    id_usuario: number | null
  }

  export type Intentos_loginSumAggregateOutputType = {
    id: number | null
    id_usuario: number | null
  }

  export type Intentos_loginMinAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    exito: boolean | null
    ip_origen: string | null
    fecha: Date | null
  }

  export type Intentos_loginMaxAggregateOutputType = {
    id: number | null
    id_usuario: number | null
    exito: boolean | null
    ip_origen: string | null
    fecha: Date | null
  }

  export type Intentos_loginCountAggregateOutputType = {
    id: number
    id_usuario: number
    exito: number
    ip_origen: number
    fecha: number
    _all: number
  }


  export type Intentos_loginAvgAggregateInputType = {
    id?: true
    id_usuario?: true
  }

  export type Intentos_loginSumAggregateInputType = {
    id?: true
    id_usuario?: true
  }

  export type Intentos_loginMinAggregateInputType = {
    id?: true
    id_usuario?: true
    exito?: true
    ip_origen?: true
    fecha?: true
  }

  export type Intentos_loginMaxAggregateInputType = {
    id?: true
    id_usuario?: true
    exito?: true
    ip_origen?: true
    fecha?: true
  }

  export type Intentos_loginCountAggregateInputType = {
    id?: true
    id_usuario?: true
    exito?: true
    ip_origen?: true
    fecha?: true
    _all?: true
  }

  export type Intentos_loginAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which intentos_login to aggregate.
     */
    where?: intentos_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intentos_logins to fetch.
     */
    orderBy?: intentos_loginOrderByWithRelationInput | intentos_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: intentos_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intentos_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intentos_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned intentos_logins
    **/
    _count?: true | Intentos_loginCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Intentos_loginAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Intentos_loginSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Intentos_loginMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Intentos_loginMaxAggregateInputType
  }

  export type GetIntentos_loginAggregateType<T extends Intentos_loginAggregateArgs> = {
        [P in keyof T & keyof AggregateIntentos_login]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIntentos_login[P]>
      : GetScalarType<T[P], AggregateIntentos_login[P]>
  }




  export type intentos_loginGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: intentos_loginWhereInput
    orderBy?: intentos_loginOrderByWithAggregationInput | intentos_loginOrderByWithAggregationInput[]
    by: Intentos_loginScalarFieldEnum[] | Intentos_loginScalarFieldEnum
    having?: intentos_loginScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Intentos_loginCountAggregateInputType | true
    _avg?: Intentos_loginAvgAggregateInputType
    _sum?: Intentos_loginSumAggregateInputType
    _min?: Intentos_loginMinAggregateInputType
    _max?: Intentos_loginMaxAggregateInputType
  }

  export type Intentos_loginGroupByOutputType = {
    id: number
    id_usuario: number | null
    exito: boolean | null
    ip_origen: string | null
    fecha: Date | null
    _count: Intentos_loginCountAggregateOutputType | null
    _avg: Intentos_loginAvgAggregateOutputType | null
    _sum: Intentos_loginSumAggregateOutputType | null
    _min: Intentos_loginMinAggregateOutputType | null
    _max: Intentos_loginMaxAggregateOutputType | null
  }

  type GetIntentos_loginGroupByPayload<T extends intentos_loginGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Intentos_loginGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Intentos_loginGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Intentos_loginGroupByOutputType[P]>
            : GetScalarType<T[P], Intentos_loginGroupByOutputType[P]>
        }
      >
    >


  export type intentos_loginSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_usuario?: boolean
    exito?: boolean
    ip_origen?: boolean
    fecha?: boolean
    usuarios?: boolean | intentos_login$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["intentos_login"]>



  export type intentos_loginSelectScalar = {
    id?: boolean
    id_usuario?: boolean
    exito?: boolean
    ip_origen?: boolean
    fecha?: boolean
  }

  export type intentos_loginOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_usuario" | "exito" | "ip_origen" | "fecha", ExtArgs["result"]["intentos_login"]>
  export type intentos_loginInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | intentos_login$usuariosArgs<ExtArgs>
  }

  export type $intentos_loginPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "intentos_login"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_usuario: number | null
      exito: boolean | null
      ip_origen: string | null
      fecha: Date | null
    }, ExtArgs["result"]["intentos_login"]>
    composites: {}
  }

  type intentos_loginGetPayload<S extends boolean | null | undefined | intentos_loginDefaultArgs> = $Result.GetResult<Prisma.$intentos_loginPayload, S>

  type intentos_loginCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<intentos_loginFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Intentos_loginCountAggregateInputType | true
    }

  export interface intentos_loginDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['intentos_login'], meta: { name: 'intentos_login' } }
    /**
     * Find zero or one Intentos_login that matches the filter.
     * @param {intentos_loginFindUniqueArgs} args - Arguments to find a Intentos_login
     * @example
     * // Get one Intentos_login
     * const intentos_login = await prisma.intentos_login.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends intentos_loginFindUniqueArgs>(args: SelectSubset<T, intentos_loginFindUniqueArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Intentos_login that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {intentos_loginFindUniqueOrThrowArgs} args - Arguments to find a Intentos_login
     * @example
     * // Get one Intentos_login
     * const intentos_login = await prisma.intentos_login.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends intentos_loginFindUniqueOrThrowArgs>(args: SelectSubset<T, intentos_loginFindUniqueOrThrowArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Intentos_login that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intentos_loginFindFirstArgs} args - Arguments to find a Intentos_login
     * @example
     * // Get one Intentos_login
     * const intentos_login = await prisma.intentos_login.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends intentos_loginFindFirstArgs>(args?: SelectSubset<T, intentos_loginFindFirstArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Intentos_login that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intentos_loginFindFirstOrThrowArgs} args - Arguments to find a Intentos_login
     * @example
     * // Get one Intentos_login
     * const intentos_login = await prisma.intentos_login.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends intentos_loginFindFirstOrThrowArgs>(args?: SelectSubset<T, intentos_loginFindFirstOrThrowArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Intentos_logins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intentos_loginFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Intentos_logins
     * const intentos_logins = await prisma.intentos_login.findMany()
     * 
     * // Get first 10 Intentos_logins
     * const intentos_logins = await prisma.intentos_login.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const intentos_loginWithIdOnly = await prisma.intentos_login.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends intentos_loginFindManyArgs>(args?: SelectSubset<T, intentos_loginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Intentos_login.
     * @param {intentos_loginCreateArgs} args - Arguments to create a Intentos_login.
     * @example
     * // Create one Intentos_login
     * const Intentos_login = await prisma.intentos_login.create({
     *   data: {
     *     // ... data to create a Intentos_login
     *   }
     * })
     * 
     */
    create<T extends intentos_loginCreateArgs>(args: SelectSubset<T, intentos_loginCreateArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Intentos_logins.
     * @param {intentos_loginCreateManyArgs} args - Arguments to create many Intentos_logins.
     * @example
     * // Create many Intentos_logins
     * const intentos_login = await prisma.intentos_login.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends intentos_loginCreateManyArgs>(args?: SelectSubset<T, intentos_loginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Intentos_login.
     * @param {intentos_loginDeleteArgs} args - Arguments to delete one Intentos_login.
     * @example
     * // Delete one Intentos_login
     * const Intentos_login = await prisma.intentos_login.delete({
     *   where: {
     *     // ... filter to delete one Intentos_login
     *   }
     * })
     * 
     */
    delete<T extends intentos_loginDeleteArgs>(args: SelectSubset<T, intentos_loginDeleteArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Intentos_login.
     * @param {intentos_loginUpdateArgs} args - Arguments to update one Intentos_login.
     * @example
     * // Update one Intentos_login
     * const intentos_login = await prisma.intentos_login.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends intentos_loginUpdateArgs>(args: SelectSubset<T, intentos_loginUpdateArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Intentos_logins.
     * @param {intentos_loginDeleteManyArgs} args - Arguments to filter Intentos_logins to delete.
     * @example
     * // Delete a few Intentos_logins
     * const { count } = await prisma.intentos_login.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends intentos_loginDeleteManyArgs>(args?: SelectSubset<T, intentos_loginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Intentos_logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intentos_loginUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Intentos_logins
     * const intentos_login = await prisma.intentos_login.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends intentos_loginUpdateManyArgs>(args: SelectSubset<T, intentos_loginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Intentos_login.
     * @param {intentos_loginUpsertArgs} args - Arguments to update or create a Intentos_login.
     * @example
     * // Update or create a Intentos_login
     * const intentos_login = await prisma.intentos_login.upsert({
     *   create: {
     *     // ... data to create a Intentos_login
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Intentos_login we want to update
     *   }
     * })
     */
    upsert<T extends intentos_loginUpsertArgs>(args: SelectSubset<T, intentos_loginUpsertArgs<ExtArgs>>): Prisma__intentos_loginClient<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Intentos_logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intentos_loginCountArgs} args - Arguments to filter Intentos_logins to count.
     * @example
     * // Count the number of Intentos_logins
     * const count = await prisma.intentos_login.count({
     *   where: {
     *     // ... the filter for the Intentos_logins we want to count
     *   }
     * })
    **/
    count<T extends intentos_loginCountArgs>(
      args?: Subset<T, intentos_loginCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Intentos_loginCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Intentos_login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Intentos_loginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Intentos_loginAggregateArgs>(args: Subset<T, Intentos_loginAggregateArgs>): Prisma.PrismaPromise<GetIntentos_loginAggregateType<T>>

    /**
     * Group by Intentos_login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {intentos_loginGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends intentos_loginGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: intentos_loginGroupByArgs['orderBy'] }
        : { orderBy?: intentos_loginGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, intentos_loginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIntentos_loginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the intentos_login model
   */
  readonly fields: intentos_loginFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for intentos_login.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__intentos_loginClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends intentos_login$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, intentos_login$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the intentos_login model
   */
  interface intentos_loginFieldRefs {
    readonly id: FieldRef<"intentos_login", 'Int'>
    readonly id_usuario: FieldRef<"intentos_login", 'Int'>
    readonly exito: FieldRef<"intentos_login", 'Boolean'>
    readonly ip_origen: FieldRef<"intentos_login", 'String'>
    readonly fecha: FieldRef<"intentos_login", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * intentos_login findUnique
   */
  export type intentos_loginFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * Filter, which intentos_login to fetch.
     */
    where: intentos_loginWhereUniqueInput
  }

  /**
   * intentos_login findUniqueOrThrow
   */
  export type intentos_loginFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * Filter, which intentos_login to fetch.
     */
    where: intentos_loginWhereUniqueInput
  }

  /**
   * intentos_login findFirst
   */
  export type intentos_loginFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * Filter, which intentos_login to fetch.
     */
    where?: intentos_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intentos_logins to fetch.
     */
    orderBy?: intentos_loginOrderByWithRelationInput | intentos_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for intentos_logins.
     */
    cursor?: intentos_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intentos_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intentos_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of intentos_logins.
     */
    distinct?: Intentos_loginScalarFieldEnum | Intentos_loginScalarFieldEnum[]
  }

  /**
   * intentos_login findFirstOrThrow
   */
  export type intentos_loginFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * Filter, which intentos_login to fetch.
     */
    where?: intentos_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intentos_logins to fetch.
     */
    orderBy?: intentos_loginOrderByWithRelationInput | intentos_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for intentos_logins.
     */
    cursor?: intentos_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intentos_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intentos_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of intentos_logins.
     */
    distinct?: Intentos_loginScalarFieldEnum | Intentos_loginScalarFieldEnum[]
  }

  /**
   * intentos_login findMany
   */
  export type intentos_loginFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * Filter, which intentos_logins to fetch.
     */
    where?: intentos_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of intentos_logins to fetch.
     */
    orderBy?: intentos_loginOrderByWithRelationInput | intentos_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing intentos_logins.
     */
    cursor?: intentos_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` intentos_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` intentos_logins.
     */
    skip?: number
    distinct?: Intentos_loginScalarFieldEnum | Intentos_loginScalarFieldEnum[]
  }

  /**
   * intentos_login create
   */
  export type intentos_loginCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * The data needed to create a intentos_login.
     */
    data?: XOR<intentos_loginCreateInput, intentos_loginUncheckedCreateInput>
  }

  /**
   * intentos_login createMany
   */
  export type intentos_loginCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many intentos_logins.
     */
    data: intentos_loginCreateManyInput | intentos_loginCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * intentos_login update
   */
  export type intentos_loginUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * The data needed to update a intentos_login.
     */
    data: XOR<intentos_loginUpdateInput, intentos_loginUncheckedUpdateInput>
    /**
     * Choose, which intentos_login to update.
     */
    where: intentos_loginWhereUniqueInput
  }

  /**
   * intentos_login updateMany
   */
  export type intentos_loginUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update intentos_logins.
     */
    data: XOR<intentos_loginUpdateManyMutationInput, intentos_loginUncheckedUpdateManyInput>
    /**
     * Filter which intentos_logins to update
     */
    where?: intentos_loginWhereInput
    /**
     * Limit how many intentos_logins to update.
     */
    limit?: number
  }

  /**
   * intentos_login upsert
   */
  export type intentos_loginUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * The filter to search for the intentos_login to update in case it exists.
     */
    where: intentos_loginWhereUniqueInput
    /**
     * In case the intentos_login found by the `where` argument doesn't exist, create a new intentos_login with this data.
     */
    create: XOR<intentos_loginCreateInput, intentos_loginUncheckedCreateInput>
    /**
     * In case the intentos_login was found with the provided `where` argument, update it with this data.
     */
    update: XOR<intentos_loginUpdateInput, intentos_loginUncheckedUpdateInput>
  }

  /**
   * intentos_login delete
   */
  export type intentos_loginDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    /**
     * Filter which intentos_login to delete.
     */
    where: intentos_loginWhereUniqueInput
  }

  /**
   * intentos_login deleteMany
   */
  export type intentos_loginDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which intentos_logins to delete
     */
    where?: intentos_loginWhereInput
    /**
     * Limit how many intentos_logins to delete.
     */
    limit?: number
  }

  /**
   * intentos_login.usuarios
   */
  export type intentos_login$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * intentos_login without action
   */
  export type intentos_loginDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
  }


  /**
   * Model logs_actividad
   */

  export type AggregateLogs_actividad = {
    _count: Logs_actividadCountAggregateOutputType | null
    _avg: Logs_actividadAvgAggregateOutputType | null
    _sum: Logs_actividadSumAggregateOutputType | null
    _min: Logs_actividadMinAggregateOutputType | null
    _max: Logs_actividadMaxAggregateOutputType | null
  }

  export type Logs_actividadAvgAggregateOutputType = {
    id_log: number | null
    id_usuario: number | null
    id_empleado: number | null
    id_boleto: number | null
  }

  export type Logs_actividadSumAggregateOutputType = {
    id_log: number | null
    id_usuario: number | null
    id_empleado: number | null
    id_boleto: number | null
  }

  export type Logs_actividadMinAggregateOutputType = {
    id_log: number | null
    id_usuario: number | null
    accion: string | null
    fecha_hora: Date | null
    detalle: string | null
    id_empleado: number | null
    id_boleto: number | null
  }

  export type Logs_actividadMaxAggregateOutputType = {
    id_log: number | null
    id_usuario: number | null
    accion: string | null
    fecha_hora: Date | null
    detalle: string | null
    id_empleado: number | null
    id_boleto: number | null
  }

  export type Logs_actividadCountAggregateOutputType = {
    id_log: number
    id_usuario: number
    accion: number
    fecha_hora: number
    detalle: number
    id_empleado: number
    id_boleto: number
    _all: number
  }


  export type Logs_actividadAvgAggregateInputType = {
    id_log?: true
    id_usuario?: true
    id_empleado?: true
    id_boleto?: true
  }

  export type Logs_actividadSumAggregateInputType = {
    id_log?: true
    id_usuario?: true
    id_empleado?: true
    id_boleto?: true
  }

  export type Logs_actividadMinAggregateInputType = {
    id_log?: true
    id_usuario?: true
    accion?: true
    fecha_hora?: true
    detalle?: true
    id_empleado?: true
    id_boleto?: true
  }

  export type Logs_actividadMaxAggregateInputType = {
    id_log?: true
    id_usuario?: true
    accion?: true
    fecha_hora?: true
    detalle?: true
    id_empleado?: true
    id_boleto?: true
  }

  export type Logs_actividadCountAggregateInputType = {
    id_log?: true
    id_usuario?: true
    accion?: true
    fecha_hora?: true
    detalle?: true
    id_empleado?: true
    id_boleto?: true
    _all?: true
  }

  export type Logs_actividadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which logs_actividad to aggregate.
     */
    where?: logs_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs_actividads to fetch.
     */
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: logs_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs_actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned logs_actividads
    **/
    _count?: true | Logs_actividadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Logs_actividadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Logs_actividadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Logs_actividadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Logs_actividadMaxAggregateInputType
  }

  export type GetLogs_actividadAggregateType<T extends Logs_actividadAggregateArgs> = {
        [P in keyof T & keyof AggregateLogs_actividad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLogs_actividad[P]>
      : GetScalarType<T[P], AggregateLogs_actividad[P]>
  }




  export type logs_actividadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logs_actividadWhereInput
    orderBy?: logs_actividadOrderByWithAggregationInput | logs_actividadOrderByWithAggregationInput[]
    by: Logs_actividadScalarFieldEnum[] | Logs_actividadScalarFieldEnum
    having?: logs_actividadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Logs_actividadCountAggregateInputType | true
    _avg?: Logs_actividadAvgAggregateInputType
    _sum?: Logs_actividadSumAggregateInputType
    _min?: Logs_actividadMinAggregateInputType
    _max?: Logs_actividadMaxAggregateInputType
  }

  export type Logs_actividadGroupByOutputType = {
    id_log: number
    id_usuario: number | null
    accion: string | null
    fecha_hora: Date | null
    detalle: string | null
    id_empleado: number | null
    id_boleto: number | null
    _count: Logs_actividadCountAggregateOutputType | null
    _avg: Logs_actividadAvgAggregateOutputType | null
    _sum: Logs_actividadSumAggregateOutputType | null
    _min: Logs_actividadMinAggregateOutputType | null
    _max: Logs_actividadMaxAggregateOutputType | null
  }

  type GetLogs_actividadGroupByPayload<T extends logs_actividadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Logs_actividadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Logs_actividadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Logs_actividadGroupByOutputType[P]>
            : GetScalarType<T[P], Logs_actividadGroupByOutputType[P]>
        }
      >
    >


  export type logs_actividadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_log?: boolean
    id_usuario?: boolean
    accion?: boolean
    fecha_hora?: boolean
    detalle?: boolean
    id_empleado?: boolean
    id_boleto?: boolean
    empleados?: boolean | logs_actividad$empleadosArgs<ExtArgs>
    usuarios?: boolean | logs_actividad$usuariosArgs<ExtArgs>
    boletos?: boolean | logs_actividad$boletosArgs<ExtArgs>
  }, ExtArgs["result"]["logs_actividad"]>



  export type logs_actividadSelectScalar = {
    id_log?: boolean
    id_usuario?: boolean
    accion?: boolean
    fecha_hora?: boolean
    detalle?: boolean
    id_empleado?: boolean
    id_boleto?: boolean
  }

  export type logs_actividadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_log" | "id_usuario" | "accion" | "fecha_hora" | "detalle" | "id_empleado" | "id_boleto", ExtArgs["result"]["logs_actividad"]>
  export type logs_actividadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | logs_actividad$empleadosArgs<ExtArgs>
    usuarios?: boolean | logs_actividad$usuariosArgs<ExtArgs>
    boletos?: boolean | logs_actividad$boletosArgs<ExtArgs>
  }

  export type $logs_actividadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "logs_actividad"
    objects: {
      empleados: Prisma.$empleadosPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
      boletos: Prisma.$boletosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_log: number
      id_usuario: number | null
      accion: string | null
      fecha_hora: Date | null
      detalle: string | null
      id_empleado: number | null
      id_boleto: number | null
    }, ExtArgs["result"]["logs_actividad"]>
    composites: {}
  }

  type logs_actividadGetPayload<S extends boolean | null | undefined | logs_actividadDefaultArgs> = $Result.GetResult<Prisma.$logs_actividadPayload, S>

  type logs_actividadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<logs_actividadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Logs_actividadCountAggregateInputType | true
    }

  export interface logs_actividadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['logs_actividad'], meta: { name: 'logs_actividad' } }
    /**
     * Find zero or one Logs_actividad that matches the filter.
     * @param {logs_actividadFindUniqueArgs} args - Arguments to find a Logs_actividad
     * @example
     * // Get one Logs_actividad
     * const logs_actividad = await prisma.logs_actividad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends logs_actividadFindUniqueArgs>(args: SelectSubset<T, logs_actividadFindUniqueArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Logs_actividad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {logs_actividadFindUniqueOrThrowArgs} args - Arguments to find a Logs_actividad
     * @example
     * // Get one Logs_actividad
     * const logs_actividad = await prisma.logs_actividad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends logs_actividadFindUniqueOrThrowArgs>(args: SelectSubset<T, logs_actividadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Logs_actividad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logs_actividadFindFirstArgs} args - Arguments to find a Logs_actividad
     * @example
     * // Get one Logs_actividad
     * const logs_actividad = await prisma.logs_actividad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends logs_actividadFindFirstArgs>(args?: SelectSubset<T, logs_actividadFindFirstArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Logs_actividad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logs_actividadFindFirstOrThrowArgs} args - Arguments to find a Logs_actividad
     * @example
     * // Get one Logs_actividad
     * const logs_actividad = await prisma.logs_actividad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends logs_actividadFindFirstOrThrowArgs>(args?: SelectSubset<T, logs_actividadFindFirstOrThrowArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Logs_actividads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logs_actividadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Logs_actividads
     * const logs_actividads = await prisma.logs_actividad.findMany()
     * 
     * // Get first 10 Logs_actividads
     * const logs_actividads = await prisma.logs_actividad.findMany({ take: 10 })
     * 
     * // Only select the `id_log`
     * const logs_actividadWithId_logOnly = await prisma.logs_actividad.findMany({ select: { id_log: true } })
     * 
     */
    findMany<T extends logs_actividadFindManyArgs>(args?: SelectSubset<T, logs_actividadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Logs_actividad.
     * @param {logs_actividadCreateArgs} args - Arguments to create a Logs_actividad.
     * @example
     * // Create one Logs_actividad
     * const Logs_actividad = await prisma.logs_actividad.create({
     *   data: {
     *     // ... data to create a Logs_actividad
     *   }
     * })
     * 
     */
    create<T extends logs_actividadCreateArgs>(args: SelectSubset<T, logs_actividadCreateArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Logs_actividads.
     * @param {logs_actividadCreateManyArgs} args - Arguments to create many Logs_actividads.
     * @example
     * // Create many Logs_actividads
     * const logs_actividad = await prisma.logs_actividad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends logs_actividadCreateManyArgs>(args?: SelectSubset<T, logs_actividadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Logs_actividad.
     * @param {logs_actividadDeleteArgs} args - Arguments to delete one Logs_actividad.
     * @example
     * // Delete one Logs_actividad
     * const Logs_actividad = await prisma.logs_actividad.delete({
     *   where: {
     *     // ... filter to delete one Logs_actividad
     *   }
     * })
     * 
     */
    delete<T extends logs_actividadDeleteArgs>(args: SelectSubset<T, logs_actividadDeleteArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Logs_actividad.
     * @param {logs_actividadUpdateArgs} args - Arguments to update one Logs_actividad.
     * @example
     * // Update one Logs_actividad
     * const logs_actividad = await prisma.logs_actividad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends logs_actividadUpdateArgs>(args: SelectSubset<T, logs_actividadUpdateArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Logs_actividads.
     * @param {logs_actividadDeleteManyArgs} args - Arguments to filter Logs_actividads to delete.
     * @example
     * // Delete a few Logs_actividads
     * const { count } = await prisma.logs_actividad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends logs_actividadDeleteManyArgs>(args?: SelectSubset<T, logs_actividadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Logs_actividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logs_actividadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Logs_actividads
     * const logs_actividad = await prisma.logs_actividad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends logs_actividadUpdateManyArgs>(args: SelectSubset<T, logs_actividadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Logs_actividad.
     * @param {logs_actividadUpsertArgs} args - Arguments to update or create a Logs_actividad.
     * @example
     * // Update or create a Logs_actividad
     * const logs_actividad = await prisma.logs_actividad.upsert({
     *   create: {
     *     // ... data to create a Logs_actividad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Logs_actividad we want to update
     *   }
     * })
     */
    upsert<T extends logs_actividadUpsertArgs>(args: SelectSubset<T, logs_actividadUpsertArgs<ExtArgs>>): Prisma__logs_actividadClient<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Logs_actividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logs_actividadCountArgs} args - Arguments to filter Logs_actividads to count.
     * @example
     * // Count the number of Logs_actividads
     * const count = await prisma.logs_actividad.count({
     *   where: {
     *     // ... the filter for the Logs_actividads we want to count
     *   }
     * })
    **/
    count<T extends logs_actividadCountArgs>(
      args?: Subset<T, logs_actividadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Logs_actividadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Logs_actividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Logs_actividadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Logs_actividadAggregateArgs>(args: Subset<T, Logs_actividadAggregateArgs>): Prisma.PrismaPromise<GetLogs_actividadAggregateType<T>>

    /**
     * Group by Logs_actividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logs_actividadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends logs_actividadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: logs_actividadGroupByArgs['orderBy'] }
        : { orderBy?: logs_actividadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, logs_actividadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLogs_actividadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the logs_actividad model
   */
  readonly fields: logs_actividadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for logs_actividad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__logs_actividadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleados<T extends logs_actividad$empleadosArgs<ExtArgs> = {}>(args?: Subset<T, logs_actividad$empleadosArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends logs_actividad$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, logs_actividad$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    boletos<T extends logs_actividad$boletosArgs<ExtArgs> = {}>(args?: Subset<T, logs_actividad$boletosArgs<ExtArgs>>): Prisma__boletosClient<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the logs_actividad model
   */
  interface logs_actividadFieldRefs {
    readonly id_log: FieldRef<"logs_actividad", 'Int'>
    readonly id_usuario: FieldRef<"logs_actividad", 'Int'>
    readonly accion: FieldRef<"logs_actividad", 'String'>
    readonly fecha_hora: FieldRef<"logs_actividad", 'DateTime'>
    readonly detalle: FieldRef<"logs_actividad", 'String'>
    readonly id_empleado: FieldRef<"logs_actividad", 'Int'>
    readonly id_boleto: FieldRef<"logs_actividad", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * logs_actividad findUnique
   */
  export type logs_actividadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * Filter, which logs_actividad to fetch.
     */
    where: logs_actividadWhereUniqueInput
  }

  /**
   * logs_actividad findUniqueOrThrow
   */
  export type logs_actividadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * Filter, which logs_actividad to fetch.
     */
    where: logs_actividadWhereUniqueInput
  }

  /**
   * logs_actividad findFirst
   */
  export type logs_actividadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * Filter, which logs_actividad to fetch.
     */
    where?: logs_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs_actividads to fetch.
     */
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for logs_actividads.
     */
    cursor?: logs_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs_actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of logs_actividads.
     */
    distinct?: Logs_actividadScalarFieldEnum | Logs_actividadScalarFieldEnum[]
  }

  /**
   * logs_actividad findFirstOrThrow
   */
  export type logs_actividadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * Filter, which logs_actividad to fetch.
     */
    where?: logs_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs_actividads to fetch.
     */
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for logs_actividads.
     */
    cursor?: logs_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs_actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of logs_actividads.
     */
    distinct?: Logs_actividadScalarFieldEnum | Logs_actividadScalarFieldEnum[]
  }

  /**
   * logs_actividad findMany
   */
  export type logs_actividadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * Filter, which logs_actividads to fetch.
     */
    where?: logs_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs_actividads to fetch.
     */
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing logs_actividads.
     */
    cursor?: logs_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs_actividads.
     */
    skip?: number
    distinct?: Logs_actividadScalarFieldEnum | Logs_actividadScalarFieldEnum[]
  }

  /**
   * logs_actividad create
   */
  export type logs_actividadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * The data needed to create a logs_actividad.
     */
    data?: XOR<logs_actividadCreateInput, logs_actividadUncheckedCreateInput>
  }

  /**
   * logs_actividad createMany
   */
  export type logs_actividadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many logs_actividads.
     */
    data: logs_actividadCreateManyInput | logs_actividadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * logs_actividad update
   */
  export type logs_actividadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * The data needed to update a logs_actividad.
     */
    data: XOR<logs_actividadUpdateInput, logs_actividadUncheckedUpdateInput>
    /**
     * Choose, which logs_actividad to update.
     */
    where: logs_actividadWhereUniqueInput
  }

  /**
   * logs_actividad updateMany
   */
  export type logs_actividadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update logs_actividads.
     */
    data: XOR<logs_actividadUpdateManyMutationInput, logs_actividadUncheckedUpdateManyInput>
    /**
     * Filter which logs_actividads to update
     */
    where?: logs_actividadWhereInput
    /**
     * Limit how many logs_actividads to update.
     */
    limit?: number
  }

  /**
   * logs_actividad upsert
   */
  export type logs_actividadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * The filter to search for the logs_actividad to update in case it exists.
     */
    where: logs_actividadWhereUniqueInput
    /**
     * In case the logs_actividad found by the `where` argument doesn't exist, create a new logs_actividad with this data.
     */
    create: XOR<logs_actividadCreateInput, logs_actividadUncheckedCreateInput>
    /**
     * In case the logs_actividad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<logs_actividadUpdateInput, logs_actividadUncheckedUpdateInput>
  }

  /**
   * logs_actividad delete
   */
  export type logs_actividadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    /**
     * Filter which logs_actividad to delete.
     */
    where: logs_actividadWhereUniqueInput
  }

  /**
   * logs_actividad deleteMany
   */
  export type logs_actividadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which logs_actividads to delete
     */
    where?: logs_actividadWhereInput
    /**
     * Limit how many logs_actividads to delete.
     */
    limit?: number
  }

  /**
   * logs_actividad.empleados
   */
  export type logs_actividad$empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    where?: empleadosWhereInput
  }

  /**
   * logs_actividad.usuarios
   */
  export type logs_actividad$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * logs_actividad.boletos
   */
  export type logs_actividad$boletosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    where?: boletosWhereInput
  }

  /**
   * logs_actividad without action
   */
  export type logs_actividadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
  }


  /**
   * Model metodos_pago
   */

  export type AggregateMetodos_pago = {
    _count: Metodos_pagoCountAggregateOutputType | null
    _avg: Metodos_pagoAvgAggregateOutputType | null
    _sum: Metodos_pagoSumAggregateOutputType | null
    _min: Metodos_pagoMinAggregateOutputType | null
    _max: Metodos_pagoMaxAggregateOutputType | null
  }

  export type Metodos_pagoAvgAggregateOutputType = {
    id_metodo: number | null
  }

  export type Metodos_pagoSumAggregateOutputType = {
    id_metodo: number | null
  }

  export type Metodos_pagoMinAggregateOutputType = {
    id_metodo: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type Metodos_pagoMaxAggregateOutputType = {
    id_metodo: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type Metodos_pagoCountAggregateOutputType = {
    id_metodo: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type Metodos_pagoAvgAggregateInputType = {
    id_metodo?: true
  }

  export type Metodos_pagoSumAggregateInputType = {
    id_metodo?: true
  }

  export type Metodos_pagoMinAggregateInputType = {
    id_metodo?: true
    nombre?: true
    descripcion?: true
  }

  export type Metodos_pagoMaxAggregateInputType = {
    id_metodo?: true
    nombre?: true
    descripcion?: true
  }

  export type Metodos_pagoCountAggregateInputType = {
    id_metodo?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type Metodos_pagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metodos_pago to aggregate.
     */
    where?: metodos_pagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pagos to fetch.
     */
    orderBy?: metodos_pagoOrderByWithRelationInput | metodos_pagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: metodos_pagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned metodos_pagos
    **/
    _count?: true | Metodos_pagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Metodos_pagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Metodos_pagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Metodos_pagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Metodos_pagoMaxAggregateInputType
  }

  export type GetMetodos_pagoAggregateType<T extends Metodos_pagoAggregateArgs> = {
        [P in keyof T & keyof AggregateMetodos_pago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetodos_pago[P]>
      : GetScalarType<T[P], AggregateMetodos_pago[P]>
  }




  export type metodos_pagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: metodos_pagoWhereInput
    orderBy?: metodos_pagoOrderByWithAggregationInput | metodos_pagoOrderByWithAggregationInput[]
    by: Metodos_pagoScalarFieldEnum[] | Metodos_pagoScalarFieldEnum
    having?: metodos_pagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Metodos_pagoCountAggregateInputType | true
    _avg?: Metodos_pagoAvgAggregateInputType
    _sum?: Metodos_pagoSumAggregateInputType
    _min?: Metodos_pagoMinAggregateInputType
    _max?: Metodos_pagoMaxAggregateInputType
  }

  export type Metodos_pagoGroupByOutputType = {
    id_metodo: number
    nombre: string
    descripcion: string | null
    _count: Metodos_pagoCountAggregateOutputType | null
    _avg: Metodos_pagoAvgAggregateOutputType | null
    _sum: Metodos_pagoSumAggregateOutputType | null
    _min: Metodos_pagoMinAggregateOutputType | null
    _max: Metodos_pagoMaxAggregateOutputType | null
  }

  type GetMetodos_pagoGroupByPayload<T extends metodos_pagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Metodos_pagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Metodos_pagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Metodos_pagoGroupByOutputType[P]>
            : GetScalarType<T[P], Metodos_pagoGroupByOutputType[P]>
        }
      >
    >


  export type metodos_pagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_metodo?: boolean
    nombre?: boolean
    descripcion?: boolean
    pagos?: boolean | metodos_pago$pagosArgs<ExtArgs>
    _count?: boolean | Metodos_pagoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metodos_pago"]>



  export type metodos_pagoSelectScalar = {
    id_metodo?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type metodos_pagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_metodo" | "nombre" | "descripcion", ExtArgs["result"]["metodos_pago"]>
  export type metodos_pagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagos?: boolean | metodos_pago$pagosArgs<ExtArgs>
    _count?: boolean | Metodos_pagoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $metodos_pagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "metodos_pago"
    objects: {
      pagos: Prisma.$pagosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_metodo: number
      nombre: string
      descripcion: string | null
    }, ExtArgs["result"]["metodos_pago"]>
    composites: {}
  }

  type metodos_pagoGetPayload<S extends boolean | null | undefined | metodos_pagoDefaultArgs> = $Result.GetResult<Prisma.$metodos_pagoPayload, S>

  type metodos_pagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<metodos_pagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Metodos_pagoCountAggregateInputType | true
    }

  export interface metodos_pagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['metodos_pago'], meta: { name: 'metodos_pago' } }
    /**
     * Find zero or one Metodos_pago that matches the filter.
     * @param {metodos_pagoFindUniqueArgs} args - Arguments to find a Metodos_pago
     * @example
     * // Get one Metodos_pago
     * const metodos_pago = await prisma.metodos_pago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends metodos_pagoFindUniqueArgs>(args: SelectSubset<T, metodos_pagoFindUniqueArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Metodos_pago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {metodos_pagoFindUniqueOrThrowArgs} args - Arguments to find a Metodos_pago
     * @example
     * // Get one Metodos_pago
     * const metodos_pago = await prisma.metodos_pago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends metodos_pagoFindUniqueOrThrowArgs>(args: SelectSubset<T, metodos_pagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Metodos_pago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pagoFindFirstArgs} args - Arguments to find a Metodos_pago
     * @example
     * // Get one Metodos_pago
     * const metodos_pago = await prisma.metodos_pago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends metodos_pagoFindFirstArgs>(args?: SelectSubset<T, metodos_pagoFindFirstArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Metodos_pago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pagoFindFirstOrThrowArgs} args - Arguments to find a Metodos_pago
     * @example
     * // Get one Metodos_pago
     * const metodos_pago = await prisma.metodos_pago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends metodos_pagoFindFirstOrThrowArgs>(args?: SelectSubset<T, metodos_pagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Metodos_pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Metodos_pagos
     * const metodos_pagos = await prisma.metodos_pago.findMany()
     * 
     * // Get first 10 Metodos_pagos
     * const metodos_pagos = await prisma.metodos_pago.findMany({ take: 10 })
     * 
     * // Only select the `id_metodo`
     * const metodos_pagoWithId_metodoOnly = await prisma.metodos_pago.findMany({ select: { id_metodo: true } })
     * 
     */
    findMany<T extends metodos_pagoFindManyArgs>(args?: SelectSubset<T, metodos_pagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Metodos_pago.
     * @param {metodos_pagoCreateArgs} args - Arguments to create a Metodos_pago.
     * @example
     * // Create one Metodos_pago
     * const Metodos_pago = await prisma.metodos_pago.create({
     *   data: {
     *     // ... data to create a Metodos_pago
     *   }
     * })
     * 
     */
    create<T extends metodos_pagoCreateArgs>(args: SelectSubset<T, metodos_pagoCreateArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Metodos_pagos.
     * @param {metodos_pagoCreateManyArgs} args - Arguments to create many Metodos_pagos.
     * @example
     * // Create many Metodos_pagos
     * const metodos_pago = await prisma.metodos_pago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends metodos_pagoCreateManyArgs>(args?: SelectSubset<T, metodos_pagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Metodos_pago.
     * @param {metodos_pagoDeleteArgs} args - Arguments to delete one Metodos_pago.
     * @example
     * // Delete one Metodos_pago
     * const Metodos_pago = await prisma.metodos_pago.delete({
     *   where: {
     *     // ... filter to delete one Metodos_pago
     *   }
     * })
     * 
     */
    delete<T extends metodos_pagoDeleteArgs>(args: SelectSubset<T, metodos_pagoDeleteArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Metodos_pago.
     * @param {metodos_pagoUpdateArgs} args - Arguments to update one Metodos_pago.
     * @example
     * // Update one Metodos_pago
     * const metodos_pago = await prisma.metodos_pago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends metodos_pagoUpdateArgs>(args: SelectSubset<T, metodos_pagoUpdateArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Metodos_pagos.
     * @param {metodos_pagoDeleteManyArgs} args - Arguments to filter Metodos_pagos to delete.
     * @example
     * // Delete a few Metodos_pagos
     * const { count } = await prisma.metodos_pago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends metodos_pagoDeleteManyArgs>(args?: SelectSubset<T, metodos_pagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Metodos_pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Metodos_pagos
     * const metodos_pago = await prisma.metodos_pago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends metodos_pagoUpdateManyArgs>(args: SelectSubset<T, metodos_pagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Metodos_pago.
     * @param {metodos_pagoUpsertArgs} args - Arguments to update or create a Metodos_pago.
     * @example
     * // Update or create a Metodos_pago
     * const metodos_pago = await prisma.metodos_pago.upsert({
     *   create: {
     *     // ... data to create a Metodos_pago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Metodos_pago we want to update
     *   }
     * })
     */
    upsert<T extends metodos_pagoUpsertArgs>(args: SelectSubset<T, metodos_pagoUpsertArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Metodos_pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pagoCountArgs} args - Arguments to filter Metodos_pagos to count.
     * @example
     * // Count the number of Metodos_pagos
     * const count = await prisma.metodos_pago.count({
     *   where: {
     *     // ... the filter for the Metodos_pagos we want to count
     *   }
     * })
    **/
    count<T extends metodos_pagoCountArgs>(
      args?: Subset<T, metodos_pagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Metodos_pagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Metodos_pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Metodos_pagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Metodos_pagoAggregateArgs>(args: Subset<T, Metodos_pagoAggregateArgs>): Prisma.PrismaPromise<GetMetodos_pagoAggregateType<T>>

    /**
     * Group by Metodos_pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {metodos_pagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends metodos_pagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: metodos_pagoGroupByArgs['orderBy'] }
        : { orderBy?: metodos_pagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, metodos_pagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetodos_pagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the metodos_pago model
   */
  readonly fields: metodos_pagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for metodos_pago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__metodos_pagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pagos<T extends metodos_pago$pagosArgs<ExtArgs> = {}>(args?: Subset<T, metodos_pago$pagosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the metodos_pago model
   */
  interface metodos_pagoFieldRefs {
    readonly id_metodo: FieldRef<"metodos_pago", 'Int'>
    readonly nombre: FieldRef<"metodos_pago", 'String'>
    readonly descripcion: FieldRef<"metodos_pago", 'String'>
  }
    

  // Custom InputTypes
  /**
   * metodos_pago findUnique
   */
  export type metodos_pagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago to fetch.
     */
    where: metodos_pagoWhereUniqueInput
  }

  /**
   * metodos_pago findUniqueOrThrow
   */
  export type metodos_pagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago to fetch.
     */
    where: metodos_pagoWhereUniqueInput
  }

  /**
   * metodos_pago findFirst
   */
  export type metodos_pagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago to fetch.
     */
    where?: metodos_pagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pagos to fetch.
     */
    orderBy?: metodos_pagoOrderByWithRelationInput | metodos_pagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metodos_pagos.
     */
    cursor?: metodos_pagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metodos_pagos.
     */
    distinct?: Metodos_pagoScalarFieldEnum | Metodos_pagoScalarFieldEnum[]
  }

  /**
   * metodos_pago findFirstOrThrow
   */
  export type metodos_pagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pago to fetch.
     */
    where?: metodos_pagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pagos to fetch.
     */
    orderBy?: metodos_pagoOrderByWithRelationInput | metodos_pagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for metodos_pagos.
     */
    cursor?: metodos_pagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of metodos_pagos.
     */
    distinct?: Metodos_pagoScalarFieldEnum | Metodos_pagoScalarFieldEnum[]
  }

  /**
   * metodos_pago findMany
   */
  export type metodos_pagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * Filter, which metodos_pagos to fetch.
     */
    where?: metodos_pagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of metodos_pagos to fetch.
     */
    orderBy?: metodos_pagoOrderByWithRelationInput | metodos_pagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing metodos_pagos.
     */
    cursor?: metodos_pagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` metodos_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` metodos_pagos.
     */
    skip?: number
    distinct?: Metodos_pagoScalarFieldEnum | Metodos_pagoScalarFieldEnum[]
  }

  /**
   * metodos_pago create
   */
  export type metodos_pagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * The data needed to create a metodos_pago.
     */
    data: XOR<metodos_pagoCreateInput, metodos_pagoUncheckedCreateInput>
  }

  /**
   * metodos_pago createMany
   */
  export type metodos_pagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many metodos_pagos.
     */
    data: metodos_pagoCreateManyInput | metodos_pagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * metodos_pago update
   */
  export type metodos_pagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * The data needed to update a metodos_pago.
     */
    data: XOR<metodos_pagoUpdateInput, metodos_pagoUncheckedUpdateInput>
    /**
     * Choose, which metodos_pago to update.
     */
    where: metodos_pagoWhereUniqueInput
  }

  /**
   * metodos_pago updateMany
   */
  export type metodos_pagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update metodos_pagos.
     */
    data: XOR<metodos_pagoUpdateManyMutationInput, metodos_pagoUncheckedUpdateManyInput>
    /**
     * Filter which metodos_pagos to update
     */
    where?: metodos_pagoWhereInput
    /**
     * Limit how many metodos_pagos to update.
     */
    limit?: number
  }

  /**
   * metodos_pago upsert
   */
  export type metodos_pagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * The filter to search for the metodos_pago to update in case it exists.
     */
    where: metodos_pagoWhereUniqueInput
    /**
     * In case the metodos_pago found by the `where` argument doesn't exist, create a new metodos_pago with this data.
     */
    create: XOR<metodos_pagoCreateInput, metodos_pagoUncheckedCreateInput>
    /**
     * In case the metodos_pago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<metodos_pagoUpdateInput, metodos_pagoUncheckedUpdateInput>
  }

  /**
   * metodos_pago delete
   */
  export type metodos_pagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
    /**
     * Filter which metodos_pago to delete.
     */
    where: metodos_pagoWhereUniqueInput
  }

  /**
   * metodos_pago deleteMany
   */
  export type metodos_pagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which metodos_pagos to delete
     */
    where?: metodos_pagoWhereInput
    /**
     * Limit how many metodos_pagos to delete.
     */
    limit?: number
  }

  /**
   * metodos_pago.pagos
   */
  export type metodos_pago$pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    where?: pagosWhereInput
    orderBy?: pagosOrderByWithRelationInput | pagosOrderByWithRelationInput[]
    cursor?: pagosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * metodos_pago without action
   */
  export type metodos_pagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the metodos_pago
     */
    select?: metodos_pagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the metodos_pago
     */
    omit?: metodos_pagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: metodos_pagoInclude<ExtArgs> | null
  }


  /**
   * Model notificaciones
   */

  export type AggregateNotificaciones = {
    _count: NotificacionesCountAggregateOutputType | null
    _avg: NotificacionesAvgAggregateOutputType | null
    _sum: NotificacionesSumAggregateOutputType | null
    _min: NotificacionesMinAggregateOutputType | null
    _max: NotificacionesMaxAggregateOutputType | null
  }

  export type NotificacionesAvgAggregateOutputType = {
    id_notificacion: number | null
    id_usuario: number | null
    id_empleado: number | null
  }

  export type NotificacionesSumAggregateOutputType = {
    id_notificacion: number | null
    id_usuario: number | null
    id_empleado: number | null
  }

  export type NotificacionesMinAggregateOutputType = {
    id_notificacion: number | null
    id_usuario: number | null
    titulo: string | null
    mensaje: string | null
    fecha_envio: Date | null
    leido: boolean | null
    id_empleado: number | null
  }

  export type NotificacionesMaxAggregateOutputType = {
    id_notificacion: number | null
    id_usuario: number | null
    titulo: string | null
    mensaje: string | null
    fecha_envio: Date | null
    leido: boolean | null
    id_empleado: number | null
  }

  export type NotificacionesCountAggregateOutputType = {
    id_notificacion: number
    id_usuario: number
    titulo: number
    mensaje: number
    fecha_envio: number
    leido: number
    id_empleado: number
    _all: number
  }


  export type NotificacionesAvgAggregateInputType = {
    id_notificacion?: true
    id_usuario?: true
    id_empleado?: true
  }

  export type NotificacionesSumAggregateInputType = {
    id_notificacion?: true
    id_usuario?: true
    id_empleado?: true
  }

  export type NotificacionesMinAggregateInputType = {
    id_notificacion?: true
    id_usuario?: true
    titulo?: true
    mensaje?: true
    fecha_envio?: true
    leido?: true
    id_empleado?: true
  }

  export type NotificacionesMaxAggregateInputType = {
    id_notificacion?: true
    id_usuario?: true
    titulo?: true
    mensaje?: true
    fecha_envio?: true
    leido?: true
    id_empleado?: true
  }

  export type NotificacionesCountAggregateInputType = {
    id_notificacion?: true
    id_usuario?: true
    titulo?: true
    mensaje?: true
    fecha_envio?: true
    leido?: true
    id_empleado?: true
    _all?: true
  }

  export type NotificacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificaciones to aggregate.
     */
    where?: notificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificaciones to fetch.
     */
    orderBy?: notificacionesOrderByWithRelationInput | notificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notificaciones
    **/
    _count?: true | NotificacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacionesMaxAggregateInputType
  }

  export type GetNotificacionesAggregateType<T extends NotificacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificaciones[P]>
      : GetScalarType<T[P], AggregateNotificaciones[P]>
  }




  export type notificacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificacionesWhereInput
    orderBy?: notificacionesOrderByWithAggregationInput | notificacionesOrderByWithAggregationInput[]
    by: NotificacionesScalarFieldEnum[] | NotificacionesScalarFieldEnum
    having?: notificacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacionesCountAggregateInputType | true
    _avg?: NotificacionesAvgAggregateInputType
    _sum?: NotificacionesSumAggregateInputType
    _min?: NotificacionesMinAggregateInputType
    _max?: NotificacionesMaxAggregateInputType
  }

  export type NotificacionesGroupByOutputType = {
    id_notificacion: number
    id_usuario: number
    titulo: string
    mensaje: string | null
    fecha_envio: Date | null
    leido: boolean | null
    id_empleado: number | null
    _count: NotificacionesCountAggregateOutputType | null
    _avg: NotificacionesAvgAggregateOutputType | null
    _sum: NotificacionesSumAggregateOutputType | null
    _min: NotificacionesMinAggregateOutputType | null
    _max: NotificacionesMaxAggregateOutputType | null
  }

  type GetNotificacionesGroupByPayload<T extends notificacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacionesGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacionesGroupByOutputType[P]>
        }
      >
    >


  export type notificacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_notificacion?: boolean
    id_usuario?: boolean
    titulo?: boolean
    mensaje?: boolean
    fecha_envio?: boolean
    leido?: boolean
    id_empleado?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    empleados?: boolean | notificaciones$empleadosArgs<ExtArgs>
  }, ExtArgs["result"]["notificaciones"]>



  export type notificacionesSelectScalar = {
    id_notificacion?: boolean
    id_usuario?: boolean
    titulo?: boolean
    mensaje?: boolean
    fecha_envio?: boolean
    leido?: boolean
    id_empleado?: boolean
  }

  export type notificacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_notificacion" | "id_usuario" | "titulo" | "mensaje" | "fecha_envio" | "leido" | "id_empleado", ExtArgs["result"]["notificaciones"]>
  export type notificacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    empleados?: boolean | notificaciones$empleadosArgs<ExtArgs>
  }

  export type $notificacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notificaciones"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>
      empleados: Prisma.$empleadosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_notificacion: number
      id_usuario: number
      titulo: string
      mensaje: string | null
      fecha_envio: Date | null
      leido: boolean | null
      id_empleado: number | null
    }, ExtArgs["result"]["notificaciones"]>
    composites: {}
  }

  type notificacionesGetPayload<S extends boolean | null | undefined | notificacionesDefaultArgs> = $Result.GetResult<Prisma.$notificacionesPayload, S>

  type notificacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificacionesCountAggregateInputType | true
    }

  export interface notificacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notificaciones'], meta: { name: 'notificaciones' } }
    /**
     * Find zero or one Notificaciones that matches the filter.
     * @param {notificacionesFindUniqueArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificacionesFindUniqueArgs>(args: SelectSubset<T, notificacionesFindUniqueArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notificaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificacionesFindUniqueOrThrowArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, notificacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacionesFindFirstArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificacionesFindFirstArgs>(args?: SelectSubset<T, notificacionesFindFirstArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacionesFindFirstOrThrowArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, notificacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificaciones
     * const notificaciones = await prisma.notificaciones.findMany()
     * 
     * // Get first 10 Notificaciones
     * const notificaciones = await prisma.notificaciones.findMany({ take: 10 })
     * 
     * // Only select the `id_notificacion`
     * const notificacionesWithId_notificacionOnly = await prisma.notificaciones.findMany({ select: { id_notificacion: true } })
     * 
     */
    findMany<T extends notificacionesFindManyArgs>(args?: SelectSubset<T, notificacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notificaciones.
     * @param {notificacionesCreateArgs} args - Arguments to create a Notificaciones.
     * @example
     * // Create one Notificaciones
     * const Notificaciones = await prisma.notificaciones.create({
     *   data: {
     *     // ... data to create a Notificaciones
     *   }
     * })
     * 
     */
    create<T extends notificacionesCreateArgs>(args: SelectSubset<T, notificacionesCreateArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notificaciones.
     * @param {notificacionesCreateManyArgs} args - Arguments to create many Notificaciones.
     * @example
     * // Create many Notificaciones
     * const notificaciones = await prisma.notificaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificacionesCreateManyArgs>(args?: SelectSubset<T, notificacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notificaciones.
     * @param {notificacionesDeleteArgs} args - Arguments to delete one Notificaciones.
     * @example
     * // Delete one Notificaciones
     * const Notificaciones = await prisma.notificaciones.delete({
     *   where: {
     *     // ... filter to delete one Notificaciones
     *   }
     * })
     * 
     */
    delete<T extends notificacionesDeleteArgs>(args: SelectSubset<T, notificacionesDeleteArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notificaciones.
     * @param {notificacionesUpdateArgs} args - Arguments to update one Notificaciones.
     * @example
     * // Update one Notificaciones
     * const notificaciones = await prisma.notificaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificacionesUpdateArgs>(args: SelectSubset<T, notificacionesUpdateArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notificaciones.
     * @param {notificacionesDeleteManyArgs} args - Arguments to filter Notificaciones to delete.
     * @example
     * // Delete a few Notificaciones
     * const { count } = await prisma.notificaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificacionesDeleteManyArgs>(args?: SelectSubset<T, notificacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificaciones
     * const notificaciones = await prisma.notificaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificacionesUpdateManyArgs>(args: SelectSubset<T, notificacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notificaciones.
     * @param {notificacionesUpsertArgs} args - Arguments to update or create a Notificaciones.
     * @example
     * // Update or create a Notificaciones
     * const notificaciones = await prisma.notificaciones.upsert({
     *   create: {
     *     // ... data to create a Notificaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificaciones we want to update
     *   }
     * })
     */
    upsert<T extends notificacionesUpsertArgs>(args: SelectSubset<T, notificacionesUpsertArgs<ExtArgs>>): Prisma__notificacionesClient<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacionesCountArgs} args - Arguments to filter Notificaciones to count.
     * @example
     * // Count the number of Notificaciones
     * const count = await prisma.notificaciones.count({
     *   where: {
     *     // ... the filter for the Notificaciones we want to count
     *   }
     * })
    **/
    count<T extends notificacionesCountArgs>(
      args?: Subset<T, notificacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacionesAggregateArgs>(args: Subset<T, NotificacionesAggregateArgs>): Prisma.PrismaPromise<GetNotificacionesAggregateType<T>>

    /**
     * Group by Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificacionesGroupByArgs['orderBy'] }
        : { orderBy?: notificacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notificaciones model
   */
  readonly fields: notificacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notificaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleados<T extends notificaciones$empleadosArgs<ExtArgs> = {}>(args?: Subset<T, notificaciones$empleadosArgs<ExtArgs>>): Prisma__empleadosClient<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notificaciones model
   */
  interface notificacionesFieldRefs {
    readonly id_notificacion: FieldRef<"notificaciones", 'Int'>
    readonly id_usuario: FieldRef<"notificaciones", 'Int'>
    readonly titulo: FieldRef<"notificaciones", 'String'>
    readonly mensaje: FieldRef<"notificaciones", 'String'>
    readonly fecha_envio: FieldRef<"notificaciones", 'DateTime'>
    readonly leido: FieldRef<"notificaciones", 'Boolean'>
    readonly id_empleado: FieldRef<"notificaciones", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * notificaciones findUnique
   */
  export type notificacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * Filter, which notificaciones to fetch.
     */
    where: notificacionesWhereUniqueInput
  }

  /**
   * notificaciones findUniqueOrThrow
   */
  export type notificacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * Filter, which notificaciones to fetch.
     */
    where: notificacionesWhereUniqueInput
  }

  /**
   * notificaciones findFirst
   */
  export type notificacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * Filter, which notificaciones to fetch.
     */
    where?: notificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificaciones to fetch.
     */
    orderBy?: notificacionesOrderByWithRelationInput | notificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificaciones.
     */
    cursor?: notificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificaciones.
     */
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * notificaciones findFirstOrThrow
   */
  export type notificacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * Filter, which notificaciones to fetch.
     */
    where?: notificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificaciones to fetch.
     */
    orderBy?: notificacionesOrderByWithRelationInput | notificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificaciones.
     */
    cursor?: notificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificaciones.
     */
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * notificaciones findMany
   */
  export type notificacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * Filter, which notificaciones to fetch.
     */
    where?: notificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificaciones to fetch.
     */
    orderBy?: notificacionesOrderByWithRelationInput | notificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notificaciones.
     */
    cursor?: notificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificaciones.
     */
    skip?: number
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * notificaciones create
   */
  export type notificacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a notificaciones.
     */
    data: XOR<notificacionesCreateInput, notificacionesUncheckedCreateInput>
  }

  /**
   * notificaciones createMany
   */
  export type notificacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notificaciones.
     */
    data: notificacionesCreateManyInput | notificacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notificaciones update
   */
  export type notificacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a notificaciones.
     */
    data: XOR<notificacionesUpdateInput, notificacionesUncheckedUpdateInput>
    /**
     * Choose, which notificaciones to update.
     */
    where: notificacionesWhereUniqueInput
  }

  /**
   * notificaciones updateMany
   */
  export type notificacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notificaciones.
     */
    data: XOR<notificacionesUpdateManyMutationInput, notificacionesUncheckedUpdateManyInput>
    /**
     * Filter which notificaciones to update
     */
    where?: notificacionesWhereInput
    /**
     * Limit how many notificaciones to update.
     */
    limit?: number
  }

  /**
   * notificaciones upsert
   */
  export type notificacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the notificaciones to update in case it exists.
     */
    where: notificacionesWhereUniqueInput
    /**
     * In case the notificaciones found by the `where` argument doesn't exist, create a new notificaciones with this data.
     */
    create: XOR<notificacionesCreateInput, notificacionesUncheckedCreateInput>
    /**
     * In case the notificaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificacionesUpdateInput, notificacionesUncheckedUpdateInput>
  }

  /**
   * notificaciones delete
   */
  export type notificacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    /**
     * Filter which notificaciones to delete.
     */
    where: notificacionesWhereUniqueInput
  }

  /**
   * notificaciones deleteMany
   */
  export type notificacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificaciones to delete
     */
    where?: notificacionesWhereInput
    /**
     * Limit how many notificaciones to delete.
     */
    limit?: number
  }

  /**
   * notificaciones.empleados
   */
  export type notificaciones$empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    where?: empleadosWhereInput
  }

  /**
   * notificaciones without action
   */
  export type notificacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
  }


  /**
   * Model pagos
   */

  export type AggregatePagos = {
    _count: PagosCountAggregateOutputType | null
    _avg: PagosAvgAggregateOutputType | null
    _sum: PagosSumAggregateOutputType | null
    _min: PagosMinAggregateOutputType | null
    _max: PagosMaxAggregateOutputType | null
  }

  export type PagosAvgAggregateOutputType = {
    id_pago: number | null
    id_usuario: number | null
    monto: Decimal | null
    id_metodo: number | null
  }

  export type PagosSumAggregateOutputType = {
    id_pago: number | null
    id_usuario: number | null
    monto: Decimal | null
    id_metodo: number | null
  }

  export type PagosMinAggregateOutputType = {
    id_pago: number | null
    id_usuario: number | null
    monto: Decimal | null
    id_metodo: number | null
    fecha_pago: Date | null
    estado: $Enums.pagos_estado | null
  }

  export type PagosMaxAggregateOutputType = {
    id_pago: number | null
    id_usuario: number | null
    monto: Decimal | null
    id_metodo: number | null
    fecha_pago: Date | null
    estado: $Enums.pagos_estado | null
  }

  export type PagosCountAggregateOutputType = {
    id_pago: number
    id_usuario: number
    monto: number
    id_metodo: number
    fecha_pago: number
    estado: number
    _all: number
  }


  export type PagosAvgAggregateInputType = {
    id_pago?: true
    id_usuario?: true
    monto?: true
    id_metodo?: true
  }

  export type PagosSumAggregateInputType = {
    id_pago?: true
    id_usuario?: true
    monto?: true
    id_metodo?: true
  }

  export type PagosMinAggregateInputType = {
    id_pago?: true
    id_usuario?: true
    monto?: true
    id_metodo?: true
    fecha_pago?: true
    estado?: true
  }

  export type PagosMaxAggregateInputType = {
    id_pago?: true
    id_usuario?: true
    monto?: true
    id_metodo?: true
    fecha_pago?: true
    estado?: true
  }

  export type PagosCountAggregateInputType = {
    id_pago?: true
    id_usuario?: true
    monto?: true
    id_metodo?: true
    fecha_pago?: true
    estado?: true
    _all?: true
  }

  export type PagosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagos to aggregate.
     */
    where?: pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos to fetch.
     */
    orderBy?: pagosOrderByWithRelationInput | pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pagos
    **/
    _count?: true | PagosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagosMaxAggregateInputType
  }

  export type GetPagosAggregateType<T extends PagosAggregateArgs> = {
        [P in keyof T & keyof AggregatePagos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagos[P]>
      : GetScalarType<T[P], AggregatePagos[P]>
  }




  export type pagosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagosWhereInput
    orderBy?: pagosOrderByWithAggregationInput | pagosOrderByWithAggregationInput[]
    by: PagosScalarFieldEnum[] | PagosScalarFieldEnum
    having?: pagosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagosCountAggregateInputType | true
    _avg?: PagosAvgAggregateInputType
    _sum?: PagosSumAggregateInputType
    _min?: PagosMinAggregateInputType
    _max?: PagosMaxAggregateInputType
  }

  export type PagosGroupByOutputType = {
    id_pago: number
    id_usuario: number
    monto: Decimal
    id_metodo: number
    fecha_pago: Date | null
    estado: $Enums.pagos_estado | null
    _count: PagosCountAggregateOutputType | null
    _avg: PagosAvgAggregateOutputType | null
    _sum: PagosSumAggregateOutputType | null
    _min: PagosMinAggregateOutputType | null
    _max: PagosMaxAggregateOutputType | null
  }

  type GetPagosGroupByPayload<T extends pagosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagosGroupByOutputType[P]>
            : GetScalarType<T[P], PagosGroupByOutputType[P]>
        }
      >
    >


  export type pagosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pago?: boolean
    id_usuario?: boolean
    monto?: boolean
    id_metodo?: boolean
    fecha_pago?: boolean
    estado?: boolean
    metodos_pago?: boolean | metodos_pagoDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagos"]>



  export type pagosSelectScalar = {
    id_pago?: boolean
    id_usuario?: boolean
    monto?: boolean
    id_metodo?: boolean
    fecha_pago?: boolean
    estado?: boolean
  }

  export type pagosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pago" | "id_usuario" | "monto" | "id_metodo" | "fecha_pago" | "estado", ExtArgs["result"]["pagos"]>
  export type pagosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    metodos_pago?: boolean | metodos_pagoDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $pagosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pagos"
    objects: {
      metodos_pago: Prisma.$metodos_pagoPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pago: number
      id_usuario: number
      monto: Prisma.Decimal
      id_metodo: number
      fecha_pago: Date | null
      estado: $Enums.pagos_estado | null
    }, ExtArgs["result"]["pagos"]>
    composites: {}
  }

  type pagosGetPayload<S extends boolean | null | undefined | pagosDefaultArgs> = $Result.GetResult<Prisma.$pagosPayload, S>

  type pagosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pagosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PagosCountAggregateInputType | true
    }

  export interface pagosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pagos'], meta: { name: 'pagos' } }
    /**
     * Find zero or one Pagos that matches the filter.
     * @param {pagosFindUniqueArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pagosFindUniqueArgs>(args: SelectSubset<T, pagosFindUniqueArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pagos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pagosFindUniqueOrThrowArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pagosFindUniqueOrThrowArgs>(args: SelectSubset<T, pagosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagosFindFirstArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pagosFindFirstArgs>(args?: SelectSubset<T, pagosFindFirstArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagosFindFirstOrThrowArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pagosFindFirstOrThrowArgs>(args?: SelectSubset<T, pagosFindFirstOrThrowArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pagos.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pagos.findMany({ take: 10 })
     * 
     * // Only select the `id_pago`
     * const pagosWithId_pagoOnly = await prisma.pagos.findMany({ select: { id_pago: true } })
     * 
     */
    findMany<T extends pagosFindManyArgs>(args?: SelectSubset<T, pagosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pagos.
     * @param {pagosCreateArgs} args - Arguments to create a Pagos.
     * @example
     * // Create one Pagos
     * const Pagos = await prisma.pagos.create({
     *   data: {
     *     // ... data to create a Pagos
     *   }
     * })
     * 
     */
    create<T extends pagosCreateArgs>(args: SelectSubset<T, pagosCreateArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagos.
     * @param {pagosCreateManyArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pagos = await prisma.pagos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pagosCreateManyArgs>(args?: SelectSubset<T, pagosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pagos.
     * @param {pagosDeleteArgs} args - Arguments to delete one Pagos.
     * @example
     * // Delete one Pagos
     * const Pagos = await prisma.pagos.delete({
     *   where: {
     *     // ... filter to delete one Pagos
     *   }
     * })
     * 
     */
    delete<T extends pagosDeleteArgs>(args: SelectSubset<T, pagosDeleteArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pagos.
     * @param {pagosUpdateArgs} args - Arguments to update one Pagos.
     * @example
     * // Update one Pagos
     * const pagos = await prisma.pagos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pagosUpdateArgs>(args: SelectSubset<T, pagosUpdateArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagos.
     * @param {pagosDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pagos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pagosDeleteManyArgs>(args?: SelectSubset<T, pagosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pagos = await prisma.pagos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pagosUpdateManyArgs>(args: SelectSubset<T, pagosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pagos.
     * @param {pagosUpsertArgs} args - Arguments to update or create a Pagos.
     * @example
     * // Update or create a Pagos
     * const pagos = await prisma.pagos.upsert({
     *   create: {
     *     // ... data to create a Pagos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagos we want to update
     *   }
     * })
     */
    upsert<T extends pagosUpsertArgs>(args: SelectSubset<T, pagosUpsertArgs<ExtArgs>>): Prisma__pagosClient<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagosCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pagos.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends pagosCountArgs>(
      args?: Subset<T, pagosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagosAggregateArgs>(args: Subset<T, PagosAggregateArgs>): Prisma.PrismaPromise<GetPagosAggregateType<T>>

    /**
     * Group by Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pagosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pagosGroupByArgs['orderBy'] }
        : { orderBy?: pagosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pagosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pagos model
   */
  readonly fields: pagosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pagos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pagosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    metodos_pago<T extends metodos_pagoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, metodos_pagoDefaultArgs<ExtArgs>>): Prisma__metodos_pagoClient<$Result.GetResult<Prisma.$metodos_pagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pagos model
   */
  interface pagosFieldRefs {
    readonly id_pago: FieldRef<"pagos", 'Int'>
    readonly id_usuario: FieldRef<"pagos", 'Int'>
    readonly monto: FieldRef<"pagos", 'Decimal'>
    readonly id_metodo: FieldRef<"pagos", 'Int'>
    readonly fecha_pago: FieldRef<"pagos", 'DateTime'>
    readonly estado: FieldRef<"pagos", 'pagos_estado'>
  }
    

  // Custom InputTypes
  /**
   * pagos findUnique
   */
  export type pagosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * Filter, which pagos to fetch.
     */
    where: pagosWhereUniqueInput
  }

  /**
   * pagos findUniqueOrThrow
   */
  export type pagosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * Filter, which pagos to fetch.
     */
    where: pagosWhereUniqueInput
  }

  /**
   * pagos findFirst
   */
  export type pagosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * Filter, which pagos to fetch.
     */
    where?: pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos to fetch.
     */
    orderBy?: pagosOrderByWithRelationInput | pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagos.
     */
    cursor?: pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagos.
     */
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * pagos findFirstOrThrow
   */
  export type pagosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * Filter, which pagos to fetch.
     */
    where?: pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos to fetch.
     */
    orderBy?: pagosOrderByWithRelationInput | pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagos.
     */
    cursor?: pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagos.
     */
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * pagos findMany
   */
  export type pagosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * Filter, which pagos to fetch.
     */
    where?: pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos to fetch.
     */
    orderBy?: pagosOrderByWithRelationInput | pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pagos.
     */
    cursor?: pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos.
     */
    skip?: number
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * pagos create
   */
  export type pagosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * The data needed to create a pagos.
     */
    data: XOR<pagosCreateInput, pagosUncheckedCreateInput>
  }

  /**
   * pagos createMany
   */
  export type pagosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pagos.
     */
    data: pagosCreateManyInput | pagosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pagos update
   */
  export type pagosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * The data needed to update a pagos.
     */
    data: XOR<pagosUpdateInput, pagosUncheckedUpdateInput>
    /**
     * Choose, which pagos to update.
     */
    where: pagosWhereUniqueInput
  }

  /**
   * pagos updateMany
   */
  export type pagosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pagos.
     */
    data: XOR<pagosUpdateManyMutationInput, pagosUncheckedUpdateManyInput>
    /**
     * Filter which pagos to update
     */
    where?: pagosWhereInput
    /**
     * Limit how many pagos to update.
     */
    limit?: number
  }

  /**
   * pagos upsert
   */
  export type pagosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * The filter to search for the pagos to update in case it exists.
     */
    where: pagosWhereUniqueInput
    /**
     * In case the pagos found by the `where` argument doesn't exist, create a new pagos with this data.
     */
    create: XOR<pagosCreateInput, pagosUncheckedCreateInput>
    /**
     * In case the pagos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pagosUpdateInput, pagosUncheckedUpdateInput>
  }

  /**
   * pagos delete
   */
  export type pagosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    /**
     * Filter which pagos to delete.
     */
    where: pagosWhereUniqueInput
  }

  /**
   * pagos deleteMany
   */
  export type pagosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagos to delete
     */
    where?: pagosWhereInput
    /**
     * Limit how many pagos to delete.
     */
    limit?: number
  }

  /**
   * pagos without action
   */
  export type pagosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
  }


  /**
   * Model peliculas
   */

  export type AggregatePeliculas = {
    _count: PeliculasCountAggregateOutputType | null
    _avg: PeliculasAvgAggregateOutputType | null
    _sum: PeliculasSumAggregateOutputType | null
    _min: PeliculasMinAggregateOutputType | null
    _max: PeliculasMaxAggregateOutputType | null
  }

  export type PeliculasAvgAggregateOutputType = {
    id_pelicula: number | null
    duracion: number | null
    id_productora: number | null
    id_clasificacion: number | null
    calificacion_promedio: number | null
  }

  export type PeliculasSumAggregateOutputType = {
    id_pelicula: number | null
    duracion: number | null
    id_productora: number | null
    id_clasificacion: number | null
    calificacion_promedio: number | null
  }

  export type PeliculasMinAggregateOutputType = {
    id_pelicula: number | null
    titulo: string | null
    sinopsis: string | null
    duracion: number | null
    fecha_lanzamiento: Date | null
    id_productora: number | null
    tipo_contenido: $Enums.peliculas_tipo_contenido | null
    imagen_portada: string | null
    url_video: string | null
    id_clasificacion: number | null
    calificacion_promedio: number | null
  }

  export type PeliculasMaxAggregateOutputType = {
    id_pelicula: number | null
    titulo: string | null
    sinopsis: string | null
    duracion: number | null
    fecha_lanzamiento: Date | null
    id_productora: number | null
    tipo_contenido: $Enums.peliculas_tipo_contenido | null
    imagen_portada: string | null
    url_video: string | null
    id_clasificacion: number | null
    calificacion_promedio: number | null
  }

  export type PeliculasCountAggregateOutputType = {
    id_pelicula: number
    titulo: number
    sinopsis: number
    duracion: number
    fecha_lanzamiento: number
    id_productora: number
    tipo_contenido: number
    imagen_portada: number
    url_video: number
    id_clasificacion: number
    calificacion_promedio: number
    _all: number
  }


  export type PeliculasAvgAggregateInputType = {
    id_pelicula?: true
    duracion?: true
    id_productora?: true
    id_clasificacion?: true
    calificacion_promedio?: true
  }

  export type PeliculasSumAggregateInputType = {
    id_pelicula?: true
    duracion?: true
    id_productora?: true
    id_clasificacion?: true
    calificacion_promedio?: true
  }

  export type PeliculasMinAggregateInputType = {
    id_pelicula?: true
    titulo?: true
    sinopsis?: true
    duracion?: true
    fecha_lanzamiento?: true
    id_productora?: true
    tipo_contenido?: true
    imagen_portada?: true
    url_video?: true
    id_clasificacion?: true
    calificacion_promedio?: true
  }

  export type PeliculasMaxAggregateInputType = {
    id_pelicula?: true
    titulo?: true
    sinopsis?: true
    duracion?: true
    fecha_lanzamiento?: true
    id_productora?: true
    tipo_contenido?: true
    imagen_portada?: true
    url_video?: true
    id_clasificacion?: true
    calificacion_promedio?: true
  }

  export type PeliculasCountAggregateInputType = {
    id_pelicula?: true
    titulo?: true
    sinopsis?: true
    duracion?: true
    fecha_lanzamiento?: true
    id_productora?: true
    tipo_contenido?: true
    imagen_portada?: true
    url_video?: true
    id_clasificacion?: true
    calificacion_promedio?: true
    _all?: true
  }

  export type PeliculasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which peliculas to aggregate.
     */
    where?: peliculasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas to fetch.
     */
    orderBy?: peliculasOrderByWithRelationInput | peliculasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: peliculasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned peliculas
    **/
    _count?: true | PeliculasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PeliculasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PeliculasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PeliculasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PeliculasMaxAggregateInputType
  }

  export type GetPeliculasAggregateType<T extends PeliculasAggregateArgs> = {
        [P in keyof T & keyof AggregatePeliculas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePeliculas[P]>
      : GetScalarType<T[P], AggregatePeliculas[P]>
  }




  export type peliculasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculasWhereInput
    orderBy?: peliculasOrderByWithAggregationInput | peliculasOrderByWithAggregationInput[]
    by: PeliculasScalarFieldEnum[] | PeliculasScalarFieldEnum
    having?: peliculasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PeliculasCountAggregateInputType | true
    _avg?: PeliculasAvgAggregateInputType
    _sum?: PeliculasSumAggregateInputType
    _min?: PeliculasMinAggregateInputType
    _max?: PeliculasMaxAggregateInputType
  }

  export type PeliculasGroupByOutputType = {
    id_pelicula: number
    titulo: string
    sinopsis: string | null
    duracion: number | null
    fecha_lanzamiento: Date | null
    id_productora: number | null
    tipo_contenido: $Enums.peliculas_tipo_contenido | null
    imagen_portada: string | null
    url_video: string | null
    id_clasificacion: number | null
    calificacion_promedio: number | null
    _count: PeliculasCountAggregateOutputType | null
    _avg: PeliculasAvgAggregateOutputType | null
    _sum: PeliculasSumAggregateOutputType | null
    _min: PeliculasMinAggregateOutputType | null
    _max: PeliculasMaxAggregateOutputType | null
  }

  type GetPeliculasGroupByPayload<T extends peliculasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PeliculasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PeliculasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PeliculasGroupByOutputType[P]>
            : GetScalarType<T[P], PeliculasGroupByOutputType[P]>
        }
      >
    >


  export type peliculasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pelicula?: boolean
    titulo?: boolean
    sinopsis?: boolean
    duracion?: boolean
    fecha_lanzamiento?: boolean
    id_productora?: boolean
    tipo_contenido?: boolean
    imagen_portada?: boolean
    url_video?: boolean
    id_clasificacion?: boolean
    calificacion_promedio?: boolean
    funciones?: boolean | peliculas$funcionesArgs<ExtArgs>
    historial_reproduccion?: boolean | peliculas$historial_reproduccionArgs<ExtArgs>
    clasificaciones?: boolean | peliculas$clasificacionesArgs<ExtArgs>
    productoras?: boolean | peliculas$productorasArgs<ExtArgs>
    peliculas_directores?: boolean | peliculas$peliculas_directoresArgs<ExtArgs>
    peliculas_generos?: boolean | peliculas$peliculas_generosArgs<ExtArgs>
    reparto?: boolean | peliculas$repartoArgs<ExtArgs>
    valoraciones?: boolean | peliculas$valoracionesArgs<ExtArgs>
    _count?: boolean | PeliculasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["peliculas"]>



  export type peliculasSelectScalar = {
    id_pelicula?: boolean
    titulo?: boolean
    sinopsis?: boolean
    duracion?: boolean
    fecha_lanzamiento?: boolean
    id_productora?: boolean
    tipo_contenido?: boolean
    imagen_portada?: boolean
    url_video?: boolean
    id_clasificacion?: boolean
    calificacion_promedio?: boolean
  }

  export type peliculasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pelicula" | "titulo" | "sinopsis" | "duracion" | "fecha_lanzamiento" | "id_productora" | "tipo_contenido" | "imagen_portada" | "url_video" | "id_clasificacion" | "calificacion_promedio", ExtArgs["result"]["peliculas"]>
  export type peliculasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | peliculas$funcionesArgs<ExtArgs>
    historial_reproduccion?: boolean | peliculas$historial_reproduccionArgs<ExtArgs>
    clasificaciones?: boolean | peliculas$clasificacionesArgs<ExtArgs>
    productoras?: boolean | peliculas$productorasArgs<ExtArgs>
    peliculas_directores?: boolean | peliculas$peliculas_directoresArgs<ExtArgs>
    peliculas_generos?: boolean | peliculas$peliculas_generosArgs<ExtArgs>
    reparto?: boolean | peliculas$repartoArgs<ExtArgs>
    valoraciones?: boolean | peliculas$valoracionesArgs<ExtArgs>
    _count?: boolean | PeliculasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $peliculasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "peliculas"
    objects: {
      funciones: Prisma.$funcionesPayload<ExtArgs>[]
      historial_reproduccion: Prisma.$historial_reproduccionPayload<ExtArgs>[]
      clasificaciones: Prisma.$clasificacionesPayload<ExtArgs> | null
      productoras: Prisma.$productorasPayload<ExtArgs> | null
      peliculas_directores: Prisma.$peliculas_directoresPayload<ExtArgs>[]
      peliculas_generos: Prisma.$peliculas_generosPayload<ExtArgs>[]
      reparto: Prisma.$repartoPayload<ExtArgs>[]
      valoraciones: Prisma.$valoracionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pelicula: number
      titulo: string
      sinopsis: string | null
      duracion: number | null
      fecha_lanzamiento: Date | null
      id_productora: number | null
      tipo_contenido: $Enums.peliculas_tipo_contenido | null
      imagen_portada: string | null
      url_video: string | null
      id_clasificacion: number | null
      calificacion_promedio: number | null
    }, ExtArgs["result"]["peliculas"]>
    composites: {}
  }

  type peliculasGetPayload<S extends boolean | null | undefined | peliculasDefaultArgs> = $Result.GetResult<Prisma.$peliculasPayload, S>

  type peliculasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<peliculasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PeliculasCountAggregateInputType | true
    }

  export interface peliculasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['peliculas'], meta: { name: 'peliculas' } }
    /**
     * Find zero or one Peliculas that matches the filter.
     * @param {peliculasFindUniqueArgs} args - Arguments to find a Peliculas
     * @example
     * // Get one Peliculas
     * const peliculas = await prisma.peliculas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends peliculasFindUniqueArgs>(args: SelectSubset<T, peliculasFindUniqueArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Peliculas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {peliculasFindUniqueOrThrowArgs} args - Arguments to find a Peliculas
     * @example
     * // Get one Peliculas
     * const peliculas = await prisma.peliculas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends peliculasFindUniqueOrThrowArgs>(args: SelectSubset<T, peliculasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Peliculas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculasFindFirstArgs} args - Arguments to find a Peliculas
     * @example
     * // Get one Peliculas
     * const peliculas = await prisma.peliculas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends peliculasFindFirstArgs>(args?: SelectSubset<T, peliculasFindFirstArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Peliculas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculasFindFirstOrThrowArgs} args - Arguments to find a Peliculas
     * @example
     * // Get one Peliculas
     * const peliculas = await prisma.peliculas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends peliculasFindFirstOrThrowArgs>(args?: SelectSubset<T, peliculasFindFirstOrThrowArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Peliculas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Peliculas
     * const peliculas = await prisma.peliculas.findMany()
     * 
     * // Get first 10 Peliculas
     * const peliculas = await prisma.peliculas.findMany({ take: 10 })
     * 
     * // Only select the `id_pelicula`
     * const peliculasWithId_peliculaOnly = await prisma.peliculas.findMany({ select: { id_pelicula: true } })
     * 
     */
    findMany<T extends peliculasFindManyArgs>(args?: SelectSubset<T, peliculasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Peliculas.
     * @param {peliculasCreateArgs} args - Arguments to create a Peliculas.
     * @example
     * // Create one Peliculas
     * const Peliculas = await prisma.peliculas.create({
     *   data: {
     *     // ... data to create a Peliculas
     *   }
     * })
     * 
     */
    create<T extends peliculasCreateArgs>(args: SelectSubset<T, peliculasCreateArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Peliculas.
     * @param {peliculasCreateManyArgs} args - Arguments to create many Peliculas.
     * @example
     * // Create many Peliculas
     * const peliculas = await prisma.peliculas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends peliculasCreateManyArgs>(args?: SelectSubset<T, peliculasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Peliculas.
     * @param {peliculasDeleteArgs} args - Arguments to delete one Peliculas.
     * @example
     * // Delete one Peliculas
     * const Peliculas = await prisma.peliculas.delete({
     *   where: {
     *     // ... filter to delete one Peliculas
     *   }
     * })
     * 
     */
    delete<T extends peliculasDeleteArgs>(args: SelectSubset<T, peliculasDeleteArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Peliculas.
     * @param {peliculasUpdateArgs} args - Arguments to update one Peliculas.
     * @example
     * // Update one Peliculas
     * const peliculas = await prisma.peliculas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends peliculasUpdateArgs>(args: SelectSubset<T, peliculasUpdateArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Peliculas.
     * @param {peliculasDeleteManyArgs} args - Arguments to filter Peliculas to delete.
     * @example
     * // Delete a few Peliculas
     * const { count } = await prisma.peliculas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends peliculasDeleteManyArgs>(args?: SelectSubset<T, peliculasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Peliculas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Peliculas
     * const peliculas = await prisma.peliculas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends peliculasUpdateManyArgs>(args: SelectSubset<T, peliculasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Peliculas.
     * @param {peliculasUpsertArgs} args - Arguments to update or create a Peliculas.
     * @example
     * // Update or create a Peliculas
     * const peliculas = await prisma.peliculas.upsert({
     *   create: {
     *     // ... data to create a Peliculas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Peliculas we want to update
     *   }
     * })
     */
    upsert<T extends peliculasUpsertArgs>(args: SelectSubset<T, peliculasUpsertArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Peliculas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculasCountArgs} args - Arguments to filter Peliculas to count.
     * @example
     * // Count the number of Peliculas
     * const count = await prisma.peliculas.count({
     *   where: {
     *     // ... the filter for the Peliculas we want to count
     *   }
     * })
    **/
    count<T extends peliculasCountArgs>(
      args?: Subset<T, peliculasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PeliculasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Peliculas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PeliculasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PeliculasAggregateArgs>(args: Subset<T, PeliculasAggregateArgs>): Prisma.PrismaPromise<GetPeliculasAggregateType<T>>

    /**
     * Group by Peliculas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends peliculasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: peliculasGroupByArgs['orderBy'] }
        : { orderBy?: peliculasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, peliculasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeliculasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the peliculas model
   */
  readonly fields: peliculasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for peliculas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__peliculasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funciones<T extends peliculas$funcionesArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$funcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historial_reproduccion<T extends peliculas$historial_reproduccionArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$historial_reproduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clasificaciones<T extends peliculas$clasificacionesArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$clasificacionesArgs<ExtArgs>>): Prisma__clasificacionesClient<$Result.GetResult<Prisma.$clasificacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productoras<T extends peliculas$productorasArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$productorasArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    peliculas_directores<T extends peliculas$peliculas_directoresArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$peliculas_directoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    peliculas_generos<T extends peliculas$peliculas_generosArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$peliculas_generosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reparto<T extends peliculas$repartoArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$repartoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    valoraciones<T extends peliculas$valoracionesArgs<ExtArgs> = {}>(args?: Subset<T, peliculas$valoracionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the peliculas model
   */
  interface peliculasFieldRefs {
    readonly id_pelicula: FieldRef<"peliculas", 'Int'>
    readonly titulo: FieldRef<"peliculas", 'String'>
    readonly sinopsis: FieldRef<"peliculas", 'String'>
    readonly duracion: FieldRef<"peliculas", 'Int'>
    readonly fecha_lanzamiento: FieldRef<"peliculas", 'DateTime'>
    readonly id_productora: FieldRef<"peliculas", 'Int'>
    readonly tipo_contenido: FieldRef<"peliculas", 'peliculas_tipo_contenido'>
    readonly imagen_portada: FieldRef<"peliculas", 'String'>
    readonly url_video: FieldRef<"peliculas", 'String'>
    readonly id_clasificacion: FieldRef<"peliculas", 'Int'>
    readonly calificacion_promedio: FieldRef<"peliculas", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * peliculas findUnique
   */
  export type peliculasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * Filter, which peliculas to fetch.
     */
    where: peliculasWhereUniqueInput
  }

  /**
   * peliculas findUniqueOrThrow
   */
  export type peliculasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * Filter, which peliculas to fetch.
     */
    where: peliculasWhereUniqueInput
  }

  /**
   * peliculas findFirst
   */
  export type peliculasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * Filter, which peliculas to fetch.
     */
    where?: peliculasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas to fetch.
     */
    orderBy?: peliculasOrderByWithRelationInput | peliculasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for peliculas.
     */
    cursor?: peliculasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of peliculas.
     */
    distinct?: PeliculasScalarFieldEnum | PeliculasScalarFieldEnum[]
  }

  /**
   * peliculas findFirstOrThrow
   */
  export type peliculasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * Filter, which peliculas to fetch.
     */
    where?: peliculasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas to fetch.
     */
    orderBy?: peliculasOrderByWithRelationInput | peliculasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for peliculas.
     */
    cursor?: peliculasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of peliculas.
     */
    distinct?: PeliculasScalarFieldEnum | PeliculasScalarFieldEnum[]
  }

  /**
   * peliculas findMany
   */
  export type peliculasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * Filter, which peliculas to fetch.
     */
    where?: peliculasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas to fetch.
     */
    orderBy?: peliculasOrderByWithRelationInput | peliculasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing peliculas.
     */
    cursor?: peliculasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas.
     */
    skip?: number
    distinct?: PeliculasScalarFieldEnum | PeliculasScalarFieldEnum[]
  }

  /**
   * peliculas create
   */
  export type peliculasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * The data needed to create a peliculas.
     */
    data: XOR<peliculasCreateInput, peliculasUncheckedCreateInput>
  }

  /**
   * peliculas createMany
   */
  export type peliculasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many peliculas.
     */
    data: peliculasCreateManyInput | peliculasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * peliculas update
   */
  export type peliculasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * The data needed to update a peliculas.
     */
    data: XOR<peliculasUpdateInput, peliculasUncheckedUpdateInput>
    /**
     * Choose, which peliculas to update.
     */
    where: peliculasWhereUniqueInput
  }

  /**
   * peliculas updateMany
   */
  export type peliculasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update peliculas.
     */
    data: XOR<peliculasUpdateManyMutationInput, peliculasUncheckedUpdateManyInput>
    /**
     * Filter which peliculas to update
     */
    where?: peliculasWhereInput
    /**
     * Limit how many peliculas to update.
     */
    limit?: number
  }

  /**
   * peliculas upsert
   */
  export type peliculasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * The filter to search for the peliculas to update in case it exists.
     */
    where: peliculasWhereUniqueInput
    /**
     * In case the peliculas found by the `where` argument doesn't exist, create a new peliculas with this data.
     */
    create: XOR<peliculasCreateInput, peliculasUncheckedCreateInput>
    /**
     * In case the peliculas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<peliculasUpdateInput, peliculasUncheckedUpdateInput>
  }

  /**
   * peliculas delete
   */
  export type peliculasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    /**
     * Filter which peliculas to delete.
     */
    where: peliculasWhereUniqueInput
  }

  /**
   * peliculas deleteMany
   */
  export type peliculasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which peliculas to delete
     */
    where?: peliculasWhereInput
    /**
     * Limit how many peliculas to delete.
     */
    limit?: number
  }

  /**
   * peliculas.funciones
   */
  export type peliculas$funcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    where?: funcionesWhereInput
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    cursor?: funcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionesScalarFieldEnum | FuncionesScalarFieldEnum[]
  }

  /**
   * peliculas.historial_reproduccion
   */
  export type peliculas$historial_reproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    where?: historial_reproduccionWhereInput
    orderBy?: historial_reproduccionOrderByWithRelationInput | historial_reproduccionOrderByWithRelationInput[]
    cursor?: historial_reproduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_reproduccionScalarFieldEnum | Historial_reproduccionScalarFieldEnum[]
  }

  /**
   * peliculas.clasificaciones
   */
  export type peliculas$clasificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clasificaciones
     */
    select?: clasificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clasificaciones
     */
    omit?: clasificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clasificacionesInclude<ExtArgs> | null
    where?: clasificacionesWhereInput
  }

  /**
   * peliculas.productoras
   */
  export type peliculas$productorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    where?: productorasWhereInput
  }

  /**
   * peliculas.peliculas_directores
   */
  export type peliculas$peliculas_directoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    where?: peliculas_directoresWhereInput
    orderBy?: peliculas_directoresOrderByWithRelationInput | peliculas_directoresOrderByWithRelationInput[]
    cursor?: peliculas_directoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Peliculas_directoresScalarFieldEnum | Peliculas_directoresScalarFieldEnum[]
  }

  /**
   * peliculas.peliculas_generos
   */
  export type peliculas$peliculas_generosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    where?: peliculas_generosWhereInput
    orderBy?: peliculas_generosOrderByWithRelationInput | peliculas_generosOrderByWithRelationInput[]
    cursor?: peliculas_generosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Peliculas_generosScalarFieldEnum | Peliculas_generosScalarFieldEnum[]
  }

  /**
   * peliculas.reparto
   */
  export type peliculas$repartoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    where?: repartoWhereInput
    orderBy?: repartoOrderByWithRelationInput | repartoOrderByWithRelationInput[]
    cursor?: repartoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RepartoScalarFieldEnum | RepartoScalarFieldEnum[]
  }

  /**
   * peliculas.valoraciones
   */
  export type peliculas$valoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    where?: valoracionesWhereInput
    orderBy?: valoracionesOrderByWithRelationInput | valoracionesOrderByWithRelationInput[]
    cursor?: valoracionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * peliculas without action
   */
  export type peliculasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
  }


  /**
   * Model peliculas_directores
   */

  export type AggregatePeliculas_directores = {
    _count: Peliculas_directoresCountAggregateOutputType | null
    _avg: Peliculas_directoresAvgAggregateOutputType | null
    _sum: Peliculas_directoresSumAggregateOutputType | null
    _min: Peliculas_directoresMinAggregateOutputType | null
    _max: Peliculas_directoresMaxAggregateOutputType | null
  }

  export type Peliculas_directoresAvgAggregateOutputType = {
    id_pelicula: number | null
    id_director: number | null
  }

  export type Peliculas_directoresSumAggregateOutputType = {
    id_pelicula: number | null
    id_director: number | null
  }

  export type Peliculas_directoresMinAggregateOutputType = {
    id_pelicula: number | null
    id_director: number | null
  }

  export type Peliculas_directoresMaxAggregateOutputType = {
    id_pelicula: number | null
    id_director: number | null
  }

  export type Peliculas_directoresCountAggregateOutputType = {
    id_pelicula: number
    id_director: number
    _all: number
  }


  export type Peliculas_directoresAvgAggregateInputType = {
    id_pelicula?: true
    id_director?: true
  }

  export type Peliculas_directoresSumAggregateInputType = {
    id_pelicula?: true
    id_director?: true
  }

  export type Peliculas_directoresMinAggregateInputType = {
    id_pelicula?: true
    id_director?: true
  }

  export type Peliculas_directoresMaxAggregateInputType = {
    id_pelicula?: true
    id_director?: true
  }

  export type Peliculas_directoresCountAggregateInputType = {
    id_pelicula?: true
    id_director?: true
    _all?: true
  }

  export type Peliculas_directoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which peliculas_directores to aggregate.
     */
    where?: peliculas_directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_directores to fetch.
     */
    orderBy?: peliculas_directoresOrderByWithRelationInput | peliculas_directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: peliculas_directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_directores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned peliculas_directores
    **/
    _count?: true | Peliculas_directoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Peliculas_directoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Peliculas_directoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Peliculas_directoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Peliculas_directoresMaxAggregateInputType
  }

  export type GetPeliculas_directoresAggregateType<T extends Peliculas_directoresAggregateArgs> = {
        [P in keyof T & keyof AggregatePeliculas_directores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePeliculas_directores[P]>
      : GetScalarType<T[P], AggregatePeliculas_directores[P]>
  }




  export type peliculas_directoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculas_directoresWhereInput
    orderBy?: peliculas_directoresOrderByWithAggregationInput | peliculas_directoresOrderByWithAggregationInput[]
    by: Peliculas_directoresScalarFieldEnum[] | Peliculas_directoresScalarFieldEnum
    having?: peliculas_directoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Peliculas_directoresCountAggregateInputType | true
    _avg?: Peliculas_directoresAvgAggregateInputType
    _sum?: Peliculas_directoresSumAggregateInputType
    _min?: Peliculas_directoresMinAggregateInputType
    _max?: Peliculas_directoresMaxAggregateInputType
  }

  export type Peliculas_directoresGroupByOutputType = {
    id_pelicula: number
    id_director: number
    _count: Peliculas_directoresCountAggregateOutputType | null
    _avg: Peliculas_directoresAvgAggregateOutputType | null
    _sum: Peliculas_directoresSumAggregateOutputType | null
    _min: Peliculas_directoresMinAggregateOutputType | null
    _max: Peliculas_directoresMaxAggregateOutputType | null
  }

  type GetPeliculas_directoresGroupByPayload<T extends peliculas_directoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Peliculas_directoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Peliculas_directoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Peliculas_directoresGroupByOutputType[P]>
            : GetScalarType<T[P], Peliculas_directoresGroupByOutputType[P]>
        }
      >
    >


  export type peliculas_directoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pelicula?: boolean
    id_director?: boolean
    directores?: boolean | directoresDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["peliculas_directores"]>



  export type peliculas_directoresSelectScalar = {
    id_pelicula?: boolean
    id_director?: boolean
  }

  export type peliculas_directoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pelicula" | "id_director", ExtArgs["result"]["peliculas_directores"]>
  export type peliculas_directoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    directores?: boolean | directoresDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
  }

  export type $peliculas_directoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "peliculas_directores"
    objects: {
      directores: Prisma.$directoresPayload<ExtArgs>
      peliculas: Prisma.$peliculasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pelicula: number
      id_director: number
    }, ExtArgs["result"]["peliculas_directores"]>
    composites: {}
  }

  type peliculas_directoresGetPayload<S extends boolean | null | undefined | peliculas_directoresDefaultArgs> = $Result.GetResult<Prisma.$peliculas_directoresPayload, S>

  type peliculas_directoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<peliculas_directoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Peliculas_directoresCountAggregateInputType | true
    }

  export interface peliculas_directoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['peliculas_directores'], meta: { name: 'peliculas_directores' } }
    /**
     * Find zero or one Peliculas_directores that matches the filter.
     * @param {peliculas_directoresFindUniqueArgs} args - Arguments to find a Peliculas_directores
     * @example
     * // Get one Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends peliculas_directoresFindUniqueArgs>(args: SelectSubset<T, peliculas_directoresFindUniqueArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Peliculas_directores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {peliculas_directoresFindUniqueOrThrowArgs} args - Arguments to find a Peliculas_directores
     * @example
     * // Get one Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends peliculas_directoresFindUniqueOrThrowArgs>(args: SelectSubset<T, peliculas_directoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Peliculas_directores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_directoresFindFirstArgs} args - Arguments to find a Peliculas_directores
     * @example
     * // Get one Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends peliculas_directoresFindFirstArgs>(args?: SelectSubset<T, peliculas_directoresFindFirstArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Peliculas_directores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_directoresFindFirstOrThrowArgs} args - Arguments to find a Peliculas_directores
     * @example
     * // Get one Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends peliculas_directoresFindFirstOrThrowArgs>(args?: SelectSubset<T, peliculas_directoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Peliculas_directores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_directoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.findMany()
     * 
     * // Get first 10 Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.findMany({ take: 10 })
     * 
     * // Only select the `id_pelicula`
     * const peliculas_directoresWithId_peliculaOnly = await prisma.peliculas_directores.findMany({ select: { id_pelicula: true } })
     * 
     */
    findMany<T extends peliculas_directoresFindManyArgs>(args?: SelectSubset<T, peliculas_directoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Peliculas_directores.
     * @param {peliculas_directoresCreateArgs} args - Arguments to create a Peliculas_directores.
     * @example
     * // Create one Peliculas_directores
     * const Peliculas_directores = await prisma.peliculas_directores.create({
     *   data: {
     *     // ... data to create a Peliculas_directores
     *   }
     * })
     * 
     */
    create<T extends peliculas_directoresCreateArgs>(args: SelectSubset<T, peliculas_directoresCreateArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Peliculas_directores.
     * @param {peliculas_directoresCreateManyArgs} args - Arguments to create many Peliculas_directores.
     * @example
     * // Create many Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends peliculas_directoresCreateManyArgs>(args?: SelectSubset<T, peliculas_directoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Peliculas_directores.
     * @param {peliculas_directoresDeleteArgs} args - Arguments to delete one Peliculas_directores.
     * @example
     * // Delete one Peliculas_directores
     * const Peliculas_directores = await prisma.peliculas_directores.delete({
     *   where: {
     *     // ... filter to delete one Peliculas_directores
     *   }
     * })
     * 
     */
    delete<T extends peliculas_directoresDeleteArgs>(args: SelectSubset<T, peliculas_directoresDeleteArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Peliculas_directores.
     * @param {peliculas_directoresUpdateArgs} args - Arguments to update one Peliculas_directores.
     * @example
     * // Update one Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends peliculas_directoresUpdateArgs>(args: SelectSubset<T, peliculas_directoresUpdateArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Peliculas_directores.
     * @param {peliculas_directoresDeleteManyArgs} args - Arguments to filter Peliculas_directores to delete.
     * @example
     * // Delete a few Peliculas_directores
     * const { count } = await prisma.peliculas_directores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends peliculas_directoresDeleteManyArgs>(args?: SelectSubset<T, peliculas_directoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Peliculas_directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_directoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends peliculas_directoresUpdateManyArgs>(args: SelectSubset<T, peliculas_directoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Peliculas_directores.
     * @param {peliculas_directoresUpsertArgs} args - Arguments to update or create a Peliculas_directores.
     * @example
     * // Update or create a Peliculas_directores
     * const peliculas_directores = await prisma.peliculas_directores.upsert({
     *   create: {
     *     // ... data to create a Peliculas_directores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Peliculas_directores we want to update
     *   }
     * })
     */
    upsert<T extends peliculas_directoresUpsertArgs>(args: SelectSubset<T, peliculas_directoresUpsertArgs<ExtArgs>>): Prisma__peliculas_directoresClient<$Result.GetResult<Prisma.$peliculas_directoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Peliculas_directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_directoresCountArgs} args - Arguments to filter Peliculas_directores to count.
     * @example
     * // Count the number of Peliculas_directores
     * const count = await prisma.peliculas_directores.count({
     *   where: {
     *     // ... the filter for the Peliculas_directores we want to count
     *   }
     * })
    **/
    count<T extends peliculas_directoresCountArgs>(
      args?: Subset<T, peliculas_directoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Peliculas_directoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Peliculas_directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Peliculas_directoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Peliculas_directoresAggregateArgs>(args: Subset<T, Peliculas_directoresAggregateArgs>): Prisma.PrismaPromise<GetPeliculas_directoresAggregateType<T>>

    /**
     * Group by Peliculas_directores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_directoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends peliculas_directoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: peliculas_directoresGroupByArgs['orderBy'] }
        : { orderBy?: peliculas_directoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, peliculas_directoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeliculas_directoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the peliculas_directores model
   */
  readonly fields: peliculas_directoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for peliculas_directores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__peliculas_directoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    directores<T extends directoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, directoresDefaultArgs<ExtArgs>>): Prisma__directoresClient<$Result.GetResult<Prisma.$directoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    peliculas<T extends peliculasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, peliculasDefaultArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the peliculas_directores model
   */
  interface peliculas_directoresFieldRefs {
    readonly id_pelicula: FieldRef<"peliculas_directores", 'Int'>
    readonly id_director: FieldRef<"peliculas_directores", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * peliculas_directores findUnique
   */
  export type peliculas_directoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_directores to fetch.
     */
    where: peliculas_directoresWhereUniqueInput
  }

  /**
   * peliculas_directores findUniqueOrThrow
   */
  export type peliculas_directoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_directores to fetch.
     */
    where: peliculas_directoresWhereUniqueInput
  }

  /**
   * peliculas_directores findFirst
   */
  export type peliculas_directoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_directores to fetch.
     */
    where?: peliculas_directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_directores to fetch.
     */
    orderBy?: peliculas_directoresOrderByWithRelationInput | peliculas_directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for peliculas_directores.
     */
    cursor?: peliculas_directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_directores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of peliculas_directores.
     */
    distinct?: Peliculas_directoresScalarFieldEnum | Peliculas_directoresScalarFieldEnum[]
  }

  /**
   * peliculas_directores findFirstOrThrow
   */
  export type peliculas_directoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_directores to fetch.
     */
    where?: peliculas_directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_directores to fetch.
     */
    orderBy?: peliculas_directoresOrderByWithRelationInput | peliculas_directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for peliculas_directores.
     */
    cursor?: peliculas_directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_directores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of peliculas_directores.
     */
    distinct?: Peliculas_directoresScalarFieldEnum | Peliculas_directoresScalarFieldEnum[]
  }

  /**
   * peliculas_directores findMany
   */
  export type peliculas_directoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_directores to fetch.
     */
    where?: peliculas_directoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_directores to fetch.
     */
    orderBy?: peliculas_directoresOrderByWithRelationInput | peliculas_directoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing peliculas_directores.
     */
    cursor?: peliculas_directoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_directores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_directores.
     */
    skip?: number
    distinct?: Peliculas_directoresScalarFieldEnum | Peliculas_directoresScalarFieldEnum[]
  }

  /**
   * peliculas_directores create
   */
  export type peliculas_directoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * The data needed to create a peliculas_directores.
     */
    data: XOR<peliculas_directoresCreateInput, peliculas_directoresUncheckedCreateInput>
  }

  /**
   * peliculas_directores createMany
   */
  export type peliculas_directoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many peliculas_directores.
     */
    data: peliculas_directoresCreateManyInput | peliculas_directoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * peliculas_directores update
   */
  export type peliculas_directoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * The data needed to update a peliculas_directores.
     */
    data: XOR<peliculas_directoresUpdateInput, peliculas_directoresUncheckedUpdateInput>
    /**
     * Choose, which peliculas_directores to update.
     */
    where: peliculas_directoresWhereUniqueInput
  }

  /**
   * peliculas_directores updateMany
   */
  export type peliculas_directoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update peliculas_directores.
     */
    data: XOR<peliculas_directoresUpdateManyMutationInput, peliculas_directoresUncheckedUpdateManyInput>
    /**
     * Filter which peliculas_directores to update
     */
    where?: peliculas_directoresWhereInput
    /**
     * Limit how many peliculas_directores to update.
     */
    limit?: number
  }

  /**
   * peliculas_directores upsert
   */
  export type peliculas_directoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * The filter to search for the peliculas_directores to update in case it exists.
     */
    where: peliculas_directoresWhereUniqueInput
    /**
     * In case the peliculas_directores found by the `where` argument doesn't exist, create a new peliculas_directores with this data.
     */
    create: XOR<peliculas_directoresCreateInput, peliculas_directoresUncheckedCreateInput>
    /**
     * In case the peliculas_directores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<peliculas_directoresUpdateInput, peliculas_directoresUncheckedUpdateInput>
  }

  /**
   * peliculas_directores delete
   */
  export type peliculas_directoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
    /**
     * Filter which peliculas_directores to delete.
     */
    where: peliculas_directoresWhereUniqueInput
  }

  /**
   * peliculas_directores deleteMany
   */
  export type peliculas_directoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which peliculas_directores to delete
     */
    where?: peliculas_directoresWhereInput
    /**
     * Limit how many peliculas_directores to delete.
     */
    limit?: number
  }

  /**
   * peliculas_directores without action
   */
  export type peliculas_directoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_directores
     */
    select?: peliculas_directoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_directores
     */
    omit?: peliculas_directoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_directoresInclude<ExtArgs> | null
  }


  /**
   * Model peliculas_generos
   */

  export type AggregatePeliculas_generos = {
    _count: Peliculas_generosCountAggregateOutputType | null
    _avg: Peliculas_generosAvgAggregateOutputType | null
    _sum: Peliculas_generosSumAggregateOutputType | null
    _min: Peliculas_generosMinAggregateOutputType | null
    _max: Peliculas_generosMaxAggregateOutputType | null
  }

  export type Peliculas_generosAvgAggregateOutputType = {
    id_pelicula: number | null
    id_genero: number | null
  }

  export type Peliculas_generosSumAggregateOutputType = {
    id_pelicula: number | null
    id_genero: number | null
  }

  export type Peliculas_generosMinAggregateOutputType = {
    id_pelicula: number | null
    id_genero: number | null
  }

  export type Peliculas_generosMaxAggregateOutputType = {
    id_pelicula: number | null
    id_genero: number | null
  }

  export type Peliculas_generosCountAggregateOutputType = {
    id_pelicula: number
    id_genero: number
    _all: number
  }


  export type Peliculas_generosAvgAggregateInputType = {
    id_pelicula?: true
    id_genero?: true
  }

  export type Peliculas_generosSumAggregateInputType = {
    id_pelicula?: true
    id_genero?: true
  }

  export type Peliculas_generosMinAggregateInputType = {
    id_pelicula?: true
    id_genero?: true
  }

  export type Peliculas_generosMaxAggregateInputType = {
    id_pelicula?: true
    id_genero?: true
  }

  export type Peliculas_generosCountAggregateInputType = {
    id_pelicula?: true
    id_genero?: true
    _all?: true
  }

  export type Peliculas_generosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which peliculas_generos to aggregate.
     */
    where?: peliculas_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_generos to fetch.
     */
    orderBy?: peliculas_generosOrderByWithRelationInput | peliculas_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: peliculas_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned peliculas_generos
    **/
    _count?: true | Peliculas_generosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Peliculas_generosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Peliculas_generosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Peliculas_generosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Peliculas_generosMaxAggregateInputType
  }

  export type GetPeliculas_generosAggregateType<T extends Peliculas_generosAggregateArgs> = {
        [P in keyof T & keyof AggregatePeliculas_generos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePeliculas_generos[P]>
      : GetScalarType<T[P], AggregatePeliculas_generos[P]>
  }




  export type peliculas_generosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: peliculas_generosWhereInput
    orderBy?: peliculas_generosOrderByWithAggregationInput | peliculas_generosOrderByWithAggregationInput[]
    by: Peliculas_generosScalarFieldEnum[] | Peliculas_generosScalarFieldEnum
    having?: peliculas_generosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Peliculas_generosCountAggregateInputType | true
    _avg?: Peliculas_generosAvgAggregateInputType
    _sum?: Peliculas_generosSumAggregateInputType
    _min?: Peliculas_generosMinAggregateInputType
    _max?: Peliculas_generosMaxAggregateInputType
  }

  export type Peliculas_generosGroupByOutputType = {
    id_pelicula: number
    id_genero: number
    _count: Peliculas_generosCountAggregateOutputType | null
    _avg: Peliculas_generosAvgAggregateOutputType | null
    _sum: Peliculas_generosSumAggregateOutputType | null
    _min: Peliculas_generosMinAggregateOutputType | null
    _max: Peliculas_generosMaxAggregateOutputType | null
  }

  type GetPeliculas_generosGroupByPayload<T extends peliculas_generosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Peliculas_generosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Peliculas_generosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Peliculas_generosGroupByOutputType[P]>
            : GetScalarType<T[P], Peliculas_generosGroupByOutputType[P]>
        }
      >
    >


  export type peliculas_generosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pelicula?: boolean
    id_genero?: boolean
    generos?: boolean | generosDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["peliculas_generos"]>



  export type peliculas_generosSelectScalar = {
    id_pelicula?: boolean
    id_genero?: boolean
  }

  export type peliculas_generosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pelicula" | "id_genero", ExtArgs["result"]["peliculas_generos"]>
  export type peliculas_generosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    generos?: boolean | generosDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
  }

  export type $peliculas_generosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "peliculas_generos"
    objects: {
      generos: Prisma.$generosPayload<ExtArgs>
      peliculas: Prisma.$peliculasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pelicula: number
      id_genero: number
    }, ExtArgs["result"]["peliculas_generos"]>
    composites: {}
  }

  type peliculas_generosGetPayload<S extends boolean | null | undefined | peliculas_generosDefaultArgs> = $Result.GetResult<Prisma.$peliculas_generosPayload, S>

  type peliculas_generosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<peliculas_generosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Peliculas_generosCountAggregateInputType | true
    }

  export interface peliculas_generosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['peliculas_generos'], meta: { name: 'peliculas_generos' } }
    /**
     * Find zero or one Peliculas_generos that matches the filter.
     * @param {peliculas_generosFindUniqueArgs} args - Arguments to find a Peliculas_generos
     * @example
     * // Get one Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends peliculas_generosFindUniqueArgs>(args: SelectSubset<T, peliculas_generosFindUniqueArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Peliculas_generos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {peliculas_generosFindUniqueOrThrowArgs} args - Arguments to find a Peliculas_generos
     * @example
     * // Get one Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends peliculas_generosFindUniqueOrThrowArgs>(args: SelectSubset<T, peliculas_generosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Peliculas_generos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_generosFindFirstArgs} args - Arguments to find a Peliculas_generos
     * @example
     * // Get one Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends peliculas_generosFindFirstArgs>(args?: SelectSubset<T, peliculas_generosFindFirstArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Peliculas_generos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_generosFindFirstOrThrowArgs} args - Arguments to find a Peliculas_generos
     * @example
     * // Get one Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends peliculas_generosFindFirstOrThrowArgs>(args?: SelectSubset<T, peliculas_generosFindFirstOrThrowArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Peliculas_generos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_generosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.findMany()
     * 
     * // Get first 10 Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.findMany({ take: 10 })
     * 
     * // Only select the `id_pelicula`
     * const peliculas_generosWithId_peliculaOnly = await prisma.peliculas_generos.findMany({ select: { id_pelicula: true } })
     * 
     */
    findMany<T extends peliculas_generosFindManyArgs>(args?: SelectSubset<T, peliculas_generosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Peliculas_generos.
     * @param {peliculas_generosCreateArgs} args - Arguments to create a Peliculas_generos.
     * @example
     * // Create one Peliculas_generos
     * const Peliculas_generos = await prisma.peliculas_generos.create({
     *   data: {
     *     // ... data to create a Peliculas_generos
     *   }
     * })
     * 
     */
    create<T extends peliculas_generosCreateArgs>(args: SelectSubset<T, peliculas_generosCreateArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Peliculas_generos.
     * @param {peliculas_generosCreateManyArgs} args - Arguments to create many Peliculas_generos.
     * @example
     * // Create many Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends peliculas_generosCreateManyArgs>(args?: SelectSubset<T, peliculas_generosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Peliculas_generos.
     * @param {peliculas_generosDeleteArgs} args - Arguments to delete one Peliculas_generos.
     * @example
     * // Delete one Peliculas_generos
     * const Peliculas_generos = await prisma.peliculas_generos.delete({
     *   where: {
     *     // ... filter to delete one Peliculas_generos
     *   }
     * })
     * 
     */
    delete<T extends peliculas_generosDeleteArgs>(args: SelectSubset<T, peliculas_generosDeleteArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Peliculas_generos.
     * @param {peliculas_generosUpdateArgs} args - Arguments to update one Peliculas_generos.
     * @example
     * // Update one Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends peliculas_generosUpdateArgs>(args: SelectSubset<T, peliculas_generosUpdateArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Peliculas_generos.
     * @param {peliculas_generosDeleteManyArgs} args - Arguments to filter Peliculas_generos to delete.
     * @example
     * // Delete a few Peliculas_generos
     * const { count } = await prisma.peliculas_generos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends peliculas_generosDeleteManyArgs>(args?: SelectSubset<T, peliculas_generosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Peliculas_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_generosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends peliculas_generosUpdateManyArgs>(args: SelectSubset<T, peliculas_generosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Peliculas_generos.
     * @param {peliculas_generosUpsertArgs} args - Arguments to update or create a Peliculas_generos.
     * @example
     * // Update or create a Peliculas_generos
     * const peliculas_generos = await prisma.peliculas_generos.upsert({
     *   create: {
     *     // ... data to create a Peliculas_generos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Peliculas_generos we want to update
     *   }
     * })
     */
    upsert<T extends peliculas_generosUpsertArgs>(args: SelectSubset<T, peliculas_generosUpsertArgs<ExtArgs>>): Prisma__peliculas_generosClient<$Result.GetResult<Prisma.$peliculas_generosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Peliculas_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_generosCountArgs} args - Arguments to filter Peliculas_generos to count.
     * @example
     * // Count the number of Peliculas_generos
     * const count = await prisma.peliculas_generos.count({
     *   where: {
     *     // ... the filter for the Peliculas_generos we want to count
     *   }
     * })
    **/
    count<T extends peliculas_generosCountArgs>(
      args?: Subset<T, peliculas_generosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Peliculas_generosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Peliculas_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Peliculas_generosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Peliculas_generosAggregateArgs>(args: Subset<T, Peliculas_generosAggregateArgs>): Prisma.PrismaPromise<GetPeliculas_generosAggregateType<T>>

    /**
     * Group by Peliculas_generos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {peliculas_generosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends peliculas_generosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: peliculas_generosGroupByArgs['orderBy'] }
        : { orderBy?: peliculas_generosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, peliculas_generosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeliculas_generosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the peliculas_generos model
   */
  readonly fields: peliculas_generosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for peliculas_generos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__peliculas_generosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    generos<T extends generosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, generosDefaultArgs<ExtArgs>>): Prisma__generosClient<$Result.GetResult<Prisma.$generosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    peliculas<T extends peliculasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, peliculasDefaultArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the peliculas_generos model
   */
  interface peliculas_generosFieldRefs {
    readonly id_pelicula: FieldRef<"peliculas_generos", 'Int'>
    readonly id_genero: FieldRef<"peliculas_generos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * peliculas_generos findUnique
   */
  export type peliculas_generosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_generos to fetch.
     */
    where: peliculas_generosWhereUniqueInput
  }

  /**
   * peliculas_generos findUniqueOrThrow
   */
  export type peliculas_generosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_generos to fetch.
     */
    where: peliculas_generosWhereUniqueInput
  }

  /**
   * peliculas_generos findFirst
   */
  export type peliculas_generosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_generos to fetch.
     */
    where?: peliculas_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_generos to fetch.
     */
    orderBy?: peliculas_generosOrderByWithRelationInput | peliculas_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for peliculas_generos.
     */
    cursor?: peliculas_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of peliculas_generos.
     */
    distinct?: Peliculas_generosScalarFieldEnum | Peliculas_generosScalarFieldEnum[]
  }

  /**
   * peliculas_generos findFirstOrThrow
   */
  export type peliculas_generosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_generos to fetch.
     */
    where?: peliculas_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_generos to fetch.
     */
    orderBy?: peliculas_generosOrderByWithRelationInput | peliculas_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for peliculas_generos.
     */
    cursor?: peliculas_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_generos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of peliculas_generos.
     */
    distinct?: Peliculas_generosScalarFieldEnum | Peliculas_generosScalarFieldEnum[]
  }

  /**
   * peliculas_generos findMany
   */
  export type peliculas_generosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * Filter, which peliculas_generos to fetch.
     */
    where?: peliculas_generosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of peliculas_generos to fetch.
     */
    orderBy?: peliculas_generosOrderByWithRelationInput | peliculas_generosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing peliculas_generos.
     */
    cursor?: peliculas_generosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` peliculas_generos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` peliculas_generos.
     */
    skip?: number
    distinct?: Peliculas_generosScalarFieldEnum | Peliculas_generosScalarFieldEnum[]
  }

  /**
   * peliculas_generos create
   */
  export type peliculas_generosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * The data needed to create a peliculas_generos.
     */
    data: XOR<peliculas_generosCreateInput, peliculas_generosUncheckedCreateInput>
  }

  /**
   * peliculas_generos createMany
   */
  export type peliculas_generosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many peliculas_generos.
     */
    data: peliculas_generosCreateManyInput | peliculas_generosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * peliculas_generos update
   */
  export type peliculas_generosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * The data needed to update a peliculas_generos.
     */
    data: XOR<peliculas_generosUpdateInput, peliculas_generosUncheckedUpdateInput>
    /**
     * Choose, which peliculas_generos to update.
     */
    where: peliculas_generosWhereUniqueInput
  }

  /**
   * peliculas_generos updateMany
   */
  export type peliculas_generosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update peliculas_generos.
     */
    data: XOR<peliculas_generosUpdateManyMutationInput, peliculas_generosUncheckedUpdateManyInput>
    /**
     * Filter which peliculas_generos to update
     */
    where?: peliculas_generosWhereInput
    /**
     * Limit how many peliculas_generos to update.
     */
    limit?: number
  }

  /**
   * peliculas_generos upsert
   */
  export type peliculas_generosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * The filter to search for the peliculas_generos to update in case it exists.
     */
    where: peliculas_generosWhereUniqueInput
    /**
     * In case the peliculas_generos found by the `where` argument doesn't exist, create a new peliculas_generos with this data.
     */
    create: XOR<peliculas_generosCreateInput, peliculas_generosUncheckedCreateInput>
    /**
     * In case the peliculas_generos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<peliculas_generosUpdateInput, peliculas_generosUncheckedUpdateInput>
  }

  /**
   * peliculas_generos delete
   */
  export type peliculas_generosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
    /**
     * Filter which peliculas_generos to delete.
     */
    where: peliculas_generosWhereUniqueInput
  }

  /**
   * peliculas_generos deleteMany
   */
  export type peliculas_generosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which peliculas_generos to delete
     */
    where?: peliculas_generosWhereInput
    /**
     * Limit how many peliculas_generos to delete.
     */
    limit?: number
  }

  /**
   * peliculas_generos without action
   */
  export type peliculas_generosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas_generos
     */
    select?: peliculas_generosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas_generos
     */
    omit?: peliculas_generosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculas_generosInclude<ExtArgs> | null
  }


  /**
   * Model planes
   */

  export type AggregatePlanes = {
    _count: PlanesCountAggregateOutputType | null
    _avg: PlanesAvgAggregateOutputType | null
    _sum: PlanesSumAggregateOutputType | null
    _min: PlanesMinAggregateOutputType | null
    _max: PlanesMaxAggregateOutputType | null
  }

  export type PlanesAvgAggregateOutputType = {
    id_plan: number | null
    precio: Decimal | null
    duracion_dias: number | null
  }

  export type PlanesSumAggregateOutputType = {
    id_plan: number | null
    precio: Decimal | null
    duracion_dias: number | null
  }

  export type PlanesMinAggregateOutputType = {
    id_plan: number | null
    nombre: string | null
    precio: Decimal | null
    duracion_dias: number | null
    descripcion: string | null
  }

  export type PlanesMaxAggregateOutputType = {
    id_plan: number | null
    nombre: string | null
    precio: Decimal | null
    duracion_dias: number | null
    descripcion: string | null
  }

  export type PlanesCountAggregateOutputType = {
    id_plan: number
    nombre: number
    precio: number
    duracion_dias: number
    descripcion: number
    _all: number
  }


  export type PlanesAvgAggregateInputType = {
    id_plan?: true
    precio?: true
    duracion_dias?: true
  }

  export type PlanesSumAggregateInputType = {
    id_plan?: true
    precio?: true
    duracion_dias?: true
  }

  export type PlanesMinAggregateInputType = {
    id_plan?: true
    nombre?: true
    precio?: true
    duracion_dias?: true
    descripcion?: true
  }

  export type PlanesMaxAggregateInputType = {
    id_plan?: true
    nombre?: true
    precio?: true
    duracion_dias?: true
    descripcion?: true
  }

  export type PlanesCountAggregateInputType = {
    id_plan?: true
    nombre?: true
    precio?: true
    duracion_dias?: true
    descripcion?: true
    _all?: true
  }

  export type PlanesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which planes to aggregate.
     */
    where?: planesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of planes to fetch.
     */
    orderBy?: planesOrderByWithRelationInput | planesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: planesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` planes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` planes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned planes
    **/
    _count?: true | PlanesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlanesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlanesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlanesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlanesMaxAggregateInputType
  }

  export type GetPlanesAggregateType<T extends PlanesAggregateArgs> = {
        [P in keyof T & keyof AggregatePlanes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlanes[P]>
      : GetScalarType<T[P], AggregatePlanes[P]>
  }




  export type planesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: planesWhereInput
    orderBy?: planesOrderByWithAggregationInput | planesOrderByWithAggregationInput[]
    by: PlanesScalarFieldEnum[] | PlanesScalarFieldEnum
    having?: planesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlanesCountAggregateInputType | true
    _avg?: PlanesAvgAggregateInputType
    _sum?: PlanesSumAggregateInputType
    _min?: PlanesMinAggregateInputType
    _max?: PlanesMaxAggregateInputType
  }

  export type PlanesGroupByOutputType = {
    id_plan: number
    nombre: string | null
    precio: Decimal | null
    duracion_dias: number | null
    descripcion: string | null
    _count: PlanesCountAggregateOutputType | null
    _avg: PlanesAvgAggregateOutputType | null
    _sum: PlanesSumAggregateOutputType | null
    _min: PlanesMinAggregateOutputType | null
    _max: PlanesMaxAggregateOutputType | null
  }

  type GetPlanesGroupByPayload<T extends planesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlanesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlanesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlanesGroupByOutputType[P]>
            : GetScalarType<T[P], PlanesGroupByOutputType[P]>
        }
      >
    >


  export type planesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_plan?: boolean
    nombre?: boolean
    precio?: boolean
    duracion_dias?: boolean
    descripcion?: boolean
    suscripciones?: boolean | planes$suscripcionesArgs<ExtArgs>
    _count?: boolean | PlanesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["planes"]>



  export type planesSelectScalar = {
    id_plan?: boolean
    nombre?: boolean
    precio?: boolean
    duracion_dias?: boolean
    descripcion?: boolean
  }

  export type planesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_plan" | "nombre" | "precio" | "duracion_dias" | "descripcion", ExtArgs["result"]["planes"]>
  export type planesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    suscripciones?: boolean | planes$suscripcionesArgs<ExtArgs>
    _count?: boolean | PlanesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $planesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "planes"
    objects: {
      suscripciones: Prisma.$suscripcionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_plan: number
      nombre: string | null
      precio: Prisma.Decimal | null
      duracion_dias: number | null
      descripcion: string | null
    }, ExtArgs["result"]["planes"]>
    composites: {}
  }

  type planesGetPayload<S extends boolean | null | undefined | planesDefaultArgs> = $Result.GetResult<Prisma.$planesPayload, S>

  type planesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<planesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PlanesCountAggregateInputType | true
    }

  export interface planesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['planes'], meta: { name: 'planes' } }
    /**
     * Find zero or one Planes that matches the filter.
     * @param {planesFindUniqueArgs} args - Arguments to find a Planes
     * @example
     * // Get one Planes
     * const planes = await prisma.planes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends planesFindUniqueArgs>(args: SelectSubset<T, planesFindUniqueArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Planes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {planesFindUniqueOrThrowArgs} args - Arguments to find a Planes
     * @example
     * // Get one Planes
     * const planes = await prisma.planes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends planesFindUniqueOrThrowArgs>(args: SelectSubset<T, planesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Planes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {planesFindFirstArgs} args - Arguments to find a Planes
     * @example
     * // Get one Planes
     * const planes = await prisma.planes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends planesFindFirstArgs>(args?: SelectSubset<T, planesFindFirstArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Planes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {planesFindFirstOrThrowArgs} args - Arguments to find a Planes
     * @example
     * // Get one Planes
     * const planes = await prisma.planes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends planesFindFirstOrThrowArgs>(args?: SelectSubset<T, planesFindFirstOrThrowArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Planes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {planesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Planes
     * const planes = await prisma.planes.findMany()
     * 
     * // Get first 10 Planes
     * const planes = await prisma.planes.findMany({ take: 10 })
     * 
     * // Only select the `id_plan`
     * const planesWithId_planOnly = await prisma.planes.findMany({ select: { id_plan: true } })
     * 
     */
    findMany<T extends planesFindManyArgs>(args?: SelectSubset<T, planesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Planes.
     * @param {planesCreateArgs} args - Arguments to create a Planes.
     * @example
     * // Create one Planes
     * const Planes = await prisma.planes.create({
     *   data: {
     *     // ... data to create a Planes
     *   }
     * })
     * 
     */
    create<T extends planesCreateArgs>(args: SelectSubset<T, planesCreateArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Planes.
     * @param {planesCreateManyArgs} args - Arguments to create many Planes.
     * @example
     * // Create many Planes
     * const planes = await prisma.planes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends planesCreateManyArgs>(args?: SelectSubset<T, planesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Planes.
     * @param {planesDeleteArgs} args - Arguments to delete one Planes.
     * @example
     * // Delete one Planes
     * const Planes = await prisma.planes.delete({
     *   where: {
     *     // ... filter to delete one Planes
     *   }
     * })
     * 
     */
    delete<T extends planesDeleteArgs>(args: SelectSubset<T, planesDeleteArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Planes.
     * @param {planesUpdateArgs} args - Arguments to update one Planes.
     * @example
     * // Update one Planes
     * const planes = await prisma.planes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends planesUpdateArgs>(args: SelectSubset<T, planesUpdateArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Planes.
     * @param {planesDeleteManyArgs} args - Arguments to filter Planes to delete.
     * @example
     * // Delete a few Planes
     * const { count } = await prisma.planes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends planesDeleteManyArgs>(args?: SelectSubset<T, planesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Planes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {planesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Planes
     * const planes = await prisma.planes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends planesUpdateManyArgs>(args: SelectSubset<T, planesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Planes.
     * @param {planesUpsertArgs} args - Arguments to update or create a Planes.
     * @example
     * // Update or create a Planes
     * const planes = await prisma.planes.upsert({
     *   create: {
     *     // ... data to create a Planes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Planes we want to update
     *   }
     * })
     */
    upsert<T extends planesUpsertArgs>(args: SelectSubset<T, planesUpsertArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Planes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {planesCountArgs} args - Arguments to filter Planes to count.
     * @example
     * // Count the number of Planes
     * const count = await prisma.planes.count({
     *   where: {
     *     // ... the filter for the Planes we want to count
     *   }
     * })
    **/
    count<T extends planesCountArgs>(
      args?: Subset<T, planesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlanesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Planes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlanesAggregateArgs>(args: Subset<T, PlanesAggregateArgs>): Prisma.PrismaPromise<GetPlanesAggregateType<T>>

    /**
     * Group by Planes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {planesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends planesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: planesGroupByArgs['orderBy'] }
        : { orderBy?: planesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, planesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlanesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the planes model
   */
  readonly fields: planesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for planes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__planesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    suscripciones<T extends planes$suscripcionesArgs<ExtArgs> = {}>(args?: Subset<T, planes$suscripcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the planes model
   */
  interface planesFieldRefs {
    readonly id_plan: FieldRef<"planes", 'Int'>
    readonly nombre: FieldRef<"planes", 'String'>
    readonly precio: FieldRef<"planes", 'Decimal'>
    readonly duracion_dias: FieldRef<"planes", 'Int'>
    readonly descripcion: FieldRef<"planes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * planes findUnique
   */
  export type planesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * Filter, which planes to fetch.
     */
    where: planesWhereUniqueInput
  }

  /**
   * planes findUniqueOrThrow
   */
  export type planesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * Filter, which planes to fetch.
     */
    where: planesWhereUniqueInput
  }

  /**
   * planes findFirst
   */
  export type planesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * Filter, which planes to fetch.
     */
    where?: planesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of planes to fetch.
     */
    orderBy?: planesOrderByWithRelationInput | planesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for planes.
     */
    cursor?: planesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` planes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` planes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of planes.
     */
    distinct?: PlanesScalarFieldEnum | PlanesScalarFieldEnum[]
  }

  /**
   * planes findFirstOrThrow
   */
  export type planesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * Filter, which planes to fetch.
     */
    where?: planesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of planes to fetch.
     */
    orderBy?: planesOrderByWithRelationInput | planesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for planes.
     */
    cursor?: planesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` planes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` planes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of planes.
     */
    distinct?: PlanesScalarFieldEnum | PlanesScalarFieldEnum[]
  }

  /**
   * planes findMany
   */
  export type planesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * Filter, which planes to fetch.
     */
    where?: planesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of planes to fetch.
     */
    orderBy?: planesOrderByWithRelationInput | planesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing planes.
     */
    cursor?: planesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` planes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` planes.
     */
    skip?: number
    distinct?: PlanesScalarFieldEnum | PlanesScalarFieldEnum[]
  }

  /**
   * planes create
   */
  export type planesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * The data needed to create a planes.
     */
    data?: XOR<planesCreateInput, planesUncheckedCreateInput>
  }

  /**
   * planes createMany
   */
  export type planesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many planes.
     */
    data: planesCreateManyInput | planesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * planes update
   */
  export type planesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * The data needed to update a planes.
     */
    data: XOR<planesUpdateInput, planesUncheckedUpdateInput>
    /**
     * Choose, which planes to update.
     */
    where: planesWhereUniqueInput
  }

  /**
   * planes updateMany
   */
  export type planesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update planes.
     */
    data: XOR<planesUpdateManyMutationInput, planesUncheckedUpdateManyInput>
    /**
     * Filter which planes to update
     */
    where?: planesWhereInput
    /**
     * Limit how many planes to update.
     */
    limit?: number
  }

  /**
   * planes upsert
   */
  export type planesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * The filter to search for the planes to update in case it exists.
     */
    where: planesWhereUniqueInput
    /**
     * In case the planes found by the `where` argument doesn't exist, create a new planes with this data.
     */
    create: XOR<planesCreateInput, planesUncheckedCreateInput>
    /**
     * In case the planes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<planesUpdateInput, planesUncheckedUpdateInput>
  }

  /**
   * planes delete
   */
  export type planesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    /**
     * Filter which planes to delete.
     */
    where: planesWhereUniqueInput
  }

  /**
   * planes deleteMany
   */
  export type planesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which planes to delete
     */
    where?: planesWhereInput
    /**
     * Limit how many planes to delete.
     */
    limit?: number
  }

  /**
   * planes.suscripciones
   */
  export type planes$suscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    where?: suscripcionesWhereInput
    orderBy?: suscripcionesOrderByWithRelationInput | suscripcionesOrderByWithRelationInput[]
    cursor?: suscripcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuscripcionesScalarFieldEnum | SuscripcionesScalarFieldEnum[]
  }

  /**
   * planes without action
   */
  export type planesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
  }


  /**
   * Model productoras
   */

  export type AggregateProductoras = {
    _count: ProductorasCountAggregateOutputType | null
    _avg: ProductorasAvgAggregateOutputType | null
    _sum: ProductorasSumAggregateOutputType | null
    _min: ProductorasMinAggregateOutputType | null
    _max: ProductorasMaxAggregateOutputType | null
  }

  export type ProductorasAvgAggregateOutputType = {
    id_productora: number | null
  }

  export type ProductorasSumAggregateOutputType = {
    id_productora: number | null
  }

  export type ProductorasMinAggregateOutputType = {
    id_productora: number | null
    nombre_productora: string | null
    pais_origen: string | null
  }

  export type ProductorasMaxAggregateOutputType = {
    id_productora: number | null
    nombre_productora: string | null
    pais_origen: string | null
  }

  export type ProductorasCountAggregateOutputType = {
    id_productora: number
    nombre_productora: number
    pais_origen: number
    _all: number
  }


  export type ProductorasAvgAggregateInputType = {
    id_productora?: true
  }

  export type ProductorasSumAggregateInputType = {
    id_productora?: true
  }

  export type ProductorasMinAggregateInputType = {
    id_productora?: true
    nombre_productora?: true
    pais_origen?: true
  }

  export type ProductorasMaxAggregateInputType = {
    id_productora?: true
    nombre_productora?: true
    pais_origen?: true
  }

  export type ProductorasCountAggregateInputType = {
    id_productora?: true
    nombre_productora?: true
    pais_origen?: true
    _all?: true
  }

  export type ProductorasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productoras to aggregate.
     */
    where?: productorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoras to fetch.
     */
    orderBy?: productorasOrderByWithRelationInput | productorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productoras
    **/
    _count?: true | ProductorasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductorasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductorasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductorasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductorasMaxAggregateInputType
  }

  export type GetProductorasAggregateType<T extends ProductorasAggregateArgs> = {
        [P in keyof T & keyof AggregateProductoras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductoras[P]>
      : GetScalarType<T[P], AggregateProductoras[P]>
  }




  export type productorasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productorasWhereInput
    orderBy?: productorasOrderByWithAggregationInput | productorasOrderByWithAggregationInput[]
    by: ProductorasScalarFieldEnum[] | ProductorasScalarFieldEnum
    having?: productorasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductorasCountAggregateInputType | true
    _avg?: ProductorasAvgAggregateInputType
    _sum?: ProductorasSumAggregateInputType
    _min?: ProductorasMinAggregateInputType
    _max?: ProductorasMaxAggregateInputType
  }

  export type ProductorasGroupByOutputType = {
    id_productora: number
    nombre_productora: string
    pais_origen: string | null
    _count: ProductorasCountAggregateOutputType | null
    _avg: ProductorasAvgAggregateOutputType | null
    _sum: ProductorasSumAggregateOutputType | null
    _min: ProductorasMinAggregateOutputType | null
    _max: ProductorasMaxAggregateOutputType | null
  }

  type GetProductorasGroupByPayload<T extends productorasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductorasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductorasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductorasGroupByOutputType[P]>
            : GetScalarType<T[P], ProductorasGroupByOutputType[P]>
        }
      >
    >


  export type productorasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_productora?: boolean
    nombre_productora?: boolean
    pais_origen?: boolean
    peliculas?: boolean | productoras$peliculasArgs<ExtArgs>
    _count?: boolean | ProductorasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productoras"]>



  export type productorasSelectScalar = {
    id_productora?: boolean
    nombre_productora?: boolean
    pais_origen?: boolean
  }

  export type productorasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_productora" | "nombre_productora" | "pais_origen", ExtArgs["result"]["productoras"]>
  export type productorasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas?: boolean | productoras$peliculasArgs<ExtArgs>
    _count?: boolean | ProductorasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $productorasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productoras"
    objects: {
      peliculas: Prisma.$peliculasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_productora: number
      nombre_productora: string
      pais_origen: string | null
    }, ExtArgs["result"]["productoras"]>
    composites: {}
  }

  type productorasGetPayload<S extends boolean | null | undefined | productorasDefaultArgs> = $Result.GetResult<Prisma.$productorasPayload, S>

  type productorasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productorasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductorasCountAggregateInputType | true
    }

  export interface productorasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productoras'], meta: { name: 'productoras' } }
    /**
     * Find zero or one Productoras that matches the filter.
     * @param {productorasFindUniqueArgs} args - Arguments to find a Productoras
     * @example
     * // Get one Productoras
     * const productoras = await prisma.productoras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productorasFindUniqueArgs>(args: SelectSubset<T, productorasFindUniqueArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productoras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productorasFindUniqueOrThrowArgs} args - Arguments to find a Productoras
     * @example
     * // Get one Productoras
     * const productoras = await prisma.productoras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productorasFindUniqueOrThrowArgs>(args: SelectSubset<T, productorasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productoras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productorasFindFirstArgs} args - Arguments to find a Productoras
     * @example
     * // Get one Productoras
     * const productoras = await prisma.productoras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productorasFindFirstArgs>(args?: SelectSubset<T, productorasFindFirstArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productoras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productorasFindFirstOrThrowArgs} args - Arguments to find a Productoras
     * @example
     * // Get one Productoras
     * const productoras = await prisma.productoras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productorasFindFirstOrThrowArgs>(args?: SelectSubset<T, productorasFindFirstOrThrowArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productoras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productorasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productoras
     * const productoras = await prisma.productoras.findMany()
     * 
     * // Get first 10 Productoras
     * const productoras = await prisma.productoras.findMany({ take: 10 })
     * 
     * // Only select the `id_productora`
     * const productorasWithId_productoraOnly = await prisma.productoras.findMany({ select: { id_productora: true } })
     * 
     */
    findMany<T extends productorasFindManyArgs>(args?: SelectSubset<T, productorasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productoras.
     * @param {productorasCreateArgs} args - Arguments to create a Productoras.
     * @example
     * // Create one Productoras
     * const Productoras = await prisma.productoras.create({
     *   data: {
     *     // ... data to create a Productoras
     *   }
     * })
     * 
     */
    create<T extends productorasCreateArgs>(args: SelectSubset<T, productorasCreateArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productoras.
     * @param {productorasCreateManyArgs} args - Arguments to create many Productoras.
     * @example
     * // Create many Productoras
     * const productoras = await prisma.productoras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productorasCreateManyArgs>(args?: SelectSubset<T, productorasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Productoras.
     * @param {productorasDeleteArgs} args - Arguments to delete one Productoras.
     * @example
     * // Delete one Productoras
     * const Productoras = await prisma.productoras.delete({
     *   where: {
     *     // ... filter to delete one Productoras
     *   }
     * })
     * 
     */
    delete<T extends productorasDeleteArgs>(args: SelectSubset<T, productorasDeleteArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productoras.
     * @param {productorasUpdateArgs} args - Arguments to update one Productoras.
     * @example
     * // Update one Productoras
     * const productoras = await prisma.productoras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productorasUpdateArgs>(args: SelectSubset<T, productorasUpdateArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productoras.
     * @param {productorasDeleteManyArgs} args - Arguments to filter Productoras to delete.
     * @example
     * // Delete a few Productoras
     * const { count } = await prisma.productoras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productorasDeleteManyArgs>(args?: SelectSubset<T, productorasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productorasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productoras
     * const productoras = await prisma.productoras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productorasUpdateManyArgs>(args: SelectSubset<T, productorasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Productoras.
     * @param {productorasUpsertArgs} args - Arguments to update or create a Productoras.
     * @example
     * // Update or create a Productoras
     * const productoras = await prisma.productoras.upsert({
     *   create: {
     *     // ... data to create a Productoras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productoras we want to update
     *   }
     * })
     */
    upsert<T extends productorasUpsertArgs>(args: SelectSubset<T, productorasUpsertArgs<ExtArgs>>): Prisma__productorasClient<$Result.GetResult<Prisma.$productorasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productorasCountArgs} args - Arguments to filter Productoras to count.
     * @example
     * // Count the number of Productoras
     * const count = await prisma.productoras.count({
     *   where: {
     *     // ... the filter for the Productoras we want to count
     *   }
     * })
    **/
    count<T extends productorasCountArgs>(
      args?: Subset<T, productorasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductorasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductorasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductorasAggregateArgs>(args: Subset<T, ProductorasAggregateArgs>): Prisma.PrismaPromise<GetProductorasAggregateType<T>>

    /**
     * Group by Productoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productorasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productorasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productorasGroupByArgs['orderBy'] }
        : { orderBy?: productorasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productorasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductorasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productoras model
   */
  readonly fields: productorasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productoras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productorasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peliculas<T extends productoras$peliculasArgs<ExtArgs> = {}>(args?: Subset<T, productoras$peliculasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productoras model
   */
  interface productorasFieldRefs {
    readonly id_productora: FieldRef<"productoras", 'Int'>
    readonly nombre_productora: FieldRef<"productoras", 'String'>
    readonly pais_origen: FieldRef<"productoras", 'String'>
  }
    

  // Custom InputTypes
  /**
   * productoras findUnique
   */
  export type productorasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * Filter, which productoras to fetch.
     */
    where: productorasWhereUniqueInput
  }

  /**
   * productoras findUniqueOrThrow
   */
  export type productorasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * Filter, which productoras to fetch.
     */
    where: productorasWhereUniqueInput
  }

  /**
   * productoras findFirst
   */
  export type productorasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * Filter, which productoras to fetch.
     */
    where?: productorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoras to fetch.
     */
    orderBy?: productorasOrderByWithRelationInput | productorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productoras.
     */
    cursor?: productorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productoras.
     */
    distinct?: ProductorasScalarFieldEnum | ProductorasScalarFieldEnum[]
  }

  /**
   * productoras findFirstOrThrow
   */
  export type productorasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * Filter, which productoras to fetch.
     */
    where?: productorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoras to fetch.
     */
    orderBy?: productorasOrderByWithRelationInput | productorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productoras.
     */
    cursor?: productorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productoras.
     */
    distinct?: ProductorasScalarFieldEnum | ProductorasScalarFieldEnum[]
  }

  /**
   * productoras findMany
   */
  export type productorasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * Filter, which productoras to fetch.
     */
    where?: productorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoras to fetch.
     */
    orderBy?: productorasOrderByWithRelationInput | productorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productoras.
     */
    cursor?: productorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoras.
     */
    skip?: number
    distinct?: ProductorasScalarFieldEnum | ProductorasScalarFieldEnum[]
  }

  /**
   * productoras create
   */
  export type productorasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * The data needed to create a productoras.
     */
    data: XOR<productorasCreateInput, productorasUncheckedCreateInput>
  }

  /**
   * productoras createMany
   */
  export type productorasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productoras.
     */
    data: productorasCreateManyInput | productorasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productoras update
   */
  export type productorasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * The data needed to update a productoras.
     */
    data: XOR<productorasUpdateInput, productorasUncheckedUpdateInput>
    /**
     * Choose, which productoras to update.
     */
    where: productorasWhereUniqueInput
  }

  /**
   * productoras updateMany
   */
  export type productorasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productoras.
     */
    data: XOR<productorasUpdateManyMutationInput, productorasUncheckedUpdateManyInput>
    /**
     * Filter which productoras to update
     */
    where?: productorasWhereInput
    /**
     * Limit how many productoras to update.
     */
    limit?: number
  }

  /**
   * productoras upsert
   */
  export type productorasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * The filter to search for the productoras to update in case it exists.
     */
    where: productorasWhereUniqueInput
    /**
     * In case the productoras found by the `where` argument doesn't exist, create a new productoras with this data.
     */
    create: XOR<productorasCreateInput, productorasUncheckedCreateInput>
    /**
     * In case the productoras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productorasUpdateInput, productorasUncheckedUpdateInput>
  }

  /**
   * productoras delete
   */
  export type productorasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
    /**
     * Filter which productoras to delete.
     */
    where: productorasWhereUniqueInput
  }

  /**
   * productoras deleteMany
   */
  export type productorasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productoras to delete
     */
    where?: productorasWhereInput
    /**
     * Limit how many productoras to delete.
     */
    limit?: number
  }

  /**
   * productoras.peliculas
   */
  export type productoras$peliculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the peliculas
     */
    select?: peliculasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the peliculas
     */
    omit?: peliculasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: peliculasInclude<ExtArgs> | null
    where?: peliculasWhereInput
    orderBy?: peliculasOrderByWithRelationInput | peliculasOrderByWithRelationInput[]
    cursor?: peliculasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PeliculasScalarFieldEnum | PeliculasScalarFieldEnum[]
  }

  /**
   * productoras without action
   */
  export type productorasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoras
     */
    select?: productorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoras
     */
    omit?: productorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productorasInclude<ExtArgs> | null
  }


  /**
   * Model promociones
   */

  export type AggregatePromociones = {
    _count: PromocionesCountAggregateOutputType | null
    _avg: PromocionesAvgAggregateOutputType | null
    _sum: PromocionesSumAggregateOutputType | null
    _min: PromocionesMinAggregateOutputType | null
    _max: PromocionesMaxAggregateOutputType | null
  }

  export type PromocionesAvgAggregateOutputType = {
    id_promocion: number | null
    descuento: Decimal | null
  }

  export type PromocionesSumAggregateOutputType = {
    id_promocion: number | null
    descuento: Decimal | null
  }

  export type PromocionesMinAggregateOutputType = {
    id_promocion: number | null
    titulo: string | null
    descripcion: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    descuento: Decimal | null
  }

  export type PromocionesMaxAggregateOutputType = {
    id_promocion: number | null
    titulo: string | null
    descripcion: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    descuento: Decimal | null
  }

  export type PromocionesCountAggregateOutputType = {
    id_promocion: number
    titulo: number
    descripcion: number
    fecha_inicio: number
    fecha_fin: number
    descuento: number
    _all: number
  }


  export type PromocionesAvgAggregateInputType = {
    id_promocion?: true
    descuento?: true
  }

  export type PromocionesSumAggregateInputType = {
    id_promocion?: true
    descuento?: true
  }

  export type PromocionesMinAggregateInputType = {
    id_promocion?: true
    titulo?: true
    descripcion?: true
    fecha_inicio?: true
    fecha_fin?: true
    descuento?: true
  }

  export type PromocionesMaxAggregateInputType = {
    id_promocion?: true
    titulo?: true
    descripcion?: true
    fecha_inicio?: true
    fecha_fin?: true
    descuento?: true
  }

  export type PromocionesCountAggregateInputType = {
    id_promocion?: true
    titulo?: true
    descripcion?: true
    fecha_inicio?: true
    fecha_fin?: true
    descuento?: true
    _all?: true
  }

  export type PromocionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promociones to aggregate.
     */
    where?: promocionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promociones to fetch.
     */
    orderBy?: promocionesOrderByWithRelationInput | promocionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: promocionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promociones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promociones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned promociones
    **/
    _count?: true | PromocionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromocionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromocionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromocionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromocionesMaxAggregateInputType
  }

  export type GetPromocionesAggregateType<T extends PromocionesAggregateArgs> = {
        [P in keyof T & keyof AggregatePromociones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromociones[P]>
      : GetScalarType<T[P], AggregatePromociones[P]>
  }




  export type promocionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promocionesWhereInput
    orderBy?: promocionesOrderByWithAggregationInput | promocionesOrderByWithAggregationInput[]
    by: PromocionesScalarFieldEnum[] | PromocionesScalarFieldEnum
    having?: promocionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromocionesCountAggregateInputType | true
    _avg?: PromocionesAvgAggregateInputType
    _sum?: PromocionesSumAggregateInputType
    _min?: PromocionesMinAggregateInputType
    _max?: PromocionesMaxAggregateInputType
  }

  export type PromocionesGroupByOutputType = {
    id_promocion: number
    titulo: string
    descripcion: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    descuento: Decimal | null
    _count: PromocionesCountAggregateOutputType | null
    _avg: PromocionesAvgAggregateOutputType | null
    _sum: PromocionesSumAggregateOutputType | null
    _min: PromocionesMinAggregateOutputType | null
    _max: PromocionesMaxAggregateOutputType | null
  }

  type GetPromocionesGroupByPayload<T extends promocionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromocionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromocionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromocionesGroupByOutputType[P]>
            : GetScalarType<T[P], PromocionesGroupByOutputType[P]>
        }
      >
    >


  export type promocionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_promocion?: boolean
    titulo?: boolean
    descripcion?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    descuento?: boolean
  }, ExtArgs["result"]["promociones"]>



  export type promocionesSelectScalar = {
    id_promocion?: boolean
    titulo?: boolean
    descripcion?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    descuento?: boolean
  }

  export type promocionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_promocion" | "titulo" | "descripcion" | "fecha_inicio" | "fecha_fin" | "descuento", ExtArgs["result"]["promociones"]>

  export type $promocionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "promociones"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_promocion: number
      titulo: string
      descripcion: string | null
      fecha_inicio: Date | null
      fecha_fin: Date | null
      descuento: Prisma.Decimal | null
    }, ExtArgs["result"]["promociones"]>
    composites: {}
  }

  type promocionesGetPayload<S extends boolean | null | undefined | promocionesDefaultArgs> = $Result.GetResult<Prisma.$promocionesPayload, S>

  type promocionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<promocionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromocionesCountAggregateInputType | true
    }

  export interface promocionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['promociones'], meta: { name: 'promociones' } }
    /**
     * Find zero or one Promociones that matches the filter.
     * @param {promocionesFindUniqueArgs} args - Arguments to find a Promociones
     * @example
     * // Get one Promociones
     * const promociones = await prisma.promociones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends promocionesFindUniqueArgs>(args: SelectSubset<T, promocionesFindUniqueArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promociones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {promocionesFindUniqueOrThrowArgs} args - Arguments to find a Promociones
     * @example
     * // Get one Promociones
     * const promociones = await prisma.promociones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends promocionesFindUniqueOrThrowArgs>(args: SelectSubset<T, promocionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promociones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionesFindFirstArgs} args - Arguments to find a Promociones
     * @example
     * // Get one Promociones
     * const promociones = await prisma.promociones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends promocionesFindFirstArgs>(args?: SelectSubset<T, promocionesFindFirstArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promociones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionesFindFirstOrThrowArgs} args - Arguments to find a Promociones
     * @example
     * // Get one Promociones
     * const promociones = await prisma.promociones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends promocionesFindFirstOrThrowArgs>(args?: SelectSubset<T, promocionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promociones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promociones
     * const promociones = await prisma.promociones.findMany()
     * 
     * // Get first 10 Promociones
     * const promociones = await prisma.promociones.findMany({ take: 10 })
     * 
     * // Only select the `id_promocion`
     * const promocionesWithId_promocionOnly = await prisma.promociones.findMany({ select: { id_promocion: true } })
     * 
     */
    findMany<T extends promocionesFindManyArgs>(args?: SelectSubset<T, promocionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promociones.
     * @param {promocionesCreateArgs} args - Arguments to create a Promociones.
     * @example
     * // Create one Promociones
     * const Promociones = await prisma.promociones.create({
     *   data: {
     *     // ... data to create a Promociones
     *   }
     * })
     * 
     */
    create<T extends promocionesCreateArgs>(args: SelectSubset<T, promocionesCreateArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promociones.
     * @param {promocionesCreateManyArgs} args - Arguments to create many Promociones.
     * @example
     * // Create many Promociones
     * const promociones = await prisma.promociones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends promocionesCreateManyArgs>(args?: SelectSubset<T, promocionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Promociones.
     * @param {promocionesDeleteArgs} args - Arguments to delete one Promociones.
     * @example
     * // Delete one Promociones
     * const Promociones = await prisma.promociones.delete({
     *   where: {
     *     // ... filter to delete one Promociones
     *   }
     * })
     * 
     */
    delete<T extends promocionesDeleteArgs>(args: SelectSubset<T, promocionesDeleteArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promociones.
     * @param {promocionesUpdateArgs} args - Arguments to update one Promociones.
     * @example
     * // Update one Promociones
     * const promociones = await prisma.promociones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends promocionesUpdateArgs>(args: SelectSubset<T, promocionesUpdateArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promociones.
     * @param {promocionesDeleteManyArgs} args - Arguments to filter Promociones to delete.
     * @example
     * // Delete a few Promociones
     * const { count } = await prisma.promociones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends promocionesDeleteManyArgs>(args?: SelectSubset<T, promocionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promociones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promociones
     * const promociones = await prisma.promociones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends promocionesUpdateManyArgs>(args: SelectSubset<T, promocionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promociones.
     * @param {promocionesUpsertArgs} args - Arguments to update or create a Promociones.
     * @example
     * // Update or create a Promociones
     * const promociones = await prisma.promociones.upsert({
     *   create: {
     *     // ... data to create a Promociones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promociones we want to update
     *   }
     * })
     */
    upsert<T extends promocionesUpsertArgs>(args: SelectSubset<T, promocionesUpsertArgs<ExtArgs>>): Prisma__promocionesClient<$Result.GetResult<Prisma.$promocionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promociones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionesCountArgs} args - Arguments to filter Promociones to count.
     * @example
     * // Count the number of Promociones
     * const count = await prisma.promociones.count({
     *   where: {
     *     // ... the filter for the Promociones we want to count
     *   }
     * })
    **/
    count<T extends promocionesCountArgs>(
      args?: Subset<T, promocionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromocionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promociones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromocionesAggregateArgs>(args: Subset<T, PromocionesAggregateArgs>): Prisma.PrismaPromise<GetPromocionesAggregateType<T>>

    /**
     * Group by Promociones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends promocionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: promocionesGroupByArgs['orderBy'] }
        : { orderBy?: promocionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, promocionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromocionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the promociones model
   */
  readonly fields: promocionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for promociones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__promocionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the promociones model
   */
  interface promocionesFieldRefs {
    readonly id_promocion: FieldRef<"promociones", 'Int'>
    readonly titulo: FieldRef<"promociones", 'String'>
    readonly descripcion: FieldRef<"promociones", 'String'>
    readonly fecha_inicio: FieldRef<"promociones", 'DateTime'>
    readonly fecha_fin: FieldRef<"promociones", 'DateTime'>
    readonly descuento: FieldRef<"promociones", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * promociones findUnique
   */
  export type promocionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * Filter, which promociones to fetch.
     */
    where: promocionesWhereUniqueInput
  }

  /**
   * promociones findUniqueOrThrow
   */
  export type promocionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * Filter, which promociones to fetch.
     */
    where: promocionesWhereUniqueInput
  }

  /**
   * promociones findFirst
   */
  export type promocionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * Filter, which promociones to fetch.
     */
    where?: promocionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promociones to fetch.
     */
    orderBy?: promocionesOrderByWithRelationInput | promocionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promociones.
     */
    cursor?: promocionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promociones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promociones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promociones.
     */
    distinct?: PromocionesScalarFieldEnum | PromocionesScalarFieldEnum[]
  }

  /**
   * promociones findFirstOrThrow
   */
  export type promocionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * Filter, which promociones to fetch.
     */
    where?: promocionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promociones to fetch.
     */
    orderBy?: promocionesOrderByWithRelationInput | promocionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promociones.
     */
    cursor?: promocionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promociones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promociones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promociones.
     */
    distinct?: PromocionesScalarFieldEnum | PromocionesScalarFieldEnum[]
  }

  /**
   * promociones findMany
   */
  export type promocionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * Filter, which promociones to fetch.
     */
    where?: promocionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promociones to fetch.
     */
    orderBy?: promocionesOrderByWithRelationInput | promocionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing promociones.
     */
    cursor?: promocionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promociones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promociones.
     */
    skip?: number
    distinct?: PromocionesScalarFieldEnum | PromocionesScalarFieldEnum[]
  }

  /**
   * promociones create
   */
  export type promocionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * The data needed to create a promociones.
     */
    data: XOR<promocionesCreateInput, promocionesUncheckedCreateInput>
  }

  /**
   * promociones createMany
   */
  export type promocionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many promociones.
     */
    data: promocionesCreateManyInput | promocionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promociones update
   */
  export type promocionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * The data needed to update a promociones.
     */
    data: XOR<promocionesUpdateInput, promocionesUncheckedUpdateInput>
    /**
     * Choose, which promociones to update.
     */
    where: promocionesWhereUniqueInput
  }

  /**
   * promociones updateMany
   */
  export type promocionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update promociones.
     */
    data: XOR<promocionesUpdateManyMutationInput, promocionesUncheckedUpdateManyInput>
    /**
     * Filter which promociones to update
     */
    where?: promocionesWhereInput
    /**
     * Limit how many promociones to update.
     */
    limit?: number
  }

  /**
   * promociones upsert
   */
  export type promocionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * The filter to search for the promociones to update in case it exists.
     */
    where: promocionesWhereUniqueInput
    /**
     * In case the promociones found by the `where` argument doesn't exist, create a new promociones with this data.
     */
    create: XOR<promocionesCreateInput, promocionesUncheckedCreateInput>
    /**
     * In case the promociones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<promocionesUpdateInput, promocionesUncheckedUpdateInput>
  }

  /**
   * promociones delete
   */
  export type promocionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
    /**
     * Filter which promociones to delete.
     */
    where: promocionesWhereUniqueInput
  }

  /**
   * promociones deleteMany
   */
  export type promocionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promociones to delete
     */
    where?: promocionesWhereInput
    /**
     * Limit how many promociones to delete.
     */
    limit?: number
  }

  /**
   * promociones without action
   */
  export type promocionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promociones
     */
    select?: promocionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promociones
     */
    omit?: promocionesOmit<ExtArgs> | null
  }


  /**
   * Model reparto
   */

  export type AggregateReparto = {
    _count: RepartoCountAggregateOutputType | null
    _avg: RepartoAvgAggregateOutputType | null
    _sum: RepartoSumAggregateOutputType | null
    _min: RepartoMinAggregateOutputType | null
    _max: RepartoMaxAggregateOutputType | null
  }

  export type RepartoAvgAggregateOutputType = {
    id_reparto: number | null
    id_pelicula: number | null
    id_actor: number | null
  }

  export type RepartoSumAggregateOutputType = {
    id_reparto: number | null
    id_pelicula: number | null
    id_actor: number | null
  }

  export type RepartoMinAggregateOutputType = {
    id_reparto: number | null
    id_pelicula: number | null
    id_actor: number | null
    rol: string | null
  }

  export type RepartoMaxAggregateOutputType = {
    id_reparto: number | null
    id_pelicula: number | null
    id_actor: number | null
    rol: string | null
  }

  export type RepartoCountAggregateOutputType = {
    id_reparto: number
    id_pelicula: number
    id_actor: number
    rol: number
    _all: number
  }


  export type RepartoAvgAggregateInputType = {
    id_reparto?: true
    id_pelicula?: true
    id_actor?: true
  }

  export type RepartoSumAggregateInputType = {
    id_reparto?: true
    id_pelicula?: true
    id_actor?: true
  }

  export type RepartoMinAggregateInputType = {
    id_reparto?: true
    id_pelicula?: true
    id_actor?: true
    rol?: true
  }

  export type RepartoMaxAggregateInputType = {
    id_reparto?: true
    id_pelicula?: true
    id_actor?: true
    rol?: true
  }

  export type RepartoCountAggregateInputType = {
    id_reparto?: true
    id_pelicula?: true
    id_actor?: true
    rol?: true
    _all?: true
  }

  export type RepartoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reparto to aggregate.
     */
    where?: repartoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of repartos to fetch.
     */
    orderBy?: repartoOrderByWithRelationInput | repartoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: repartoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` repartos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` repartos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned repartos
    **/
    _count?: true | RepartoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RepartoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RepartoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RepartoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RepartoMaxAggregateInputType
  }

  export type GetRepartoAggregateType<T extends RepartoAggregateArgs> = {
        [P in keyof T & keyof AggregateReparto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReparto[P]>
      : GetScalarType<T[P], AggregateReparto[P]>
  }




  export type repartoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: repartoWhereInput
    orderBy?: repartoOrderByWithAggregationInput | repartoOrderByWithAggregationInput[]
    by: RepartoScalarFieldEnum[] | RepartoScalarFieldEnum
    having?: repartoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RepartoCountAggregateInputType | true
    _avg?: RepartoAvgAggregateInputType
    _sum?: RepartoSumAggregateInputType
    _min?: RepartoMinAggregateInputType
    _max?: RepartoMaxAggregateInputType
  }

  export type RepartoGroupByOutputType = {
    id_reparto: number
    id_pelicula: number
    id_actor: number
    rol: string | null
    _count: RepartoCountAggregateOutputType | null
    _avg: RepartoAvgAggregateOutputType | null
    _sum: RepartoSumAggregateOutputType | null
    _min: RepartoMinAggregateOutputType | null
    _max: RepartoMaxAggregateOutputType | null
  }

  type GetRepartoGroupByPayload<T extends repartoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RepartoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RepartoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RepartoGroupByOutputType[P]>
            : GetScalarType<T[P], RepartoGroupByOutputType[P]>
        }
      >
    >


  export type repartoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_reparto?: boolean
    id_pelicula?: boolean
    id_actor?: boolean
    rol?: boolean
    actores?: boolean | actoresDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reparto"]>



  export type repartoSelectScalar = {
    id_reparto?: boolean
    id_pelicula?: boolean
    id_actor?: boolean
    rol?: boolean
  }

  export type repartoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_reparto" | "id_pelicula" | "id_actor" | "rol", ExtArgs["result"]["reparto"]>
  export type repartoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actores?: boolean | actoresDefaultArgs<ExtArgs>
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
  }

  export type $repartoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reparto"
    objects: {
      actores: Prisma.$actoresPayload<ExtArgs>
      peliculas: Prisma.$peliculasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_reparto: number
      id_pelicula: number
      id_actor: number
      rol: string | null
    }, ExtArgs["result"]["reparto"]>
    composites: {}
  }

  type repartoGetPayload<S extends boolean | null | undefined | repartoDefaultArgs> = $Result.GetResult<Prisma.$repartoPayload, S>

  type repartoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<repartoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RepartoCountAggregateInputType | true
    }

  export interface repartoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reparto'], meta: { name: 'reparto' } }
    /**
     * Find zero or one Reparto that matches the filter.
     * @param {repartoFindUniqueArgs} args - Arguments to find a Reparto
     * @example
     * // Get one Reparto
     * const reparto = await prisma.reparto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends repartoFindUniqueArgs>(args: SelectSubset<T, repartoFindUniqueArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reparto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {repartoFindUniqueOrThrowArgs} args - Arguments to find a Reparto
     * @example
     * // Get one Reparto
     * const reparto = await prisma.reparto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends repartoFindUniqueOrThrowArgs>(args: SelectSubset<T, repartoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reparto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repartoFindFirstArgs} args - Arguments to find a Reparto
     * @example
     * // Get one Reparto
     * const reparto = await prisma.reparto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends repartoFindFirstArgs>(args?: SelectSubset<T, repartoFindFirstArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reparto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repartoFindFirstOrThrowArgs} args - Arguments to find a Reparto
     * @example
     * // Get one Reparto
     * const reparto = await prisma.reparto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends repartoFindFirstOrThrowArgs>(args?: SelectSubset<T, repartoFindFirstOrThrowArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Repartos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repartoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Repartos
     * const repartos = await prisma.reparto.findMany()
     * 
     * // Get first 10 Repartos
     * const repartos = await prisma.reparto.findMany({ take: 10 })
     * 
     * // Only select the `id_reparto`
     * const repartoWithId_repartoOnly = await prisma.reparto.findMany({ select: { id_reparto: true } })
     * 
     */
    findMany<T extends repartoFindManyArgs>(args?: SelectSubset<T, repartoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reparto.
     * @param {repartoCreateArgs} args - Arguments to create a Reparto.
     * @example
     * // Create one Reparto
     * const Reparto = await prisma.reparto.create({
     *   data: {
     *     // ... data to create a Reparto
     *   }
     * })
     * 
     */
    create<T extends repartoCreateArgs>(args: SelectSubset<T, repartoCreateArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Repartos.
     * @param {repartoCreateManyArgs} args - Arguments to create many Repartos.
     * @example
     * // Create many Repartos
     * const reparto = await prisma.reparto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends repartoCreateManyArgs>(args?: SelectSubset<T, repartoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reparto.
     * @param {repartoDeleteArgs} args - Arguments to delete one Reparto.
     * @example
     * // Delete one Reparto
     * const Reparto = await prisma.reparto.delete({
     *   where: {
     *     // ... filter to delete one Reparto
     *   }
     * })
     * 
     */
    delete<T extends repartoDeleteArgs>(args: SelectSubset<T, repartoDeleteArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reparto.
     * @param {repartoUpdateArgs} args - Arguments to update one Reparto.
     * @example
     * // Update one Reparto
     * const reparto = await prisma.reparto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends repartoUpdateArgs>(args: SelectSubset<T, repartoUpdateArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Repartos.
     * @param {repartoDeleteManyArgs} args - Arguments to filter Repartos to delete.
     * @example
     * // Delete a few Repartos
     * const { count } = await prisma.reparto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends repartoDeleteManyArgs>(args?: SelectSubset<T, repartoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Repartos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repartoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Repartos
     * const reparto = await prisma.reparto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends repartoUpdateManyArgs>(args: SelectSubset<T, repartoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reparto.
     * @param {repartoUpsertArgs} args - Arguments to update or create a Reparto.
     * @example
     * // Update or create a Reparto
     * const reparto = await prisma.reparto.upsert({
     *   create: {
     *     // ... data to create a Reparto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reparto we want to update
     *   }
     * })
     */
    upsert<T extends repartoUpsertArgs>(args: SelectSubset<T, repartoUpsertArgs<ExtArgs>>): Prisma__repartoClient<$Result.GetResult<Prisma.$repartoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Repartos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repartoCountArgs} args - Arguments to filter Repartos to count.
     * @example
     * // Count the number of Repartos
     * const count = await prisma.reparto.count({
     *   where: {
     *     // ... the filter for the Repartos we want to count
     *   }
     * })
    **/
    count<T extends repartoCountArgs>(
      args?: Subset<T, repartoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RepartoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reparto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RepartoAggregateArgs>(args: Subset<T, RepartoAggregateArgs>): Prisma.PrismaPromise<GetRepartoAggregateType<T>>

    /**
     * Group by Reparto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {repartoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends repartoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: repartoGroupByArgs['orderBy'] }
        : { orderBy?: repartoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, repartoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRepartoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reparto model
   */
  readonly fields: repartoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reparto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__repartoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actores<T extends actoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, actoresDefaultArgs<ExtArgs>>): Prisma__actoresClient<$Result.GetResult<Prisma.$actoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    peliculas<T extends peliculasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, peliculasDefaultArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reparto model
   */
  interface repartoFieldRefs {
    readonly id_reparto: FieldRef<"reparto", 'Int'>
    readonly id_pelicula: FieldRef<"reparto", 'Int'>
    readonly id_actor: FieldRef<"reparto", 'Int'>
    readonly rol: FieldRef<"reparto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * reparto findUnique
   */
  export type repartoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * Filter, which reparto to fetch.
     */
    where: repartoWhereUniqueInput
  }

  /**
   * reparto findUniqueOrThrow
   */
  export type repartoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * Filter, which reparto to fetch.
     */
    where: repartoWhereUniqueInput
  }

  /**
   * reparto findFirst
   */
  export type repartoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * Filter, which reparto to fetch.
     */
    where?: repartoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of repartos to fetch.
     */
    orderBy?: repartoOrderByWithRelationInput | repartoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for repartos.
     */
    cursor?: repartoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` repartos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` repartos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of repartos.
     */
    distinct?: RepartoScalarFieldEnum | RepartoScalarFieldEnum[]
  }

  /**
   * reparto findFirstOrThrow
   */
  export type repartoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * Filter, which reparto to fetch.
     */
    where?: repartoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of repartos to fetch.
     */
    orderBy?: repartoOrderByWithRelationInput | repartoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for repartos.
     */
    cursor?: repartoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` repartos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` repartos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of repartos.
     */
    distinct?: RepartoScalarFieldEnum | RepartoScalarFieldEnum[]
  }

  /**
   * reparto findMany
   */
  export type repartoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * Filter, which repartos to fetch.
     */
    where?: repartoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of repartos to fetch.
     */
    orderBy?: repartoOrderByWithRelationInput | repartoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing repartos.
     */
    cursor?: repartoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` repartos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` repartos.
     */
    skip?: number
    distinct?: RepartoScalarFieldEnum | RepartoScalarFieldEnum[]
  }

  /**
   * reparto create
   */
  export type repartoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * The data needed to create a reparto.
     */
    data: XOR<repartoCreateInput, repartoUncheckedCreateInput>
  }

  /**
   * reparto createMany
   */
  export type repartoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many repartos.
     */
    data: repartoCreateManyInput | repartoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reparto update
   */
  export type repartoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * The data needed to update a reparto.
     */
    data: XOR<repartoUpdateInput, repartoUncheckedUpdateInput>
    /**
     * Choose, which reparto to update.
     */
    where: repartoWhereUniqueInput
  }

  /**
   * reparto updateMany
   */
  export type repartoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update repartos.
     */
    data: XOR<repartoUpdateManyMutationInput, repartoUncheckedUpdateManyInput>
    /**
     * Filter which repartos to update
     */
    where?: repartoWhereInput
    /**
     * Limit how many repartos to update.
     */
    limit?: number
  }

  /**
   * reparto upsert
   */
  export type repartoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * The filter to search for the reparto to update in case it exists.
     */
    where: repartoWhereUniqueInput
    /**
     * In case the reparto found by the `where` argument doesn't exist, create a new reparto with this data.
     */
    create: XOR<repartoCreateInput, repartoUncheckedCreateInput>
    /**
     * In case the reparto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<repartoUpdateInput, repartoUncheckedUpdateInput>
  }

  /**
   * reparto delete
   */
  export type repartoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
    /**
     * Filter which reparto to delete.
     */
    where: repartoWhereUniqueInput
  }

  /**
   * reparto deleteMany
   */
  export type repartoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which repartos to delete
     */
    where?: repartoWhereInput
    /**
     * Limit how many repartos to delete.
     */
    limit?: number
  }

  /**
   * reparto without action
   */
  export type repartoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reparto
     */
    select?: repartoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reparto
     */
    omit?: repartoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: repartoInclude<ExtArgs> | null
  }


  /**
   * Model reportes_usuarios
   */

  export type AggregateReportes_usuarios = {
    _count: Reportes_usuariosCountAggregateOutputType | null
    _avg: Reportes_usuariosAvgAggregateOutputType | null
    _sum: Reportes_usuariosSumAggregateOutputType | null
    _min: Reportes_usuariosMinAggregateOutputType | null
    _max: Reportes_usuariosMaxAggregateOutputType | null
  }

  export type Reportes_usuariosAvgAggregateOutputType = {
    id_reporte: number | null
    id_usuario: number | null
  }

  export type Reportes_usuariosSumAggregateOutputType = {
    id_reporte: number | null
    id_usuario: number | null
  }

  export type Reportes_usuariosMinAggregateOutputType = {
    id_reporte: number | null
    id_usuario: number | null
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte | null
    descripcion: string | null
    fecha_reporte: Date | null
    estado: $Enums.reportes_usuarios_estado | null
  }

  export type Reportes_usuariosMaxAggregateOutputType = {
    id_reporte: number | null
    id_usuario: number | null
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte | null
    descripcion: string | null
    fecha_reporte: Date | null
    estado: $Enums.reportes_usuarios_estado | null
  }

  export type Reportes_usuariosCountAggregateOutputType = {
    id_reporte: number
    id_usuario: number
    tipo_reporte: number
    descripcion: number
    fecha_reporte: number
    estado: number
    _all: number
  }


  export type Reportes_usuariosAvgAggregateInputType = {
    id_reporte?: true
    id_usuario?: true
  }

  export type Reportes_usuariosSumAggregateInputType = {
    id_reporte?: true
    id_usuario?: true
  }

  export type Reportes_usuariosMinAggregateInputType = {
    id_reporte?: true
    id_usuario?: true
    tipo_reporte?: true
    descripcion?: true
    fecha_reporte?: true
    estado?: true
  }

  export type Reportes_usuariosMaxAggregateInputType = {
    id_reporte?: true
    id_usuario?: true
    tipo_reporte?: true
    descripcion?: true
    fecha_reporte?: true
    estado?: true
  }

  export type Reportes_usuariosCountAggregateInputType = {
    id_reporte?: true
    id_usuario?: true
    tipo_reporte?: true
    descripcion?: true
    fecha_reporte?: true
    estado?: true
    _all?: true
  }

  export type Reportes_usuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportes_usuarios to aggregate.
     */
    where?: reportes_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes_usuarios to fetch.
     */
    orderBy?: reportes_usuariosOrderByWithRelationInput | reportes_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportes_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reportes_usuarios
    **/
    _count?: true | Reportes_usuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Reportes_usuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Reportes_usuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Reportes_usuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Reportes_usuariosMaxAggregateInputType
  }

  export type GetReportes_usuariosAggregateType<T extends Reportes_usuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateReportes_usuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportes_usuarios[P]>
      : GetScalarType<T[P], AggregateReportes_usuarios[P]>
  }




  export type reportes_usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportes_usuariosWhereInput
    orderBy?: reportes_usuariosOrderByWithAggregationInput | reportes_usuariosOrderByWithAggregationInput[]
    by: Reportes_usuariosScalarFieldEnum[] | Reportes_usuariosScalarFieldEnum
    having?: reportes_usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Reportes_usuariosCountAggregateInputType | true
    _avg?: Reportes_usuariosAvgAggregateInputType
    _sum?: Reportes_usuariosSumAggregateInputType
    _min?: Reportes_usuariosMinAggregateInputType
    _max?: Reportes_usuariosMaxAggregateInputType
  }

  export type Reportes_usuariosGroupByOutputType = {
    id_reporte: number
    id_usuario: number
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion: string | null
    fecha_reporte: Date | null
    estado: $Enums.reportes_usuarios_estado | null
    _count: Reportes_usuariosCountAggregateOutputType | null
    _avg: Reportes_usuariosAvgAggregateOutputType | null
    _sum: Reportes_usuariosSumAggregateOutputType | null
    _min: Reportes_usuariosMinAggregateOutputType | null
    _max: Reportes_usuariosMaxAggregateOutputType | null
  }

  type GetReportes_usuariosGroupByPayload<T extends reportes_usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Reportes_usuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Reportes_usuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Reportes_usuariosGroupByOutputType[P]>
            : GetScalarType<T[P], Reportes_usuariosGroupByOutputType[P]>
        }
      >
    >


  export type reportes_usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_reporte?: boolean
    id_usuario?: boolean
    tipo_reporte?: boolean
    descripcion?: boolean
    fecha_reporte?: boolean
    estado?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportes_usuarios"]>



  export type reportes_usuariosSelectScalar = {
    id_reporte?: boolean
    id_usuario?: boolean
    tipo_reporte?: boolean
    descripcion?: boolean
    fecha_reporte?: boolean
    estado?: boolean
  }

  export type reportes_usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_reporte" | "id_usuario" | "tipo_reporte" | "descripcion" | "fecha_reporte" | "estado", ExtArgs["result"]["reportes_usuarios"]>
  export type reportes_usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $reportes_usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reportes_usuarios"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_reporte: number
      id_usuario: number
      tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
      descripcion: string | null
      fecha_reporte: Date | null
      estado: $Enums.reportes_usuarios_estado | null
    }, ExtArgs["result"]["reportes_usuarios"]>
    composites: {}
  }

  type reportes_usuariosGetPayload<S extends boolean | null | undefined | reportes_usuariosDefaultArgs> = $Result.GetResult<Prisma.$reportes_usuariosPayload, S>

  type reportes_usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportes_usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Reportes_usuariosCountAggregateInputType | true
    }

  export interface reportes_usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reportes_usuarios'], meta: { name: 'reportes_usuarios' } }
    /**
     * Find zero or one Reportes_usuarios that matches the filter.
     * @param {reportes_usuariosFindUniqueArgs} args - Arguments to find a Reportes_usuarios
     * @example
     * // Get one Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportes_usuariosFindUniqueArgs>(args: SelectSubset<T, reportes_usuariosFindUniqueArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reportes_usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportes_usuariosFindUniqueOrThrowArgs} args - Arguments to find a Reportes_usuarios
     * @example
     * // Get one Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportes_usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, reportes_usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reportes_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportes_usuariosFindFirstArgs} args - Arguments to find a Reportes_usuarios
     * @example
     * // Get one Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportes_usuariosFindFirstArgs>(args?: SelectSubset<T, reportes_usuariosFindFirstArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reportes_usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportes_usuariosFindFirstOrThrowArgs} args - Arguments to find a Reportes_usuarios
     * @example
     * // Get one Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportes_usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, reportes_usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reportes_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportes_usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.findMany()
     * 
     * // Get first 10 Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id_reporte`
     * const reportes_usuariosWithId_reporteOnly = await prisma.reportes_usuarios.findMany({ select: { id_reporte: true } })
     * 
     */
    findMany<T extends reportes_usuariosFindManyArgs>(args?: SelectSubset<T, reportes_usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reportes_usuarios.
     * @param {reportes_usuariosCreateArgs} args - Arguments to create a Reportes_usuarios.
     * @example
     * // Create one Reportes_usuarios
     * const Reportes_usuarios = await prisma.reportes_usuarios.create({
     *   data: {
     *     // ... data to create a Reportes_usuarios
     *   }
     * })
     * 
     */
    create<T extends reportes_usuariosCreateArgs>(args: SelectSubset<T, reportes_usuariosCreateArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reportes_usuarios.
     * @param {reportes_usuariosCreateManyArgs} args - Arguments to create many Reportes_usuarios.
     * @example
     * // Create many Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportes_usuariosCreateManyArgs>(args?: SelectSubset<T, reportes_usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reportes_usuarios.
     * @param {reportes_usuariosDeleteArgs} args - Arguments to delete one Reportes_usuarios.
     * @example
     * // Delete one Reportes_usuarios
     * const Reportes_usuarios = await prisma.reportes_usuarios.delete({
     *   where: {
     *     // ... filter to delete one Reportes_usuarios
     *   }
     * })
     * 
     */
    delete<T extends reportes_usuariosDeleteArgs>(args: SelectSubset<T, reportes_usuariosDeleteArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reportes_usuarios.
     * @param {reportes_usuariosUpdateArgs} args - Arguments to update one Reportes_usuarios.
     * @example
     * // Update one Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportes_usuariosUpdateArgs>(args: SelectSubset<T, reportes_usuariosUpdateArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reportes_usuarios.
     * @param {reportes_usuariosDeleteManyArgs} args - Arguments to filter Reportes_usuarios to delete.
     * @example
     * // Delete a few Reportes_usuarios
     * const { count } = await prisma.reportes_usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportes_usuariosDeleteManyArgs>(args?: SelectSubset<T, reportes_usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reportes_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportes_usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportes_usuariosUpdateManyArgs>(args: SelectSubset<T, reportes_usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reportes_usuarios.
     * @param {reportes_usuariosUpsertArgs} args - Arguments to update or create a Reportes_usuarios.
     * @example
     * // Update or create a Reportes_usuarios
     * const reportes_usuarios = await prisma.reportes_usuarios.upsert({
     *   create: {
     *     // ... data to create a Reportes_usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reportes_usuarios we want to update
     *   }
     * })
     */
    upsert<T extends reportes_usuariosUpsertArgs>(args: SelectSubset<T, reportes_usuariosUpsertArgs<ExtArgs>>): Prisma__reportes_usuariosClient<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reportes_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportes_usuariosCountArgs} args - Arguments to filter Reportes_usuarios to count.
     * @example
     * // Count the number of Reportes_usuarios
     * const count = await prisma.reportes_usuarios.count({
     *   where: {
     *     // ... the filter for the Reportes_usuarios we want to count
     *   }
     * })
    **/
    count<T extends reportes_usuariosCountArgs>(
      args?: Subset<T, reportes_usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Reportes_usuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reportes_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Reportes_usuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Reportes_usuariosAggregateArgs>(args: Subset<T, Reportes_usuariosAggregateArgs>): Prisma.PrismaPromise<GetReportes_usuariosAggregateType<T>>

    /**
     * Group by Reportes_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportes_usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportes_usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportes_usuariosGroupByArgs['orderBy'] }
        : { orderBy?: reportes_usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportes_usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportes_usuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reportes_usuarios model
   */
  readonly fields: reportes_usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reportes_usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportes_usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reportes_usuarios model
   */
  interface reportes_usuariosFieldRefs {
    readonly id_reporte: FieldRef<"reportes_usuarios", 'Int'>
    readonly id_usuario: FieldRef<"reportes_usuarios", 'Int'>
    readonly tipo_reporte: FieldRef<"reportes_usuarios", 'reportes_usuarios_tipo_reporte'>
    readonly descripcion: FieldRef<"reportes_usuarios", 'String'>
    readonly fecha_reporte: FieldRef<"reportes_usuarios", 'DateTime'>
    readonly estado: FieldRef<"reportes_usuarios", 'reportes_usuarios_estado'>
  }
    

  // Custom InputTypes
  /**
   * reportes_usuarios findUnique
   */
  export type reportes_usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which reportes_usuarios to fetch.
     */
    where: reportes_usuariosWhereUniqueInput
  }

  /**
   * reportes_usuarios findUniqueOrThrow
   */
  export type reportes_usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which reportes_usuarios to fetch.
     */
    where: reportes_usuariosWhereUniqueInput
  }

  /**
   * reportes_usuarios findFirst
   */
  export type reportes_usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which reportes_usuarios to fetch.
     */
    where?: reportes_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes_usuarios to fetch.
     */
    orderBy?: reportes_usuariosOrderByWithRelationInput | reportes_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportes_usuarios.
     */
    cursor?: reportes_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportes_usuarios.
     */
    distinct?: Reportes_usuariosScalarFieldEnum | Reportes_usuariosScalarFieldEnum[]
  }

  /**
   * reportes_usuarios findFirstOrThrow
   */
  export type reportes_usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which reportes_usuarios to fetch.
     */
    where?: reportes_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes_usuarios to fetch.
     */
    orderBy?: reportes_usuariosOrderByWithRelationInput | reportes_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportes_usuarios.
     */
    cursor?: reportes_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportes_usuarios.
     */
    distinct?: Reportes_usuariosScalarFieldEnum | Reportes_usuariosScalarFieldEnum[]
  }

  /**
   * reportes_usuarios findMany
   */
  export type reportes_usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which reportes_usuarios to fetch.
     */
    where?: reportes_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes_usuarios to fetch.
     */
    orderBy?: reportes_usuariosOrderByWithRelationInput | reportes_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reportes_usuarios.
     */
    cursor?: reportes_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes_usuarios.
     */
    skip?: number
    distinct?: Reportes_usuariosScalarFieldEnum | Reportes_usuariosScalarFieldEnum[]
  }

  /**
   * reportes_usuarios create
   */
  export type reportes_usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a reportes_usuarios.
     */
    data: XOR<reportes_usuariosCreateInput, reportes_usuariosUncheckedCreateInput>
  }

  /**
   * reportes_usuarios createMany
   */
  export type reportes_usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reportes_usuarios.
     */
    data: reportes_usuariosCreateManyInput | reportes_usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reportes_usuarios update
   */
  export type reportes_usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a reportes_usuarios.
     */
    data: XOR<reportes_usuariosUpdateInput, reportes_usuariosUncheckedUpdateInput>
    /**
     * Choose, which reportes_usuarios to update.
     */
    where: reportes_usuariosWhereUniqueInput
  }

  /**
   * reportes_usuarios updateMany
   */
  export type reportes_usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reportes_usuarios.
     */
    data: XOR<reportes_usuariosUpdateManyMutationInput, reportes_usuariosUncheckedUpdateManyInput>
    /**
     * Filter which reportes_usuarios to update
     */
    where?: reportes_usuariosWhereInput
    /**
     * Limit how many reportes_usuarios to update.
     */
    limit?: number
  }

  /**
   * reportes_usuarios upsert
   */
  export type reportes_usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the reportes_usuarios to update in case it exists.
     */
    where: reportes_usuariosWhereUniqueInput
    /**
     * In case the reportes_usuarios found by the `where` argument doesn't exist, create a new reportes_usuarios with this data.
     */
    create: XOR<reportes_usuariosCreateInput, reportes_usuariosUncheckedCreateInput>
    /**
     * In case the reportes_usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportes_usuariosUpdateInput, reportes_usuariosUncheckedUpdateInput>
  }

  /**
   * reportes_usuarios delete
   */
  export type reportes_usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    /**
     * Filter which reportes_usuarios to delete.
     */
    where: reportes_usuariosWhereUniqueInput
  }

  /**
   * reportes_usuarios deleteMany
   */
  export type reportes_usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportes_usuarios to delete
     */
    where?: reportes_usuariosWhereInput
    /**
     * Limit how many reportes_usuarios to delete.
     */
    limit?: number
  }

  /**
   * reportes_usuarios without action
   */
  export type reportes_usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
  }


  /**
   * Model roles_empleados
   */

  export type AggregateRoles_empleados = {
    _count: Roles_empleadosCountAggregateOutputType | null
    _avg: Roles_empleadosAvgAggregateOutputType | null
    _sum: Roles_empleadosSumAggregateOutputType | null
    _min: Roles_empleadosMinAggregateOutputType | null
    _max: Roles_empleadosMaxAggregateOutputType | null
  }

  export type Roles_empleadosAvgAggregateOutputType = {
    id_rol: number | null
  }

  export type Roles_empleadosSumAggregateOutputType = {
    id_rol: number | null
  }

  export type Roles_empleadosMinAggregateOutputType = {
    id_rol: number | null
    nombre_rol: string | null
  }

  export type Roles_empleadosMaxAggregateOutputType = {
    id_rol: number | null
    nombre_rol: string | null
  }

  export type Roles_empleadosCountAggregateOutputType = {
    id_rol: number
    nombre_rol: number
    _all: number
  }


  export type Roles_empleadosAvgAggregateInputType = {
    id_rol?: true
  }

  export type Roles_empleadosSumAggregateInputType = {
    id_rol?: true
  }

  export type Roles_empleadosMinAggregateInputType = {
    id_rol?: true
    nombre_rol?: true
  }

  export type Roles_empleadosMaxAggregateInputType = {
    id_rol?: true
    nombre_rol?: true
  }

  export type Roles_empleadosCountAggregateInputType = {
    id_rol?: true
    nombre_rol?: true
    _all?: true
  }

  export type Roles_empleadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles_empleados to aggregate.
     */
    where?: roles_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_empleados to fetch.
     */
    orderBy?: roles_empleadosOrderByWithRelationInput | roles_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: roles_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles_empleados
    **/
    _count?: true | Roles_empleadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Roles_empleadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Roles_empleadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Roles_empleadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Roles_empleadosMaxAggregateInputType
  }

  export type GetRoles_empleadosAggregateType<T extends Roles_empleadosAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles_empleados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles_empleados[P]>
      : GetScalarType<T[P], AggregateRoles_empleados[P]>
  }




  export type roles_empleadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roles_empleadosWhereInput
    orderBy?: roles_empleadosOrderByWithAggregationInput | roles_empleadosOrderByWithAggregationInput[]
    by: Roles_empleadosScalarFieldEnum[] | Roles_empleadosScalarFieldEnum
    having?: roles_empleadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Roles_empleadosCountAggregateInputType | true
    _avg?: Roles_empleadosAvgAggregateInputType
    _sum?: Roles_empleadosSumAggregateInputType
    _min?: Roles_empleadosMinAggregateInputType
    _max?: Roles_empleadosMaxAggregateInputType
  }

  export type Roles_empleadosGroupByOutputType = {
    id_rol: number
    nombre_rol: string
    _count: Roles_empleadosCountAggregateOutputType | null
    _avg: Roles_empleadosAvgAggregateOutputType | null
    _sum: Roles_empleadosSumAggregateOutputType | null
    _min: Roles_empleadosMinAggregateOutputType | null
    _max: Roles_empleadosMaxAggregateOutputType | null
  }

  type GetRoles_empleadosGroupByPayload<T extends roles_empleadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Roles_empleadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Roles_empleadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Roles_empleadosGroupByOutputType[P]>
            : GetScalarType<T[P], Roles_empleadosGroupByOutputType[P]>
        }
      >
    >


  export type roles_empleadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol?: boolean
    nombre_rol?: boolean
    empleados?: boolean | roles_empleados$empleadosArgs<ExtArgs>
    _count?: boolean | Roles_empleadosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles_empleados"]>



  export type roles_empleadosSelectScalar = {
    id_rol?: boolean
    nombre_rol?: boolean
  }

  export type roles_empleadosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_rol" | "nombre_rol", ExtArgs["result"]["roles_empleados"]>
  export type roles_empleadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | roles_empleados$empleadosArgs<ExtArgs>
    _count?: boolean | Roles_empleadosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $roles_empleadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles_empleados"
    objects: {
      empleados: Prisma.$empleadosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_rol: number
      nombre_rol: string
    }, ExtArgs["result"]["roles_empleados"]>
    composites: {}
  }

  type roles_empleadosGetPayload<S extends boolean | null | undefined | roles_empleadosDefaultArgs> = $Result.GetResult<Prisma.$roles_empleadosPayload, S>

  type roles_empleadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<roles_empleadosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Roles_empleadosCountAggregateInputType | true
    }

  export interface roles_empleadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles_empleados'], meta: { name: 'roles_empleados' } }
    /**
     * Find zero or one Roles_empleados that matches the filter.
     * @param {roles_empleadosFindUniqueArgs} args - Arguments to find a Roles_empleados
     * @example
     * // Get one Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends roles_empleadosFindUniqueArgs>(args: SelectSubset<T, roles_empleadosFindUniqueArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles_empleados that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {roles_empleadosFindUniqueOrThrowArgs} args - Arguments to find a Roles_empleados
     * @example
     * // Get one Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends roles_empleadosFindUniqueOrThrowArgs>(args: SelectSubset<T, roles_empleadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles_empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_empleadosFindFirstArgs} args - Arguments to find a Roles_empleados
     * @example
     * // Get one Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends roles_empleadosFindFirstArgs>(args?: SelectSubset<T, roles_empleadosFindFirstArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles_empleados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_empleadosFindFirstOrThrowArgs} args - Arguments to find a Roles_empleados
     * @example
     * // Get one Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends roles_empleadosFindFirstOrThrowArgs>(args?: SelectSubset<T, roles_empleadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles_empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_empleadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.findMany()
     * 
     * // Get first 10 Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.findMany({ take: 10 })
     * 
     * // Only select the `id_rol`
     * const roles_empleadosWithId_rolOnly = await prisma.roles_empleados.findMany({ select: { id_rol: true } })
     * 
     */
    findMany<T extends roles_empleadosFindManyArgs>(args?: SelectSubset<T, roles_empleadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles_empleados.
     * @param {roles_empleadosCreateArgs} args - Arguments to create a Roles_empleados.
     * @example
     * // Create one Roles_empleados
     * const Roles_empleados = await prisma.roles_empleados.create({
     *   data: {
     *     // ... data to create a Roles_empleados
     *   }
     * })
     * 
     */
    create<T extends roles_empleadosCreateArgs>(args: SelectSubset<T, roles_empleadosCreateArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles_empleados.
     * @param {roles_empleadosCreateManyArgs} args - Arguments to create many Roles_empleados.
     * @example
     * // Create many Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends roles_empleadosCreateManyArgs>(args?: SelectSubset<T, roles_empleadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Roles_empleados.
     * @param {roles_empleadosDeleteArgs} args - Arguments to delete one Roles_empleados.
     * @example
     * // Delete one Roles_empleados
     * const Roles_empleados = await prisma.roles_empleados.delete({
     *   where: {
     *     // ... filter to delete one Roles_empleados
     *   }
     * })
     * 
     */
    delete<T extends roles_empleadosDeleteArgs>(args: SelectSubset<T, roles_empleadosDeleteArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles_empleados.
     * @param {roles_empleadosUpdateArgs} args - Arguments to update one Roles_empleados.
     * @example
     * // Update one Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends roles_empleadosUpdateArgs>(args: SelectSubset<T, roles_empleadosUpdateArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles_empleados.
     * @param {roles_empleadosDeleteManyArgs} args - Arguments to filter Roles_empleados to delete.
     * @example
     * // Delete a few Roles_empleados
     * const { count } = await prisma.roles_empleados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends roles_empleadosDeleteManyArgs>(args?: SelectSubset<T, roles_empleadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_empleadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends roles_empleadosUpdateManyArgs>(args: SelectSubset<T, roles_empleadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Roles_empleados.
     * @param {roles_empleadosUpsertArgs} args - Arguments to update or create a Roles_empleados.
     * @example
     * // Update or create a Roles_empleados
     * const roles_empleados = await prisma.roles_empleados.upsert({
     *   create: {
     *     // ... data to create a Roles_empleados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles_empleados we want to update
     *   }
     * })
     */
    upsert<T extends roles_empleadosUpsertArgs>(args: SelectSubset<T, roles_empleadosUpsertArgs<ExtArgs>>): Prisma__roles_empleadosClient<$Result.GetResult<Prisma.$roles_empleadosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_empleadosCountArgs} args - Arguments to filter Roles_empleados to count.
     * @example
     * // Count the number of Roles_empleados
     * const count = await prisma.roles_empleados.count({
     *   where: {
     *     // ... the filter for the Roles_empleados we want to count
     *   }
     * })
    **/
    count<T extends roles_empleadosCountArgs>(
      args?: Subset<T, roles_empleadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Roles_empleadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Roles_empleadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Roles_empleadosAggregateArgs>(args: Subset<T, Roles_empleadosAggregateArgs>): Prisma.PrismaPromise<GetRoles_empleadosAggregateType<T>>

    /**
     * Group by Roles_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_empleadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends roles_empleadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: roles_empleadosGroupByArgs['orderBy'] }
        : { orderBy?: roles_empleadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, roles_empleadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoles_empleadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles_empleados model
   */
  readonly fields: roles_empleadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles_empleados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__roles_empleadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleados<T extends roles_empleados$empleadosArgs<ExtArgs> = {}>(args?: Subset<T, roles_empleados$empleadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles_empleados model
   */
  interface roles_empleadosFieldRefs {
    readonly id_rol: FieldRef<"roles_empleados", 'Int'>
    readonly nombre_rol: FieldRef<"roles_empleados", 'String'>
  }
    

  // Custom InputTypes
  /**
   * roles_empleados findUnique
   */
  export type roles_empleadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which roles_empleados to fetch.
     */
    where: roles_empleadosWhereUniqueInput
  }

  /**
   * roles_empleados findUniqueOrThrow
   */
  export type roles_empleadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which roles_empleados to fetch.
     */
    where: roles_empleadosWhereUniqueInput
  }

  /**
   * roles_empleados findFirst
   */
  export type roles_empleadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which roles_empleados to fetch.
     */
    where?: roles_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_empleados to fetch.
     */
    orderBy?: roles_empleadosOrderByWithRelationInput | roles_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles_empleados.
     */
    cursor?: roles_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles_empleados.
     */
    distinct?: Roles_empleadosScalarFieldEnum | Roles_empleadosScalarFieldEnum[]
  }

  /**
   * roles_empleados findFirstOrThrow
   */
  export type roles_empleadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which roles_empleados to fetch.
     */
    where?: roles_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_empleados to fetch.
     */
    orderBy?: roles_empleadosOrderByWithRelationInput | roles_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles_empleados.
     */
    cursor?: roles_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles_empleados.
     */
    distinct?: Roles_empleadosScalarFieldEnum | Roles_empleadosScalarFieldEnum[]
  }

  /**
   * roles_empleados findMany
   */
  export type roles_empleadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which roles_empleados to fetch.
     */
    where?: roles_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_empleados to fetch.
     */
    orderBy?: roles_empleadosOrderByWithRelationInput | roles_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles_empleados.
     */
    cursor?: roles_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_empleados.
     */
    skip?: number
    distinct?: Roles_empleadosScalarFieldEnum | Roles_empleadosScalarFieldEnum[]
  }

  /**
   * roles_empleados create
   */
  export type roles_empleadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * The data needed to create a roles_empleados.
     */
    data: XOR<roles_empleadosCreateInput, roles_empleadosUncheckedCreateInput>
  }

  /**
   * roles_empleados createMany
   */
  export type roles_empleadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles_empleados.
     */
    data: roles_empleadosCreateManyInput | roles_empleadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles_empleados update
   */
  export type roles_empleadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * The data needed to update a roles_empleados.
     */
    data: XOR<roles_empleadosUpdateInput, roles_empleadosUncheckedUpdateInput>
    /**
     * Choose, which roles_empleados to update.
     */
    where: roles_empleadosWhereUniqueInput
  }

  /**
   * roles_empleados updateMany
   */
  export type roles_empleadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles_empleados.
     */
    data: XOR<roles_empleadosUpdateManyMutationInput, roles_empleadosUncheckedUpdateManyInput>
    /**
     * Filter which roles_empleados to update
     */
    where?: roles_empleadosWhereInput
    /**
     * Limit how many roles_empleados to update.
     */
    limit?: number
  }

  /**
   * roles_empleados upsert
   */
  export type roles_empleadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * The filter to search for the roles_empleados to update in case it exists.
     */
    where: roles_empleadosWhereUniqueInput
    /**
     * In case the roles_empleados found by the `where` argument doesn't exist, create a new roles_empleados with this data.
     */
    create: XOR<roles_empleadosCreateInput, roles_empleadosUncheckedCreateInput>
    /**
     * In case the roles_empleados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<roles_empleadosUpdateInput, roles_empleadosUncheckedUpdateInput>
  }

  /**
   * roles_empleados delete
   */
  export type roles_empleadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
    /**
     * Filter which roles_empleados to delete.
     */
    where: roles_empleadosWhereUniqueInput
  }

  /**
   * roles_empleados deleteMany
   */
  export type roles_empleadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles_empleados to delete
     */
    where?: roles_empleadosWhereInput
    /**
     * Limit how many roles_empleados to delete.
     */
    limit?: number
  }

  /**
   * roles_empleados.empleados
   */
  export type roles_empleados$empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empleados
     */
    select?: empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empleados
     */
    omit?: empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empleadosInclude<ExtArgs> | null
    where?: empleadosWhereInput
    orderBy?: empleadosOrderByWithRelationInput | empleadosOrderByWithRelationInput[]
    cursor?: empleadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpleadosScalarFieldEnum | EmpleadosScalarFieldEnum[]
  }

  /**
   * roles_empleados without action
   */
  export type roles_empleadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_empleados
     */
    select?: roles_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_empleados
     */
    omit?: roles_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_empleadosInclude<ExtArgs> | null
  }


  /**
   * Model salas
   */

  export type AggregateSalas = {
    _count: SalasCountAggregateOutputType | null
    _avg: SalasAvgAggregateOutputType | null
    _sum: SalasSumAggregateOutputType | null
    _min: SalasMinAggregateOutputType | null
    _max: SalasMaxAggregateOutputType | null
  }

  export type SalasAvgAggregateOutputType = {
    id_sala: number | null
    id_cine: number | null
    capacidad: number | null
  }

  export type SalasSumAggregateOutputType = {
    id_sala: number | null
    id_cine: number | null
    capacidad: number | null
  }

  export type SalasMinAggregateOutputType = {
    id_sala: number | null
    id_cine: number | null
    nombre_sala: string | null
    capacidad: number | null
  }

  export type SalasMaxAggregateOutputType = {
    id_sala: number | null
    id_cine: number | null
    nombre_sala: string | null
    capacidad: number | null
  }

  export type SalasCountAggregateOutputType = {
    id_sala: number
    id_cine: number
    nombre_sala: number
    capacidad: number
    _all: number
  }


  export type SalasAvgAggregateInputType = {
    id_sala?: true
    id_cine?: true
    capacidad?: true
  }

  export type SalasSumAggregateInputType = {
    id_sala?: true
    id_cine?: true
    capacidad?: true
  }

  export type SalasMinAggregateInputType = {
    id_sala?: true
    id_cine?: true
    nombre_sala?: true
    capacidad?: true
  }

  export type SalasMaxAggregateInputType = {
    id_sala?: true
    id_cine?: true
    nombre_sala?: true
    capacidad?: true
  }

  export type SalasCountAggregateInputType = {
    id_sala?: true
    id_cine?: true
    nombre_sala?: true
    capacidad?: true
    _all?: true
  }

  export type SalasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas to aggregate.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned salas
    **/
    _count?: true | SalasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalasMaxAggregateInputType
  }

  export type GetSalasAggregateType<T extends SalasAggregateArgs> = {
        [P in keyof T & keyof AggregateSalas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalas[P]>
      : GetScalarType<T[P], AggregateSalas[P]>
  }




  export type salasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salasWhereInput
    orderBy?: salasOrderByWithAggregationInput | salasOrderByWithAggregationInput[]
    by: SalasScalarFieldEnum[] | SalasScalarFieldEnum
    having?: salasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalasCountAggregateInputType | true
    _avg?: SalasAvgAggregateInputType
    _sum?: SalasSumAggregateInputType
    _min?: SalasMinAggregateInputType
    _max?: SalasMaxAggregateInputType
  }

  export type SalasGroupByOutputType = {
    id_sala: number
    id_cine: number
    nombre_sala: string | null
    capacidad: number | null
    _count: SalasCountAggregateOutputType | null
    _avg: SalasAvgAggregateOutputType | null
    _sum: SalasSumAggregateOutputType | null
    _min: SalasMinAggregateOutputType | null
    _max: SalasMaxAggregateOutputType | null
  }

  type GetSalasGroupByPayload<T extends salasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalasGroupByOutputType[P]>
            : GetScalarType<T[P], SalasGroupByOutputType[P]>
        }
      >
    >


  export type salasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sala?: boolean
    id_cine?: boolean
    nombre_sala?: boolean
    capacidad?: boolean
    funciones?: boolean | salas$funcionesArgs<ExtArgs>
    cines?: boolean | cinesDefaultArgs<ExtArgs>
    _count?: boolean | SalasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salas"]>



  export type salasSelectScalar = {
    id_sala?: boolean
    id_cine?: boolean
    nombre_sala?: boolean
    capacidad?: boolean
  }

  export type salasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sala" | "id_cine" | "nombre_sala" | "capacidad", ExtArgs["result"]["salas"]>
  export type salasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funciones?: boolean | salas$funcionesArgs<ExtArgs>
    cines?: boolean | cinesDefaultArgs<ExtArgs>
    _count?: boolean | SalasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $salasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "salas"
    objects: {
      funciones: Prisma.$funcionesPayload<ExtArgs>[]
      cines: Prisma.$cinesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sala: number
      id_cine: number
      nombre_sala: string | null
      capacidad: number | null
    }, ExtArgs["result"]["salas"]>
    composites: {}
  }

  type salasGetPayload<S extends boolean | null | undefined | salasDefaultArgs> = $Result.GetResult<Prisma.$salasPayload, S>

  type salasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<salasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalasCountAggregateInputType | true
    }

  export interface salasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['salas'], meta: { name: 'salas' } }
    /**
     * Find zero or one Salas that matches the filter.
     * @param {salasFindUniqueArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends salasFindUniqueArgs>(args: SelectSubset<T, salasFindUniqueArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Salas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {salasFindUniqueOrThrowArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends salasFindUniqueOrThrowArgs>(args: SelectSubset<T, salasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Salas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasFindFirstArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends salasFindFirstArgs>(args?: SelectSubset<T, salasFindFirstArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Salas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasFindFirstOrThrowArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends salasFindFirstOrThrowArgs>(args?: SelectSubset<T, salasFindFirstOrThrowArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Salas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Salas
     * const salas = await prisma.salas.findMany()
     * 
     * // Get first 10 Salas
     * const salas = await prisma.salas.findMany({ take: 10 })
     * 
     * // Only select the `id_sala`
     * const salasWithId_salaOnly = await prisma.salas.findMany({ select: { id_sala: true } })
     * 
     */
    findMany<T extends salasFindManyArgs>(args?: SelectSubset<T, salasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Salas.
     * @param {salasCreateArgs} args - Arguments to create a Salas.
     * @example
     * // Create one Salas
     * const Salas = await prisma.salas.create({
     *   data: {
     *     // ... data to create a Salas
     *   }
     * })
     * 
     */
    create<T extends salasCreateArgs>(args: SelectSubset<T, salasCreateArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Salas.
     * @param {salasCreateManyArgs} args - Arguments to create many Salas.
     * @example
     * // Create many Salas
     * const salas = await prisma.salas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends salasCreateManyArgs>(args?: SelectSubset<T, salasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Salas.
     * @param {salasDeleteArgs} args - Arguments to delete one Salas.
     * @example
     * // Delete one Salas
     * const Salas = await prisma.salas.delete({
     *   where: {
     *     // ... filter to delete one Salas
     *   }
     * })
     * 
     */
    delete<T extends salasDeleteArgs>(args: SelectSubset<T, salasDeleteArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Salas.
     * @param {salasUpdateArgs} args - Arguments to update one Salas.
     * @example
     * // Update one Salas
     * const salas = await prisma.salas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends salasUpdateArgs>(args: SelectSubset<T, salasUpdateArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Salas.
     * @param {salasDeleteManyArgs} args - Arguments to filter Salas to delete.
     * @example
     * // Delete a few Salas
     * const { count } = await prisma.salas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends salasDeleteManyArgs>(args?: SelectSubset<T, salasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Salas
     * const salas = await prisma.salas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends salasUpdateManyArgs>(args: SelectSubset<T, salasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Salas.
     * @param {salasUpsertArgs} args - Arguments to update or create a Salas.
     * @example
     * // Update or create a Salas
     * const salas = await prisma.salas.upsert({
     *   create: {
     *     // ... data to create a Salas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Salas we want to update
     *   }
     * })
     */
    upsert<T extends salasUpsertArgs>(args: SelectSubset<T, salasUpsertArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasCountArgs} args - Arguments to filter Salas to count.
     * @example
     * // Count the number of Salas
     * const count = await prisma.salas.count({
     *   where: {
     *     // ... the filter for the Salas we want to count
     *   }
     * })
    **/
    count<T extends salasCountArgs>(
      args?: Subset<T, salasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalasAggregateArgs>(args: Subset<T, SalasAggregateArgs>): Prisma.PrismaPromise<GetSalasAggregateType<T>>

    /**
     * Group by Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends salasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: salasGroupByArgs['orderBy'] }
        : { orderBy?: salasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, salasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the salas model
   */
  readonly fields: salasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for salas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__salasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funciones<T extends salas$funcionesArgs<ExtArgs> = {}>(args?: Subset<T, salas$funcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$funcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cines<T extends cinesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cinesDefaultArgs<ExtArgs>>): Prisma__cinesClient<$Result.GetResult<Prisma.$cinesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the salas model
   */
  interface salasFieldRefs {
    readonly id_sala: FieldRef<"salas", 'Int'>
    readonly id_cine: FieldRef<"salas", 'Int'>
    readonly nombre_sala: FieldRef<"salas", 'String'>
    readonly capacidad: FieldRef<"salas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * salas findUnique
   */
  export type salasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas findUniqueOrThrow
   */
  export type salasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas findFirst
   */
  export type salasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas.
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas.
     */
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * salas findFirstOrThrow
   */
  export type salasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas.
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas.
     */
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * salas findMany
   */
  export type salasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing salas.
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * salas create
   */
  export type salasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * The data needed to create a salas.
     */
    data: XOR<salasCreateInput, salasUncheckedCreateInput>
  }

  /**
   * salas createMany
   */
  export type salasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many salas.
     */
    data: salasCreateManyInput | salasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * salas update
   */
  export type salasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * The data needed to update a salas.
     */
    data: XOR<salasUpdateInput, salasUncheckedUpdateInput>
    /**
     * Choose, which salas to update.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas updateMany
   */
  export type salasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update salas.
     */
    data: XOR<salasUpdateManyMutationInput, salasUncheckedUpdateManyInput>
    /**
     * Filter which salas to update
     */
    where?: salasWhereInput
    /**
     * Limit how many salas to update.
     */
    limit?: number
  }

  /**
   * salas upsert
   */
  export type salasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * The filter to search for the salas to update in case it exists.
     */
    where: salasWhereUniqueInput
    /**
     * In case the salas found by the `where` argument doesn't exist, create a new salas with this data.
     */
    create: XOR<salasCreateInput, salasUncheckedCreateInput>
    /**
     * In case the salas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<salasUpdateInput, salasUncheckedUpdateInput>
  }

  /**
   * salas delete
   */
  export type salasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter which salas to delete.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas deleteMany
   */
  export type salasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas to delete
     */
    where?: salasWhereInput
    /**
     * Limit how many salas to delete.
     */
    limit?: number
  }

  /**
   * salas.funciones
   */
  export type salas$funcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the funciones
     */
    select?: funcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the funciones
     */
    omit?: funcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: funcionesInclude<ExtArgs> | null
    where?: funcionesWhereInput
    orderBy?: funcionesOrderByWithRelationInput | funcionesOrderByWithRelationInput[]
    cursor?: funcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionesScalarFieldEnum | FuncionesScalarFieldEnum[]
  }

  /**
   * salas without action
   */
  export type salasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salas
     */
    omit?: salasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
  }


  /**
   * Model suscripciones
   */

  export type AggregateSuscripciones = {
    _count: SuscripcionesCountAggregateOutputType | null
    _avg: SuscripcionesAvgAggregateOutputType | null
    _sum: SuscripcionesSumAggregateOutputType | null
    _min: SuscripcionesMinAggregateOutputType | null
    _max: SuscripcionesMaxAggregateOutputType | null
  }

  export type SuscripcionesAvgAggregateOutputType = {
    id_suscripcion: number | null
    id_usuario: number | null
    id_plan: number | null
  }

  export type SuscripcionesSumAggregateOutputType = {
    id_suscripcion: number | null
    id_usuario: number | null
    id_plan: number | null
  }

  export type SuscripcionesMinAggregateOutputType = {
    id_suscripcion: number | null
    id_usuario: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    estado: $Enums.suscripciones_estado | null
    id_plan: number | null
  }

  export type SuscripcionesMaxAggregateOutputType = {
    id_suscripcion: number | null
    id_usuario: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    estado: $Enums.suscripciones_estado | null
    id_plan: number | null
  }

  export type SuscripcionesCountAggregateOutputType = {
    id_suscripcion: number
    id_usuario: number
    fecha_inicio: number
    fecha_fin: number
    estado: number
    id_plan: number
    _all: number
  }


  export type SuscripcionesAvgAggregateInputType = {
    id_suscripcion?: true
    id_usuario?: true
    id_plan?: true
  }

  export type SuscripcionesSumAggregateInputType = {
    id_suscripcion?: true
    id_usuario?: true
    id_plan?: true
  }

  export type SuscripcionesMinAggregateInputType = {
    id_suscripcion?: true
    id_usuario?: true
    fecha_inicio?: true
    fecha_fin?: true
    estado?: true
    id_plan?: true
  }

  export type SuscripcionesMaxAggregateInputType = {
    id_suscripcion?: true
    id_usuario?: true
    fecha_inicio?: true
    fecha_fin?: true
    estado?: true
    id_plan?: true
  }

  export type SuscripcionesCountAggregateInputType = {
    id_suscripcion?: true
    id_usuario?: true
    fecha_inicio?: true
    fecha_fin?: true
    estado?: true
    id_plan?: true
    _all?: true
  }

  export type SuscripcionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which suscripciones to aggregate.
     */
    where?: suscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suscripciones to fetch.
     */
    orderBy?: suscripcionesOrderByWithRelationInput | suscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: suscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suscripciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned suscripciones
    **/
    _count?: true | SuscripcionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SuscripcionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SuscripcionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuscripcionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuscripcionesMaxAggregateInputType
  }

  export type GetSuscripcionesAggregateType<T extends SuscripcionesAggregateArgs> = {
        [P in keyof T & keyof AggregateSuscripciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSuscripciones[P]>
      : GetScalarType<T[P], AggregateSuscripciones[P]>
  }




  export type suscripcionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: suscripcionesWhereInput
    orderBy?: suscripcionesOrderByWithAggregationInput | suscripcionesOrderByWithAggregationInput[]
    by: SuscripcionesScalarFieldEnum[] | SuscripcionesScalarFieldEnum
    having?: suscripcionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuscripcionesCountAggregateInputType | true
    _avg?: SuscripcionesAvgAggregateInputType
    _sum?: SuscripcionesSumAggregateInputType
    _min?: SuscripcionesMinAggregateInputType
    _max?: SuscripcionesMaxAggregateInputType
  }

  export type SuscripcionesGroupByOutputType = {
    id_suscripcion: number
    id_usuario: number
    fecha_inicio: Date | null
    fecha_fin: Date | null
    estado: $Enums.suscripciones_estado | null
    id_plan: number | null
    _count: SuscripcionesCountAggregateOutputType | null
    _avg: SuscripcionesAvgAggregateOutputType | null
    _sum: SuscripcionesSumAggregateOutputType | null
    _min: SuscripcionesMinAggregateOutputType | null
    _max: SuscripcionesMaxAggregateOutputType | null
  }

  type GetSuscripcionesGroupByPayload<T extends suscripcionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuscripcionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuscripcionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuscripcionesGroupByOutputType[P]>
            : GetScalarType<T[P], SuscripcionesGroupByOutputType[P]>
        }
      >
    >


  export type suscripcionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_suscripcion?: boolean
    id_usuario?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    estado?: boolean
    id_plan?: boolean
    planes?: boolean | suscripciones$planesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["suscripciones"]>



  export type suscripcionesSelectScalar = {
    id_suscripcion?: boolean
    id_usuario?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    estado?: boolean
    id_plan?: boolean
  }

  export type suscripcionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_suscripcion" | "id_usuario" | "fecha_inicio" | "fecha_fin" | "estado" | "id_plan", ExtArgs["result"]["suscripciones"]>
  export type suscripcionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    planes?: boolean | suscripciones$planesArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $suscripcionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "suscripciones"
    objects: {
      planes: Prisma.$planesPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_suscripcion: number
      id_usuario: number
      fecha_inicio: Date | null
      fecha_fin: Date | null
      estado: $Enums.suscripciones_estado | null
      id_plan: number | null
    }, ExtArgs["result"]["suscripciones"]>
    composites: {}
  }

  type suscripcionesGetPayload<S extends boolean | null | undefined | suscripcionesDefaultArgs> = $Result.GetResult<Prisma.$suscripcionesPayload, S>

  type suscripcionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<suscripcionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuscripcionesCountAggregateInputType | true
    }

  export interface suscripcionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['suscripciones'], meta: { name: 'suscripciones' } }
    /**
     * Find zero or one Suscripciones that matches the filter.
     * @param {suscripcionesFindUniqueArgs} args - Arguments to find a Suscripciones
     * @example
     * // Get one Suscripciones
     * const suscripciones = await prisma.suscripciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends suscripcionesFindUniqueArgs>(args: SelectSubset<T, suscripcionesFindUniqueArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Suscripciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {suscripcionesFindUniqueOrThrowArgs} args - Arguments to find a Suscripciones
     * @example
     * // Get one Suscripciones
     * const suscripciones = await prisma.suscripciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends suscripcionesFindUniqueOrThrowArgs>(args: SelectSubset<T, suscripcionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Suscripciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suscripcionesFindFirstArgs} args - Arguments to find a Suscripciones
     * @example
     * // Get one Suscripciones
     * const suscripciones = await prisma.suscripciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends suscripcionesFindFirstArgs>(args?: SelectSubset<T, suscripcionesFindFirstArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Suscripciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suscripcionesFindFirstOrThrowArgs} args - Arguments to find a Suscripciones
     * @example
     * // Get one Suscripciones
     * const suscripciones = await prisma.suscripciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends suscripcionesFindFirstOrThrowArgs>(args?: SelectSubset<T, suscripcionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Suscripciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suscripcionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Suscripciones
     * const suscripciones = await prisma.suscripciones.findMany()
     * 
     * // Get first 10 Suscripciones
     * const suscripciones = await prisma.suscripciones.findMany({ take: 10 })
     * 
     * // Only select the `id_suscripcion`
     * const suscripcionesWithId_suscripcionOnly = await prisma.suscripciones.findMany({ select: { id_suscripcion: true } })
     * 
     */
    findMany<T extends suscripcionesFindManyArgs>(args?: SelectSubset<T, suscripcionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Suscripciones.
     * @param {suscripcionesCreateArgs} args - Arguments to create a Suscripciones.
     * @example
     * // Create one Suscripciones
     * const Suscripciones = await prisma.suscripciones.create({
     *   data: {
     *     // ... data to create a Suscripciones
     *   }
     * })
     * 
     */
    create<T extends suscripcionesCreateArgs>(args: SelectSubset<T, suscripcionesCreateArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Suscripciones.
     * @param {suscripcionesCreateManyArgs} args - Arguments to create many Suscripciones.
     * @example
     * // Create many Suscripciones
     * const suscripciones = await prisma.suscripciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends suscripcionesCreateManyArgs>(args?: SelectSubset<T, suscripcionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Suscripciones.
     * @param {suscripcionesDeleteArgs} args - Arguments to delete one Suscripciones.
     * @example
     * // Delete one Suscripciones
     * const Suscripciones = await prisma.suscripciones.delete({
     *   where: {
     *     // ... filter to delete one Suscripciones
     *   }
     * })
     * 
     */
    delete<T extends suscripcionesDeleteArgs>(args: SelectSubset<T, suscripcionesDeleteArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Suscripciones.
     * @param {suscripcionesUpdateArgs} args - Arguments to update one Suscripciones.
     * @example
     * // Update one Suscripciones
     * const suscripciones = await prisma.suscripciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends suscripcionesUpdateArgs>(args: SelectSubset<T, suscripcionesUpdateArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Suscripciones.
     * @param {suscripcionesDeleteManyArgs} args - Arguments to filter Suscripciones to delete.
     * @example
     * // Delete a few Suscripciones
     * const { count } = await prisma.suscripciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends suscripcionesDeleteManyArgs>(args?: SelectSubset<T, suscripcionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suscripcionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Suscripciones
     * const suscripciones = await prisma.suscripciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends suscripcionesUpdateManyArgs>(args: SelectSubset<T, suscripcionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Suscripciones.
     * @param {suscripcionesUpsertArgs} args - Arguments to update or create a Suscripciones.
     * @example
     * // Update or create a Suscripciones
     * const suscripciones = await prisma.suscripciones.upsert({
     *   create: {
     *     // ... data to create a Suscripciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Suscripciones we want to update
     *   }
     * })
     */
    upsert<T extends suscripcionesUpsertArgs>(args: SelectSubset<T, suscripcionesUpsertArgs<ExtArgs>>): Prisma__suscripcionesClient<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Suscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suscripcionesCountArgs} args - Arguments to filter Suscripciones to count.
     * @example
     * // Count the number of Suscripciones
     * const count = await prisma.suscripciones.count({
     *   where: {
     *     // ... the filter for the Suscripciones we want to count
     *   }
     * })
    **/
    count<T extends suscripcionesCountArgs>(
      args?: Subset<T, suscripcionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuscripcionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Suscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuscripcionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuscripcionesAggregateArgs>(args: Subset<T, SuscripcionesAggregateArgs>): Prisma.PrismaPromise<GetSuscripcionesAggregateType<T>>

    /**
     * Group by Suscripciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suscripcionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends suscripcionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: suscripcionesGroupByArgs['orderBy'] }
        : { orderBy?: suscripcionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, suscripcionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuscripcionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the suscripciones model
   */
  readonly fields: suscripcionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for suscripciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__suscripcionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    planes<T extends suscripciones$planesArgs<ExtArgs> = {}>(args?: Subset<T, suscripciones$planesArgs<ExtArgs>>): Prisma__planesClient<$Result.GetResult<Prisma.$planesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the suscripciones model
   */
  interface suscripcionesFieldRefs {
    readonly id_suscripcion: FieldRef<"suscripciones", 'Int'>
    readonly id_usuario: FieldRef<"suscripciones", 'Int'>
    readonly fecha_inicio: FieldRef<"suscripciones", 'DateTime'>
    readonly fecha_fin: FieldRef<"suscripciones", 'DateTime'>
    readonly estado: FieldRef<"suscripciones", 'suscripciones_estado'>
    readonly id_plan: FieldRef<"suscripciones", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * suscripciones findUnique
   */
  export type suscripcionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which suscripciones to fetch.
     */
    where: suscripcionesWhereUniqueInput
  }

  /**
   * suscripciones findUniqueOrThrow
   */
  export type suscripcionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which suscripciones to fetch.
     */
    where: suscripcionesWhereUniqueInput
  }

  /**
   * suscripciones findFirst
   */
  export type suscripcionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which suscripciones to fetch.
     */
    where?: suscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suscripciones to fetch.
     */
    orderBy?: suscripcionesOrderByWithRelationInput | suscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for suscripciones.
     */
    cursor?: suscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suscripciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of suscripciones.
     */
    distinct?: SuscripcionesScalarFieldEnum | SuscripcionesScalarFieldEnum[]
  }

  /**
   * suscripciones findFirstOrThrow
   */
  export type suscripcionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which suscripciones to fetch.
     */
    where?: suscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suscripciones to fetch.
     */
    orderBy?: suscripcionesOrderByWithRelationInput | suscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for suscripciones.
     */
    cursor?: suscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suscripciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of suscripciones.
     */
    distinct?: SuscripcionesScalarFieldEnum | SuscripcionesScalarFieldEnum[]
  }

  /**
   * suscripciones findMany
   */
  export type suscripcionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * Filter, which suscripciones to fetch.
     */
    where?: suscripcionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suscripciones to fetch.
     */
    orderBy?: suscripcionesOrderByWithRelationInput | suscripcionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing suscripciones.
     */
    cursor?: suscripcionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suscripciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suscripciones.
     */
    skip?: number
    distinct?: SuscripcionesScalarFieldEnum | SuscripcionesScalarFieldEnum[]
  }

  /**
   * suscripciones create
   */
  export type suscripcionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * The data needed to create a suscripciones.
     */
    data: XOR<suscripcionesCreateInput, suscripcionesUncheckedCreateInput>
  }

  /**
   * suscripciones createMany
   */
  export type suscripcionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many suscripciones.
     */
    data: suscripcionesCreateManyInput | suscripcionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * suscripciones update
   */
  export type suscripcionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * The data needed to update a suscripciones.
     */
    data: XOR<suscripcionesUpdateInput, suscripcionesUncheckedUpdateInput>
    /**
     * Choose, which suscripciones to update.
     */
    where: suscripcionesWhereUniqueInput
  }

  /**
   * suscripciones updateMany
   */
  export type suscripcionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update suscripciones.
     */
    data: XOR<suscripcionesUpdateManyMutationInput, suscripcionesUncheckedUpdateManyInput>
    /**
     * Filter which suscripciones to update
     */
    where?: suscripcionesWhereInput
    /**
     * Limit how many suscripciones to update.
     */
    limit?: number
  }

  /**
   * suscripciones upsert
   */
  export type suscripcionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * The filter to search for the suscripciones to update in case it exists.
     */
    where: suscripcionesWhereUniqueInput
    /**
     * In case the suscripciones found by the `where` argument doesn't exist, create a new suscripciones with this data.
     */
    create: XOR<suscripcionesCreateInput, suscripcionesUncheckedCreateInput>
    /**
     * In case the suscripciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<suscripcionesUpdateInput, suscripcionesUncheckedUpdateInput>
  }

  /**
   * suscripciones delete
   */
  export type suscripcionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    /**
     * Filter which suscripciones to delete.
     */
    where: suscripcionesWhereUniqueInput
  }

  /**
   * suscripciones deleteMany
   */
  export type suscripcionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which suscripciones to delete
     */
    where?: suscripcionesWhereInput
    /**
     * Limit how many suscripciones to delete.
     */
    limit?: number
  }

  /**
   * suscripciones.planes
   */
  export type suscripciones$planesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the planes
     */
    select?: planesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the planes
     */
    omit?: planesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: planesInclude<ExtArgs> | null
    where?: planesWhereInput
  }

  /**
   * suscripciones without action
   */
  export type suscripcionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    id_usuario: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    id_usuario: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    id_usuario: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: $Enums.usuarios_rol | null
    fecha_registro: Date | null
    bloqueado_hasta: Date | null
    foto_perfil: string | null
    verificado: boolean | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id_usuario: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: $Enums.usuarios_rol | null
    fecha_registro: Date | null
    bloqueado_hasta: Date | null
    foto_perfil: string | null
    verificado: boolean | null
  }

  export type UsuariosCountAggregateOutputType = {
    id_usuario: number
    nombre: number
    email: number
    password: number
    rol: number
    fecha_registro: number
    bloqueado_hasta: number
    foto_perfil: number
    verificado: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    id_usuario?: true
  }

  export type UsuariosSumAggregateInputType = {
    id_usuario?: true
  }

  export type UsuariosMinAggregateInputType = {
    id_usuario?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    fecha_registro?: true
    bloqueado_hasta?: true
    foto_perfil?: true
    verificado?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id_usuario?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    fecha_registro?: true
    bloqueado_hasta?: true
    foto_perfil?: true
    verificado?: true
  }

  export type UsuariosCountAggregateInputType = {
    id_usuario?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    fecha_registro?: true
    bloqueado_hasta?: true
    foto_perfil?: true
    verificado?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id_usuario: number
    nombre: string
    email: string
    password: string
    rol: $Enums.usuarios_rol | null
    fecha_registro: Date | null
    bloqueado_hasta: Date | null
    foto_perfil: string | null
    verificado: boolean | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    fecha_registro?: boolean
    bloqueado_hasta?: boolean
    foto_perfil?: boolean
    verificado?: boolean
    boletos?: boolean | usuarios$boletosArgs<ExtArgs>
    historial_reproduccion?: boolean | usuarios$historial_reproduccionArgs<ExtArgs>
    intentos_login?: boolean | usuarios$intentos_loginArgs<ExtArgs>
    logs_actividad?: boolean | usuarios$logs_actividadArgs<ExtArgs>
    notificaciones?: boolean | usuarios$notificacionesArgs<ExtArgs>
    pagos?: boolean | usuarios$pagosArgs<ExtArgs>
    reportes_usuarios?: boolean | usuarios$reportes_usuariosArgs<ExtArgs>
    suscripciones?: boolean | usuarios$suscripcionesArgs<ExtArgs>
    valoraciones?: boolean | usuarios$valoracionesArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>



  export type usuariosSelectScalar = {
    id_usuario?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    fecha_registro?: boolean
    bloqueado_hasta?: boolean
    foto_perfil?: boolean
    verificado?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nombre" | "email" | "password" | "rol" | "fecha_registro" | "bloqueado_hasta" | "foto_perfil" | "verificado", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boletos?: boolean | usuarios$boletosArgs<ExtArgs>
    historial_reproduccion?: boolean | usuarios$historial_reproduccionArgs<ExtArgs>
    intentos_login?: boolean | usuarios$intentos_loginArgs<ExtArgs>
    logs_actividad?: boolean | usuarios$logs_actividadArgs<ExtArgs>
    notificaciones?: boolean | usuarios$notificacionesArgs<ExtArgs>
    pagos?: boolean | usuarios$pagosArgs<ExtArgs>
    reportes_usuarios?: boolean | usuarios$reportes_usuariosArgs<ExtArgs>
    suscripciones?: boolean | usuarios$suscripcionesArgs<ExtArgs>
    valoraciones?: boolean | usuarios$valoracionesArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      boletos: Prisma.$boletosPayload<ExtArgs>[]
      historial_reproduccion: Prisma.$historial_reproduccionPayload<ExtArgs>[]
      intentos_login: Prisma.$intentos_loginPayload<ExtArgs>[]
      logs_actividad: Prisma.$logs_actividadPayload<ExtArgs>[]
      notificaciones: Prisma.$notificacionesPayload<ExtArgs>[]
      pagos: Prisma.$pagosPayload<ExtArgs>[]
      reportes_usuarios: Prisma.$reportes_usuariosPayload<ExtArgs>[]
      suscripciones: Prisma.$suscripcionesPayload<ExtArgs>[]
      valoraciones: Prisma.$valoracionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nombre: string
      email: string
      password: string
      rol: $Enums.usuarios_rol | null
      fecha_registro: Date | null
      bloqueado_hasta: Date | null
      foto_perfil: string | null
      verificado: boolean | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuariosWithId_usuarioOnly = await prisma.usuarios.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    boletos<T extends usuarios$boletosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$boletosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$boletosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historial_reproduccion<T extends usuarios$historial_reproduccionArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$historial_reproduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_reproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    intentos_login<T extends usuarios$intentos_loginArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$intentos_loginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$intentos_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    logs_actividad<T extends usuarios$logs_actividadArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$logs_actividadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logs_actividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificaciones<T extends usuarios$notificacionesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$notificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagos<T extends usuarios$pagosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$pagosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportes_usuarios<T extends usuarios$reportes_usuariosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$reportes_usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportes_usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    suscripciones<T extends usuarios$suscripcionesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$suscripcionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suscripcionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    valoraciones<T extends usuarios$valoracionesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$valoracionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly id_usuario: FieldRef<"usuarios", 'Int'>
    readonly nombre: FieldRef<"usuarios", 'String'>
    readonly email: FieldRef<"usuarios", 'String'>
    readonly password: FieldRef<"usuarios", 'String'>
    readonly rol: FieldRef<"usuarios", 'usuarios_rol'>
    readonly fecha_registro: FieldRef<"usuarios", 'DateTime'>
    readonly bloqueado_hasta: FieldRef<"usuarios", 'DateTime'>
    readonly foto_perfil: FieldRef<"usuarios", 'String'>
    readonly verificado: FieldRef<"usuarios", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.boletos
   */
  export type usuarios$boletosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the boletos
     */
    select?: boletosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the boletos
     */
    omit?: boletosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: boletosInclude<ExtArgs> | null
    where?: boletosWhereInput
    orderBy?: boletosOrderByWithRelationInput | boletosOrderByWithRelationInput[]
    cursor?: boletosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BoletosScalarFieldEnum | BoletosScalarFieldEnum[]
  }

  /**
   * usuarios.historial_reproduccion
   */
  export type usuarios$historial_reproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_reproduccion
     */
    select?: historial_reproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historial_reproduccion
     */
    omit?: historial_reproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_reproduccionInclude<ExtArgs> | null
    where?: historial_reproduccionWhereInput
    orderBy?: historial_reproduccionOrderByWithRelationInput | historial_reproduccionOrderByWithRelationInput[]
    cursor?: historial_reproduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_reproduccionScalarFieldEnum | Historial_reproduccionScalarFieldEnum[]
  }

  /**
   * usuarios.intentos_login
   */
  export type usuarios$intentos_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the intentos_login
     */
    select?: intentos_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the intentos_login
     */
    omit?: intentos_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: intentos_loginInclude<ExtArgs> | null
    where?: intentos_loginWhereInput
    orderBy?: intentos_loginOrderByWithRelationInput | intentos_loginOrderByWithRelationInput[]
    cursor?: intentos_loginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Intentos_loginScalarFieldEnum | Intentos_loginScalarFieldEnum[]
  }

  /**
   * usuarios.logs_actividad
   */
  export type usuarios$logs_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs_actividad
     */
    select?: logs_actividadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs_actividad
     */
    omit?: logs_actividadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logs_actividadInclude<ExtArgs> | null
    where?: logs_actividadWhereInput
    orderBy?: logs_actividadOrderByWithRelationInput | logs_actividadOrderByWithRelationInput[]
    cursor?: logs_actividadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Logs_actividadScalarFieldEnum | Logs_actividadScalarFieldEnum[]
  }

  /**
   * usuarios.notificaciones
   */
  export type usuarios$notificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificaciones
     */
    select?: notificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificaciones
     */
    omit?: notificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificacionesInclude<ExtArgs> | null
    where?: notificacionesWhereInput
    orderBy?: notificacionesOrderByWithRelationInput | notificacionesOrderByWithRelationInput[]
    cursor?: notificacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * usuarios.pagos
   */
  export type usuarios$pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos
     */
    select?: pagosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos
     */
    omit?: pagosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagosInclude<ExtArgs> | null
    where?: pagosWhereInput
    orderBy?: pagosOrderByWithRelationInput | pagosOrderByWithRelationInput[]
    cursor?: pagosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * usuarios.reportes_usuarios
   */
  export type usuarios$reportes_usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes_usuarios
     */
    select?: reportes_usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes_usuarios
     */
    omit?: reportes_usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportes_usuariosInclude<ExtArgs> | null
    where?: reportes_usuariosWhereInput
    orderBy?: reportes_usuariosOrderByWithRelationInput | reportes_usuariosOrderByWithRelationInput[]
    cursor?: reportes_usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Reportes_usuariosScalarFieldEnum | Reportes_usuariosScalarFieldEnum[]
  }

  /**
   * usuarios.suscripciones
   */
  export type usuarios$suscripcionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suscripciones
     */
    select?: suscripcionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suscripciones
     */
    omit?: suscripcionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suscripcionesInclude<ExtArgs> | null
    where?: suscripcionesWhereInput
    orderBy?: suscripcionesOrderByWithRelationInput | suscripcionesOrderByWithRelationInput[]
    cursor?: suscripcionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuscripcionesScalarFieldEnum | SuscripcionesScalarFieldEnum[]
  }

  /**
   * usuarios.valoraciones
   */
  export type usuarios$valoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    where?: valoracionesWhereInput
    orderBy?: valoracionesOrderByWithRelationInput | valoracionesOrderByWithRelationInput[]
    cursor?: valoracionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Model valoraciones
   */

  export type AggregateValoraciones = {
    _count: ValoracionesCountAggregateOutputType | null
    _avg: ValoracionesAvgAggregateOutputType | null
    _sum: ValoracionesSumAggregateOutputType | null
    _min: ValoracionesMinAggregateOutputType | null
    _max: ValoracionesMaxAggregateOutputType | null
  }

  export type ValoracionesAvgAggregateOutputType = {
    id_valoracion: number | null
    id_usuario: number | null
    id_pelicula: number | null
    puntaje: number | null
  }

  export type ValoracionesSumAggregateOutputType = {
    id_valoracion: number | null
    id_usuario: number | null
    id_pelicula: number | null
    puntaje: number | null
  }

  export type ValoracionesMinAggregateOutputType = {
    id_valoracion: number | null
    id_usuario: number | null
    id_pelicula: number | null
    puntaje: number | null
    comentario: string | null
    fecha_valoracion: Date | null
  }

  export type ValoracionesMaxAggregateOutputType = {
    id_valoracion: number | null
    id_usuario: number | null
    id_pelicula: number | null
    puntaje: number | null
    comentario: string | null
    fecha_valoracion: Date | null
  }

  export type ValoracionesCountAggregateOutputType = {
    id_valoracion: number
    id_usuario: number
    id_pelicula: number
    puntaje: number
    comentario: number
    fecha_valoracion: number
    _all: number
  }


  export type ValoracionesAvgAggregateInputType = {
    id_valoracion?: true
    id_usuario?: true
    id_pelicula?: true
    puntaje?: true
  }

  export type ValoracionesSumAggregateInputType = {
    id_valoracion?: true
    id_usuario?: true
    id_pelicula?: true
    puntaje?: true
  }

  export type ValoracionesMinAggregateInputType = {
    id_valoracion?: true
    id_usuario?: true
    id_pelicula?: true
    puntaje?: true
    comentario?: true
    fecha_valoracion?: true
  }

  export type ValoracionesMaxAggregateInputType = {
    id_valoracion?: true
    id_usuario?: true
    id_pelicula?: true
    puntaje?: true
    comentario?: true
    fecha_valoracion?: true
  }

  export type ValoracionesCountAggregateInputType = {
    id_valoracion?: true
    id_usuario?: true
    id_pelicula?: true
    puntaje?: true
    comentario?: true
    fecha_valoracion?: true
    _all?: true
  }

  export type ValoracionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which valoraciones to aggregate.
     */
    where?: valoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of valoraciones to fetch.
     */
    orderBy?: valoracionesOrderByWithRelationInput | valoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: valoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` valoraciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned valoraciones
    **/
    _count?: true | ValoracionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ValoracionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ValoracionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ValoracionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ValoracionesMaxAggregateInputType
  }

  export type GetValoracionesAggregateType<T extends ValoracionesAggregateArgs> = {
        [P in keyof T & keyof AggregateValoraciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateValoraciones[P]>
      : GetScalarType<T[P], AggregateValoraciones[P]>
  }




  export type valoracionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: valoracionesWhereInput
    orderBy?: valoracionesOrderByWithAggregationInput | valoracionesOrderByWithAggregationInput[]
    by: ValoracionesScalarFieldEnum[] | ValoracionesScalarFieldEnum
    having?: valoracionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ValoracionesCountAggregateInputType | true
    _avg?: ValoracionesAvgAggregateInputType
    _sum?: ValoracionesSumAggregateInputType
    _min?: ValoracionesMinAggregateInputType
    _max?: ValoracionesMaxAggregateInputType
  }

  export type ValoracionesGroupByOutputType = {
    id_valoracion: number
    id_usuario: number
    id_pelicula: number
    puntaje: number | null
    comentario: string | null
    fecha_valoracion: Date | null
    _count: ValoracionesCountAggregateOutputType | null
    _avg: ValoracionesAvgAggregateOutputType | null
    _sum: ValoracionesSumAggregateOutputType | null
    _min: ValoracionesMinAggregateOutputType | null
    _max: ValoracionesMaxAggregateOutputType | null
  }

  type GetValoracionesGroupByPayload<T extends valoracionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ValoracionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ValoracionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ValoracionesGroupByOutputType[P]>
            : GetScalarType<T[P], ValoracionesGroupByOutputType[P]>
        }
      >
    >


  export type valoracionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_valoracion?: boolean
    id_usuario?: boolean
    id_pelicula?: boolean
    puntaje?: boolean
    comentario?: boolean
    fecha_valoracion?: boolean
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["valoraciones"]>



  export type valoracionesSelectScalar = {
    id_valoracion?: boolean
    id_usuario?: boolean
    id_pelicula?: boolean
    puntaje?: boolean
    comentario?: boolean
    fecha_valoracion?: boolean
  }

  export type valoracionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_valoracion" | "id_usuario" | "id_pelicula" | "puntaje" | "comentario" | "fecha_valoracion", ExtArgs["result"]["valoraciones"]>
  export type valoracionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peliculas?: boolean | peliculasDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $valoracionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "valoraciones"
    objects: {
      peliculas: Prisma.$peliculasPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_valoracion: number
      id_usuario: number
      id_pelicula: number
      puntaje: number | null
      comentario: string | null
      fecha_valoracion: Date | null
    }, ExtArgs["result"]["valoraciones"]>
    composites: {}
  }

  type valoracionesGetPayload<S extends boolean | null | undefined | valoracionesDefaultArgs> = $Result.GetResult<Prisma.$valoracionesPayload, S>

  type valoracionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<valoracionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ValoracionesCountAggregateInputType | true
    }

  export interface valoracionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['valoraciones'], meta: { name: 'valoraciones' } }
    /**
     * Find zero or one Valoraciones that matches the filter.
     * @param {valoracionesFindUniqueArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends valoracionesFindUniqueArgs>(args: SelectSubset<T, valoracionesFindUniqueArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Valoraciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {valoracionesFindUniqueOrThrowArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends valoracionesFindUniqueOrThrowArgs>(args: SelectSubset<T, valoracionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Valoraciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {valoracionesFindFirstArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends valoracionesFindFirstArgs>(args?: SelectSubset<T, valoracionesFindFirstArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Valoraciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {valoracionesFindFirstOrThrowArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends valoracionesFindFirstOrThrowArgs>(args?: SelectSubset<T, valoracionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Valoraciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {valoracionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Valoraciones
     * const valoraciones = await prisma.valoraciones.findMany()
     * 
     * // Get first 10 Valoraciones
     * const valoraciones = await prisma.valoraciones.findMany({ take: 10 })
     * 
     * // Only select the `id_valoracion`
     * const valoracionesWithId_valoracionOnly = await prisma.valoraciones.findMany({ select: { id_valoracion: true } })
     * 
     */
    findMany<T extends valoracionesFindManyArgs>(args?: SelectSubset<T, valoracionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Valoraciones.
     * @param {valoracionesCreateArgs} args - Arguments to create a Valoraciones.
     * @example
     * // Create one Valoraciones
     * const Valoraciones = await prisma.valoraciones.create({
     *   data: {
     *     // ... data to create a Valoraciones
     *   }
     * })
     * 
     */
    create<T extends valoracionesCreateArgs>(args: SelectSubset<T, valoracionesCreateArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Valoraciones.
     * @param {valoracionesCreateManyArgs} args - Arguments to create many Valoraciones.
     * @example
     * // Create many Valoraciones
     * const valoraciones = await prisma.valoraciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends valoracionesCreateManyArgs>(args?: SelectSubset<T, valoracionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Valoraciones.
     * @param {valoracionesDeleteArgs} args - Arguments to delete one Valoraciones.
     * @example
     * // Delete one Valoraciones
     * const Valoraciones = await prisma.valoraciones.delete({
     *   where: {
     *     // ... filter to delete one Valoraciones
     *   }
     * })
     * 
     */
    delete<T extends valoracionesDeleteArgs>(args: SelectSubset<T, valoracionesDeleteArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Valoraciones.
     * @param {valoracionesUpdateArgs} args - Arguments to update one Valoraciones.
     * @example
     * // Update one Valoraciones
     * const valoraciones = await prisma.valoraciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends valoracionesUpdateArgs>(args: SelectSubset<T, valoracionesUpdateArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Valoraciones.
     * @param {valoracionesDeleteManyArgs} args - Arguments to filter Valoraciones to delete.
     * @example
     * // Delete a few Valoraciones
     * const { count } = await prisma.valoraciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends valoracionesDeleteManyArgs>(args?: SelectSubset<T, valoracionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {valoracionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Valoraciones
     * const valoraciones = await prisma.valoraciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends valoracionesUpdateManyArgs>(args: SelectSubset<T, valoracionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Valoraciones.
     * @param {valoracionesUpsertArgs} args - Arguments to update or create a Valoraciones.
     * @example
     * // Update or create a Valoraciones
     * const valoraciones = await prisma.valoraciones.upsert({
     *   create: {
     *     // ... data to create a Valoraciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Valoraciones we want to update
     *   }
     * })
     */
    upsert<T extends valoracionesUpsertArgs>(args: SelectSubset<T, valoracionesUpsertArgs<ExtArgs>>): Prisma__valoracionesClient<$Result.GetResult<Prisma.$valoracionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {valoracionesCountArgs} args - Arguments to filter Valoraciones to count.
     * @example
     * // Count the number of Valoraciones
     * const count = await prisma.valoraciones.count({
     *   where: {
     *     // ... the filter for the Valoraciones we want to count
     *   }
     * })
    **/
    count<T extends valoracionesCountArgs>(
      args?: Subset<T, valoracionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ValoracionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ValoracionesAggregateArgs>(args: Subset<T, ValoracionesAggregateArgs>): Prisma.PrismaPromise<GetValoracionesAggregateType<T>>

    /**
     * Group by Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {valoracionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends valoracionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: valoracionesGroupByArgs['orderBy'] }
        : { orderBy?: valoracionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, valoracionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetValoracionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the valoraciones model
   */
  readonly fields: valoracionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for valoraciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__valoracionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peliculas<T extends peliculasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, peliculasDefaultArgs<ExtArgs>>): Prisma__peliculasClient<$Result.GetResult<Prisma.$peliculasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the valoraciones model
   */
  interface valoracionesFieldRefs {
    readonly id_valoracion: FieldRef<"valoraciones", 'Int'>
    readonly id_usuario: FieldRef<"valoraciones", 'Int'>
    readonly id_pelicula: FieldRef<"valoraciones", 'Int'>
    readonly puntaje: FieldRef<"valoraciones", 'Int'>
    readonly comentario: FieldRef<"valoraciones", 'String'>
    readonly fecha_valoracion: FieldRef<"valoraciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * valoraciones findUnique
   */
  export type valoracionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * Filter, which valoraciones to fetch.
     */
    where: valoracionesWhereUniqueInput
  }

  /**
   * valoraciones findUniqueOrThrow
   */
  export type valoracionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * Filter, which valoraciones to fetch.
     */
    where: valoracionesWhereUniqueInput
  }

  /**
   * valoraciones findFirst
   */
  export type valoracionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * Filter, which valoraciones to fetch.
     */
    where?: valoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of valoraciones to fetch.
     */
    orderBy?: valoracionesOrderByWithRelationInput | valoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for valoraciones.
     */
    cursor?: valoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` valoraciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of valoraciones.
     */
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * valoraciones findFirstOrThrow
   */
  export type valoracionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * Filter, which valoraciones to fetch.
     */
    where?: valoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of valoraciones to fetch.
     */
    orderBy?: valoracionesOrderByWithRelationInput | valoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for valoraciones.
     */
    cursor?: valoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` valoraciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of valoraciones.
     */
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * valoraciones findMany
   */
  export type valoracionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * Filter, which valoraciones to fetch.
     */
    where?: valoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of valoraciones to fetch.
     */
    orderBy?: valoracionesOrderByWithRelationInput | valoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing valoraciones.
     */
    cursor?: valoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` valoraciones.
     */
    skip?: number
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * valoraciones create
   */
  export type valoracionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * The data needed to create a valoraciones.
     */
    data: XOR<valoracionesCreateInput, valoracionesUncheckedCreateInput>
  }

  /**
   * valoraciones createMany
   */
  export type valoracionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many valoraciones.
     */
    data: valoracionesCreateManyInput | valoracionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * valoraciones update
   */
  export type valoracionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * The data needed to update a valoraciones.
     */
    data: XOR<valoracionesUpdateInput, valoracionesUncheckedUpdateInput>
    /**
     * Choose, which valoraciones to update.
     */
    where: valoracionesWhereUniqueInput
  }

  /**
   * valoraciones updateMany
   */
  export type valoracionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update valoraciones.
     */
    data: XOR<valoracionesUpdateManyMutationInput, valoracionesUncheckedUpdateManyInput>
    /**
     * Filter which valoraciones to update
     */
    where?: valoracionesWhereInput
    /**
     * Limit how many valoraciones to update.
     */
    limit?: number
  }

  /**
   * valoraciones upsert
   */
  export type valoracionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * The filter to search for the valoraciones to update in case it exists.
     */
    where: valoracionesWhereUniqueInput
    /**
     * In case the valoraciones found by the `where` argument doesn't exist, create a new valoraciones with this data.
     */
    create: XOR<valoracionesCreateInput, valoracionesUncheckedCreateInput>
    /**
     * In case the valoraciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<valoracionesUpdateInput, valoracionesUncheckedUpdateInput>
  }

  /**
   * valoraciones delete
   */
  export type valoracionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
    /**
     * Filter which valoraciones to delete.
     */
    where: valoracionesWhereUniqueInput
  }

  /**
   * valoraciones deleteMany
   */
  export type valoracionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which valoraciones to delete
     */
    where?: valoracionesWhereInput
    /**
     * Limit how many valoraciones to delete.
     */
    limit?: number
  }

  /**
   * valoraciones without action
   */
  export type valoracionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the valoraciones
     */
    select?: valoracionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the valoraciones
     */
    omit?: valoracionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: valoracionesInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ActoresScalarFieldEnum: {
    id_actor: 'id_actor',
    nombre_actor: 'nombre_actor',
    apellido_actor: 'apellido_actor',
    fecha_nacimiento: 'fecha_nacimiento',
    biografia: 'biografia'
  };

  export type ActoresScalarFieldEnum = (typeof ActoresScalarFieldEnum)[keyof typeof ActoresScalarFieldEnum]


  export const BoletosScalarFieldEnum: {
    id_boleto: 'id_boleto',
    id_funcion: 'id_funcion',
    id_usuario: 'id_usuario',
    asiento: 'asiento',
    estado: 'estado'
  };

  export type BoletosScalarFieldEnum = (typeof BoletosScalarFieldEnum)[keyof typeof BoletosScalarFieldEnum]


  export const Candy_barScalarFieldEnum: {
    id_producto: 'id_producto',
    nombre_producto: 'nombre_producto',
    descripcion: 'descripcion',
    precio: 'precio',
    imagen_url: 'imagen_url',
    es_promocion: 'es_promocion',
    precio_promocional: 'precio_promocional',
    promo_fecha_inicio: 'promo_fecha_inicio',
    promo_fecha_fin: 'promo_fecha_fin',
    categoria: 'categoria',
    stock: 'stock'
  };

  export type Candy_barScalarFieldEnum = (typeof Candy_barScalarFieldEnum)[keyof typeof Candy_barScalarFieldEnum]


  export const CartelerasScalarFieldEnum: {
    id_cartelera: 'id_cartelera',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    descripcion: 'descripcion'
  };

  export type CartelerasScalarFieldEnum = (typeof CartelerasScalarFieldEnum)[keyof typeof CartelerasScalarFieldEnum]


  export const CinesScalarFieldEnum: {
    id_cine: 'id_cine',
    nombre_cine: 'nombre_cine',
    direccion: 'direccion',
    telefono: 'telefono',
    facebook_url: 'facebook_url',
    instagram_url: 'instagram_url',
    tiktok_url: 'tiktok_url',
    email: 'email',
    ubicacion_url: 'ubicacion_url'
  };

  export type CinesScalarFieldEnum = (typeof CinesScalarFieldEnum)[keyof typeof CinesScalarFieldEnum]


  export const ClasificacionesScalarFieldEnum: {
    id_clasificacion: 'id_clasificacion',
    codigo: 'codigo',
    descripcion: 'descripcion'
  };

  export type ClasificacionesScalarFieldEnum = (typeof ClasificacionesScalarFieldEnum)[keyof typeof ClasificacionesScalarFieldEnum]


  export const DirectoresScalarFieldEnum: {
    id_director: 'id_director',
    nombre_director: 'nombre_director',
    apellido_director: 'apellido_director',
    biografia: 'biografia'
  };

  export type DirectoresScalarFieldEnum = (typeof DirectoresScalarFieldEnum)[keyof typeof DirectoresScalarFieldEnum]


  export const EmpleadosScalarFieldEnum: {
    id_empleado: 'id_empleado',
    nombre: 'nombre',
    apellido: 'apellido',
    ci: 'ci',
    correo: 'correo',
    telefono: 'telefono',
    fecha_contrato: 'fecha_contrato',
    id_cine: 'id_cine',
    id_rol: 'id_rol',
    usuario_sistema: 'usuario_sistema'
  };

  export type EmpleadosScalarFieldEnum = (typeof EmpleadosScalarFieldEnum)[keyof typeof EmpleadosScalarFieldEnum]


  export const FuncionesScalarFieldEnum: {
    id_funcion: 'id_funcion',
    id_cartelera: 'id_cartelera',
    id_sala: 'id_sala',
    id_pelicula: 'id_pelicula',
    fecha_hora_inicio: 'fecha_hora_inicio',
    fecha_hora_fin: 'fecha_hora_fin',
    precio_boleto: 'precio_boleto'
  };

  export type FuncionesScalarFieldEnum = (typeof FuncionesScalarFieldEnum)[keyof typeof FuncionesScalarFieldEnum]


  export const GenerosScalarFieldEnum: {
    id_genero: 'id_genero',
    nombre_genero: 'nombre_genero'
  };

  export type GenerosScalarFieldEnum = (typeof GenerosScalarFieldEnum)[keyof typeof GenerosScalarFieldEnum]


  export const Historial_reproduccionScalarFieldEnum: {
    id_usuario: 'id_usuario',
    id_pelicula: 'id_pelicula',
    fecha_visualizacion: 'fecha_visualizacion',
    progreso_visto_porcentaje: 'progreso_visto_porcentaje'
  };

  export type Historial_reproduccionScalarFieldEnum = (typeof Historial_reproduccionScalarFieldEnum)[keyof typeof Historial_reproduccionScalarFieldEnum]


  export const Imagenes_extraScalarFieldEnum: {
    id_imagen_extra: 'id_imagen_extra',
    tipo: 'tipo',
    nombre: 'nombre',
    url: 'url',
    descripcion: 'descripcion'
  };

  export type Imagenes_extraScalarFieldEnum = (typeof Imagenes_extraScalarFieldEnum)[keyof typeof Imagenes_extraScalarFieldEnum]


  export const Intentos_loginScalarFieldEnum: {
    id: 'id',
    id_usuario: 'id_usuario',
    exito: 'exito',
    ip_origen: 'ip_origen',
    fecha: 'fecha'
  };

  export type Intentos_loginScalarFieldEnum = (typeof Intentos_loginScalarFieldEnum)[keyof typeof Intentos_loginScalarFieldEnum]


  export const Logs_actividadScalarFieldEnum: {
    id_log: 'id_log',
    id_usuario: 'id_usuario',
    accion: 'accion',
    fecha_hora: 'fecha_hora',
    detalle: 'detalle',
    id_empleado: 'id_empleado',
    id_boleto: 'id_boleto'
  };

  export type Logs_actividadScalarFieldEnum = (typeof Logs_actividadScalarFieldEnum)[keyof typeof Logs_actividadScalarFieldEnum]


  export const Metodos_pagoScalarFieldEnum: {
    id_metodo: 'id_metodo',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type Metodos_pagoScalarFieldEnum = (typeof Metodos_pagoScalarFieldEnum)[keyof typeof Metodos_pagoScalarFieldEnum]


  export const NotificacionesScalarFieldEnum: {
    id_notificacion: 'id_notificacion',
    id_usuario: 'id_usuario',
    titulo: 'titulo',
    mensaje: 'mensaje',
    fecha_envio: 'fecha_envio',
    leido: 'leido',
    id_empleado: 'id_empleado'
  };

  export type NotificacionesScalarFieldEnum = (typeof NotificacionesScalarFieldEnum)[keyof typeof NotificacionesScalarFieldEnum]


  export const PagosScalarFieldEnum: {
    id_pago: 'id_pago',
    id_usuario: 'id_usuario',
    monto: 'monto',
    id_metodo: 'id_metodo',
    fecha_pago: 'fecha_pago',
    estado: 'estado'
  };

  export type PagosScalarFieldEnum = (typeof PagosScalarFieldEnum)[keyof typeof PagosScalarFieldEnum]


  export const PeliculasScalarFieldEnum: {
    id_pelicula: 'id_pelicula',
    titulo: 'titulo',
    sinopsis: 'sinopsis',
    duracion: 'duracion',
    fecha_lanzamiento: 'fecha_lanzamiento',
    id_productora: 'id_productora',
    tipo_contenido: 'tipo_contenido',
    imagen_portada: 'imagen_portada',
    url_video: 'url_video',
    id_clasificacion: 'id_clasificacion',
    calificacion_promedio: 'calificacion_promedio'
  };

  export type PeliculasScalarFieldEnum = (typeof PeliculasScalarFieldEnum)[keyof typeof PeliculasScalarFieldEnum]


  export const Peliculas_directoresScalarFieldEnum: {
    id_pelicula: 'id_pelicula',
    id_director: 'id_director'
  };

  export type Peliculas_directoresScalarFieldEnum = (typeof Peliculas_directoresScalarFieldEnum)[keyof typeof Peliculas_directoresScalarFieldEnum]


  export const Peliculas_generosScalarFieldEnum: {
    id_pelicula: 'id_pelicula',
    id_genero: 'id_genero'
  };

  export type Peliculas_generosScalarFieldEnum = (typeof Peliculas_generosScalarFieldEnum)[keyof typeof Peliculas_generosScalarFieldEnum]


  export const PlanesScalarFieldEnum: {
    id_plan: 'id_plan',
    nombre: 'nombre',
    precio: 'precio',
    duracion_dias: 'duracion_dias',
    descripcion: 'descripcion'
  };

  export type PlanesScalarFieldEnum = (typeof PlanesScalarFieldEnum)[keyof typeof PlanesScalarFieldEnum]


  export const ProductorasScalarFieldEnum: {
    id_productora: 'id_productora',
    nombre_productora: 'nombre_productora',
    pais_origen: 'pais_origen'
  };

  export type ProductorasScalarFieldEnum = (typeof ProductorasScalarFieldEnum)[keyof typeof ProductorasScalarFieldEnum]


  export const PromocionesScalarFieldEnum: {
    id_promocion: 'id_promocion',
    titulo: 'titulo',
    descripcion: 'descripcion',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    descuento: 'descuento'
  };

  export type PromocionesScalarFieldEnum = (typeof PromocionesScalarFieldEnum)[keyof typeof PromocionesScalarFieldEnum]


  export const RepartoScalarFieldEnum: {
    id_reparto: 'id_reparto',
    id_pelicula: 'id_pelicula',
    id_actor: 'id_actor',
    rol: 'rol'
  };

  export type RepartoScalarFieldEnum = (typeof RepartoScalarFieldEnum)[keyof typeof RepartoScalarFieldEnum]


  export const Reportes_usuariosScalarFieldEnum: {
    id_reporte: 'id_reporte',
    id_usuario: 'id_usuario',
    tipo_reporte: 'tipo_reporte',
    descripcion: 'descripcion',
    fecha_reporte: 'fecha_reporte',
    estado: 'estado'
  };

  export type Reportes_usuariosScalarFieldEnum = (typeof Reportes_usuariosScalarFieldEnum)[keyof typeof Reportes_usuariosScalarFieldEnum]


  export const Roles_empleadosScalarFieldEnum: {
    id_rol: 'id_rol',
    nombre_rol: 'nombre_rol'
  };

  export type Roles_empleadosScalarFieldEnum = (typeof Roles_empleadosScalarFieldEnum)[keyof typeof Roles_empleadosScalarFieldEnum]


  export const SalasScalarFieldEnum: {
    id_sala: 'id_sala',
    id_cine: 'id_cine',
    nombre_sala: 'nombre_sala',
    capacidad: 'capacidad'
  };

  export type SalasScalarFieldEnum = (typeof SalasScalarFieldEnum)[keyof typeof SalasScalarFieldEnum]


  export const SuscripcionesScalarFieldEnum: {
    id_suscripcion: 'id_suscripcion',
    id_usuario: 'id_usuario',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    estado: 'estado',
    id_plan: 'id_plan'
  };

  export type SuscripcionesScalarFieldEnum = (typeof SuscripcionesScalarFieldEnum)[keyof typeof SuscripcionesScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    rol: 'rol',
    fecha_registro: 'fecha_registro',
    bloqueado_hasta: 'bloqueado_hasta',
    foto_perfil: 'foto_perfil',
    verificado: 'verificado'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const ValoracionesScalarFieldEnum: {
    id_valoracion: 'id_valoracion',
    id_usuario: 'id_usuario',
    id_pelicula: 'id_pelicula',
    puntaje: 'puntaje',
    comentario: 'comentario',
    fecha_valoracion: 'fecha_valoracion'
  };

  export type ValoracionesScalarFieldEnum = (typeof ValoracionesScalarFieldEnum)[keyof typeof ValoracionesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const actoresOrderByRelevanceFieldEnum: {
    nombre_actor: 'nombre_actor',
    apellido_actor: 'apellido_actor',
    biografia: 'biografia'
  };

  export type actoresOrderByRelevanceFieldEnum = (typeof actoresOrderByRelevanceFieldEnum)[keyof typeof actoresOrderByRelevanceFieldEnum]


  export const boletosOrderByRelevanceFieldEnum: {
    asiento: 'asiento'
  };

  export type boletosOrderByRelevanceFieldEnum = (typeof boletosOrderByRelevanceFieldEnum)[keyof typeof boletosOrderByRelevanceFieldEnum]


  export const candy_barOrderByRelevanceFieldEnum: {
    nombre_producto: 'nombre_producto',
    descripcion: 'descripcion',
    imagen_url: 'imagen_url',
    categoria: 'categoria'
  };

  export type candy_barOrderByRelevanceFieldEnum = (typeof candy_barOrderByRelevanceFieldEnum)[keyof typeof candy_barOrderByRelevanceFieldEnum]


  export const cartelerasOrderByRelevanceFieldEnum: {
    descripcion: 'descripcion'
  };

  export type cartelerasOrderByRelevanceFieldEnum = (typeof cartelerasOrderByRelevanceFieldEnum)[keyof typeof cartelerasOrderByRelevanceFieldEnum]


  export const cinesOrderByRelevanceFieldEnum: {
    nombre_cine: 'nombre_cine',
    direccion: 'direccion',
    telefono: 'telefono',
    facebook_url: 'facebook_url',
    instagram_url: 'instagram_url',
    tiktok_url: 'tiktok_url',
    email: 'email',
    ubicacion_url: 'ubicacion_url'
  };

  export type cinesOrderByRelevanceFieldEnum = (typeof cinesOrderByRelevanceFieldEnum)[keyof typeof cinesOrderByRelevanceFieldEnum]


  export const clasificacionesOrderByRelevanceFieldEnum: {
    codigo: 'codigo',
    descripcion: 'descripcion'
  };

  export type clasificacionesOrderByRelevanceFieldEnum = (typeof clasificacionesOrderByRelevanceFieldEnum)[keyof typeof clasificacionesOrderByRelevanceFieldEnum]


  export const directoresOrderByRelevanceFieldEnum: {
    nombre_director: 'nombre_director',
    apellido_director: 'apellido_director',
    biografia: 'biografia'
  };

  export type directoresOrderByRelevanceFieldEnum = (typeof directoresOrderByRelevanceFieldEnum)[keyof typeof directoresOrderByRelevanceFieldEnum]


  export const empleadosOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    apellido: 'apellido',
    ci: 'ci',
    correo: 'correo',
    telefono: 'telefono'
  };

  export type empleadosOrderByRelevanceFieldEnum = (typeof empleadosOrderByRelevanceFieldEnum)[keyof typeof empleadosOrderByRelevanceFieldEnum]


  export const generosOrderByRelevanceFieldEnum: {
    nombre_genero: 'nombre_genero'
  };

  export type generosOrderByRelevanceFieldEnum = (typeof generosOrderByRelevanceFieldEnum)[keyof typeof generosOrderByRelevanceFieldEnum]


  export const imagenes_extraOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    url: 'url',
    descripcion: 'descripcion'
  };

  export type imagenes_extraOrderByRelevanceFieldEnum = (typeof imagenes_extraOrderByRelevanceFieldEnum)[keyof typeof imagenes_extraOrderByRelevanceFieldEnum]


  export const intentos_loginOrderByRelevanceFieldEnum: {
    ip_origen: 'ip_origen'
  };

  export type intentos_loginOrderByRelevanceFieldEnum = (typeof intentos_loginOrderByRelevanceFieldEnum)[keyof typeof intentos_loginOrderByRelevanceFieldEnum]


  export const logs_actividadOrderByRelevanceFieldEnum: {
    accion: 'accion',
    detalle: 'detalle'
  };

  export type logs_actividadOrderByRelevanceFieldEnum = (typeof logs_actividadOrderByRelevanceFieldEnum)[keyof typeof logs_actividadOrderByRelevanceFieldEnum]


  export const metodos_pagoOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type metodos_pagoOrderByRelevanceFieldEnum = (typeof metodos_pagoOrderByRelevanceFieldEnum)[keyof typeof metodos_pagoOrderByRelevanceFieldEnum]


  export const notificacionesOrderByRelevanceFieldEnum: {
    titulo: 'titulo',
    mensaje: 'mensaje'
  };

  export type notificacionesOrderByRelevanceFieldEnum = (typeof notificacionesOrderByRelevanceFieldEnum)[keyof typeof notificacionesOrderByRelevanceFieldEnum]


  export const peliculasOrderByRelevanceFieldEnum: {
    titulo: 'titulo',
    sinopsis: 'sinopsis',
    imagen_portada: 'imagen_portada',
    url_video: 'url_video'
  };

  export type peliculasOrderByRelevanceFieldEnum = (typeof peliculasOrderByRelevanceFieldEnum)[keyof typeof peliculasOrderByRelevanceFieldEnum]


  export const planesOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type planesOrderByRelevanceFieldEnum = (typeof planesOrderByRelevanceFieldEnum)[keyof typeof planesOrderByRelevanceFieldEnum]


  export const productorasOrderByRelevanceFieldEnum: {
    nombre_productora: 'nombre_productora',
    pais_origen: 'pais_origen'
  };

  export type productorasOrderByRelevanceFieldEnum = (typeof productorasOrderByRelevanceFieldEnum)[keyof typeof productorasOrderByRelevanceFieldEnum]


  export const promocionesOrderByRelevanceFieldEnum: {
    titulo: 'titulo',
    descripcion: 'descripcion'
  };

  export type promocionesOrderByRelevanceFieldEnum = (typeof promocionesOrderByRelevanceFieldEnum)[keyof typeof promocionesOrderByRelevanceFieldEnum]


  export const repartoOrderByRelevanceFieldEnum: {
    rol: 'rol'
  };

  export type repartoOrderByRelevanceFieldEnum = (typeof repartoOrderByRelevanceFieldEnum)[keyof typeof repartoOrderByRelevanceFieldEnum]


  export const reportes_usuariosOrderByRelevanceFieldEnum: {
    descripcion: 'descripcion'
  };

  export type reportes_usuariosOrderByRelevanceFieldEnum = (typeof reportes_usuariosOrderByRelevanceFieldEnum)[keyof typeof reportes_usuariosOrderByRelevanceFieldEnum]


  export const roles_empleadosOrderByRelevanceFieldEnum: {
    nombre_rol: 'nombre_rol'
  };

  export type roles_empleadosOrderByRelevanceFieldEnum = (typeof roles_empleadosOrderByRelevanceFieldEnum)[keyof typeof roles_empleadosOrderByRelevanceFieldEnum]


  export const salasOrderByRelevanceFieldEnum: {
    nombre_sala: 'nombre_sala'
  };

  export type salasOrderByRelevanceFieldEnum = (typeof salasOrderByRelevanceFieldEnum)[keyof typeof salasOrderByRelevanceFieldEnum]


  export const usuariosOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    foto_perfil: 'foto_perfil'
  };

  export type usuariosOrderByRelevanceFieldEnum = (typeof usuariosOrderByRelevanceFieldEnum)[keyof typeof usuariosOrderByRelevanceFieldEnum]


  export const valoracionesOrderByRelevanceFieldEnum: {
    comentario: 'comentario'
  };

  export type valoracionesOrderByRelevanceFieldEnum = (typeof valoracionesOrderByRelevanceFieldEnum)[keyof typeof valoracionesOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'boletos_estado'
   */
  export type Enumboletos_estadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'boletos_estado'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'imagenes_extra_tipo'
   */
  export type Enumimagenes_extra_tipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'imagenes_extra_tipo'>
    


  /**
   * Reference to a field of type 'pagos_estado'
   */
  export type Enumpagos_estadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'pagos_estado'>
    


  /**
   * Reference to a field of type 'peliculas_tipo_contenido'
   */
  export type Enumpeliculas_tipo_contenidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'peliculas_tipo_contenido'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'reportes_usuarios_tipo_reporte'
   */
  export type Enumreportes_usuarios_tipo_reporteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'reportes_usuarios_tipo_reporte'>
    


  /**
   * Reference to a field of type 'reportes_usuarios_estado'
   */
  export type Enumreportes_usuarios_estadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'reportes_usuarios_estado'>
    


  /**
   * Reference to a field of type 'suscripciones_estado'
   */
  export type Enumsuscripciones_estadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'suscripciones_estado'>
    


  /**
   * Reference to a field of type 'usuarios_rol'
   */
  export type Enumusuarios_rolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'usuarios_rol'>
    
  /**
   * Deep Input Types
   */


  export type actoresWhereInput = {
    AND?: actoresWhereInput | actoresWhereInput[]
    OR?: actoresWhereInput[]
    NOT?: actoresWhereInput | actoresWhereInput[]
    id_actor?: IntFilter<"actores"> | number
    nombre_actor?: StringFilter<"actores"> | string
    apellido_actor?: StringNullableFilter<"actores"> | string | null
    fecha_nacimiento?: DateTimeNullableFilter<"actores"> | Date | string | null
    biografia?: StringNullableFilter<"actores"> | string | null
    reparto?: RepartoListRelationFilter
  }

  export type actoresOrderByWithRelationInput = {
    id_actor?: SortOrder
    nombre_actor?: SortOrder
    apellido_actor?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    reparto?: repartoOrderByRelationAggregateInput
    _relevance?: actoresOrderByRelevanceInput
  }

  export type actoresWhereUniqueInput = Prisma.AtLeast<{
    id_actor?: number
    AND?: actoresWhereInput | actoresWhereInput[]
    OR?: actoresWhereInput[]
    NOT?: actoresWhereInput | actoresWhereInput[]
    nombre_actor?: StringFilter<"actores"> | string
    apellido_actor?: StringNullableFilter<"actores"> | string | null
    fecha_nacimiento?: DateTimeNullableFilter<"actores"> | Date | string | null
    biografia?: StringNullableFilter<"actores"> | string | null
    reparto?: RepartoListRelationFilter
  }, "id_actor">

  export type actoresOrderByWithAggregationInput = {
    id_actor?: SortOrder
    nombre_actor?: SortOrder
    apellido_actor?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    _count?: actoresCountOrderByAggregateInput
    _avg?: actoresAvgOrderByAggregateInput
    _max?: actoresMaxOrderByAggregateInput
    _min?: actoresMinOrderByAggregateInput
    _sum?: actoresSumOrderByAggregateInput
  }

  export type actoresScalarWhereWithAggregatesInput = {
    AND?: actoresScalarWhereWithAggregatesInput | actoresScalarWhereWithAggregatesInput[]
    OR?: actoresScalarWhereWithAggregatesInput[]
    NOT?: actoresScalarWhereWithAggregatesInput | actoresScalarWhereWithAggregatesInput[]
    id_actor?: IntWithAggregatesFilter<"actores"> | number
    nombre_actor?: StringWithAggregatesFilter<"actores"> | string
    apellido_actor?: StringNullableWithAggregatesFilter<"actores"> | string | null
    fecha_nacimiento?: DateTimeNullableWithAggregatesFilter<"actores"> | Date | string | null
    biografia?: StringNullableWithAggregatesFilter<"actores"> | string | null
  }

  export type boletosWhereInput = {
    AND?: boletosWhereInput | boletosWhereInput[]
    OR?: boletosWhereInput[]
    NOT?: boletosWhereInput | boletosWhereInput[]
    id_boleto?: IntFilter<"boletos"> | number
    id_funcion?: IntFilter<"boletos"> | number
    id_usuario?: IntFilter<"boletos"> | number
    asiento?: StringNullableFilter<"boletos"> | string | null
    estado?: Enumboletos_estadoNullableFilter<"boletos"> | $Enums.boletos_estado | null
    funciones?: XOR<FuncionesScalarRelationFilter, funcionesWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    logs_actividad?: Logs_actividadListRelationFilter
  }

  export type boletosOrderByWithRelationInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
    asiento?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    funciones?: funcionesOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    logs_actividad?: logs_actividadOrderByRelationAggregateInput
    _relevance?: boletosOrderByRelevanceInput
  }

  export type boletosWhereUniqueInput = Prisma.AtLeast<{
    id_boleto?: number
    AND?: boletosWhereInput | boletosWhereInput[]
    OR?: boletosWhereInput[]
    NOT?: boletosWhereInput | boletosWhereInput[]
    id_funcion?: IntFilter<"boletos"> | number
    id_usuario?: IntFilter<"boletos"> | number
    asiento?: StringNullableFilter<"boletos"> | string | null
    estado?: Enumboletos_estadoNullableFilter<"boletos"> | $Enums.boletos_estado | null
    funciones?: XOR<FuncionesScalarRelationFilter, funcionesWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    logs_actividad?: Logs_actividadListRelationFilter
  }, "id_boleto">

  export type boletosOrderByWithAggregationInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
    asiento?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: boletosCountOrderByAggregateInput
    _avg?: boletosAvgOrderByAggregateInput
    _max?: boletosMaxOrderByAggregateInput
    _min?: boletosMinOrderByAggregateInput
    _sum?: boletosSumOrderByAggregateInput
  }

  export type boletosScalarWhereWithAggregatesInput = {
    AND?: boletosScalarWhereWithAggregatesInput | boletosScalarWhereWithAggregatesInput[]
    OR?: boletosScalarWhereWithAggregatesInput[]
    NOT?: boletosScalarWhereWithAggregatesInput | boletosScalarWhereWithAggregatesInput[]
    id_boleto?: IntWithAggregatesFilter<"boletos"> | number
    id_funcion?: IntWithAggregatesFilter<"boletos"> | number
    id_usuario?: IntWithAggregatesFilter<"boletos"> | number
    asiento?: StringNullableWithAggregatesFilter<"boletos"> | string | null
    estado?: Enumboletos_estadoNullableWithAggregatesFilter<"boletos"> | $Enums.boletos_estado | null
  }

  export type candy_barWhereInput = {
    AND?: candy_barWhereInput | candy_barWhereInput[]
    OR?: candy_barWhereInput[]
    NOT?: candy_barWhereInput | candy_barWhereInput[]
    id_producto?: IntFilter<"candy_bar"> | number
    nombre_producto?: StringFilter<"candy_bar"> | string
    descripcion?: StringFilter<"candy_bar"> | string
    precio?: DecimalFilter<"candy_bar"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableFilter<"candy_bar"> | string | null
    es_promocion?: BoolFilter<"candy_bar"> | boolean
    precio_promocional?: DecimalNullableFilter<"candy_bar"> | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: DateTimeNullableFilter<"candy_bar"> | Date | string | null
    promo_fecha_fin?: DateTimeNullableFilter<"candy_bar"> | Date | string | null
    categoria?: StringNullableFilter<"candy_bar"> | string | null
    stock?: IntNullableFilter<"candy_bar"> | number | null
  }

  export type candy_barOrderByWithRelationInput = {
    id_producto?: SortOrder
    nombre_producto?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrderInput | SortOrder
    es_promocion?: SortOrder
    precio_promocional?: SortOrderInput | SortOrder
    promo_fecha_inicio?: SortOrderInput | SortOrder
    promo_fecha_fin?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    stock?: SortOrderInput | SortOrder
    _relevance?: candy_barOrderByRelevanceInput
  }

  export type candy_barWhereUniqueInput = Prisma.AtLeast<{
    id_producto?: number
    AND?: candy_barWhereInput | candy_barWhereInput[]
    OR?: candy_barWhereInput[]
    NOT?: candy_barWhereInput | candy_barWhereInput[]
    nombre_producto?: StringFilter<"candy_bar"> | string
    descripcion?: StringFilter<"candy_bar"> | string
    precio?: DecimalFilter<"candy_bar"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableFilter<"candy_bar"> | string | null
    es_promocion?: BoolFilter<"candy_bar"> | boolean
    precio_promocional?: DecimalNullableFilter<"candy_bar"> | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: DateTimeNullableFilter<"candy_bar"> | Date | string | null
    promo_fecha_fin?: DateTimeNullableFilter<"candy_bar"> | Date | string | null
    categoria?: StringNullableFilter<"candy_bar"> | string | null
    stock?: IntNullableFilter<"candy_bar"> | number | null
  }, "id_producto">

  export type candy_barOrderByWithAggregationInput = {
    id_producto?: SortOrder
    nombre_producto?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrderInput | SortOrder
    es_promocion?: SortOrder
    precio_promocional?: SortOrderInput | SortOrder
    promo_fecha_inicio?: SortOrderInput | SortOrder
    promo_fecha_fin?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    stock?: SortOrderInput | SortOrder
    _count?: candy_barCountOrderByAggregateInput
    _avg?: candy_barAvgOrderByAggregateInput
    _max?: candy_barMaxOrderByAggregateInput
    _min?: candy_barMinOrderByAggregateInput
    _sum?: candy_barSumOrderByAggregateInput
  }

  export type candy_barScalarWhereWithAggregatesInput = {
    AND?: candy_barScalarWhereWithAggregatesInput | candy_barScalarWhereWithAggregatesInput[]
    OR?: candy_barScalarWhereWithAggregatesInput[]
    NOT?: candy_barScalarWhereWithAggregatesInput | candy_barScalarWhereWithAggregatesInput[]
    id_producto?: IntWithAggregatesFilter<"candy_bar"> | number
    nombre_producto?: StringWithAggregatesFilter<"candy_bar"> | string
    descripcion?: StringWithAggregatesFilter<"candy_bar"> | string
    precio?: DecimalWithAggregatesFilter<"candy_bar"> | Decimal | DecimalJsLike | number | string
    imagen_url?: StringNullableWithAggregatesFilter<"candy_bar"> | string | null
    es_promocion?: BoolWithAggregatesFilter<"candy_bar"> | boolean
    precio_promocional?: DecimalNullableWithAggregatesFilter<"candy_bar"> | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: DateTimeNullableWithAggregatesFilter<"candy_bar"> | Date | string | null
    promo_fecha_fin?: DateTimeNullableWithAggregatesFilter<"candy_bar"> | Date | string | null
    categoria?: StringNullableWithAggregatesFilter<"candy_bar"> | string | null
    stock?: IntNullableWithAggregatesFilter<"candy_bar"> | number | null
  }

  export type cartelerasWhereInput = {
    AND?: cartelerasWhereInput | cartelerasWhereInput[]
    OR?: cartelerasWhereInput[]
    NOT?: cartelerasWhereInput | cartelerasWhereInput[]
    id_cartelera?: IntFilter<"carteleras"> | number
    fecha_inicio?: DateTimeFilter<"carteleras"> | Date | string
    fecha_fin?: DateTimeFilter<"carteleras"> | Date | string
    descripcion?: StringNullableFilter<"carteleras"> | string | null
    funciones?: FuncionesListRelationFilter
  }

  export type cartelerasOrderByWithRelationInput = {
    id_cartelera?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    funciones?: funcionesOrderByRelationAggregateInput
    _relevance?: cartelerasOrderByRelevanceInput
  }

  export type cartelerasWhereUniqueInput = Prisma.AtLeast<{
    id_cartelera?: number
    AND?: cartelerasWhereInput | cartelerasWhereInput[]
    OR?: cartelerasWhereInput[]
    NOT?: cartelerasWhereInput | cartelerasWhereInput[]
    fecha_inicio?: DateTimeFilter<"carteleras"> | Date | string
    fecha_fin?: DateTimeFilter<"carteleras"> | Date | string
    descripcion?: StringNullableFilter<"carteleras"> | string | null
    funciones?: FuncionesListRelationFilter
  }, "id_cartelera">

  export type cartelerasOrderByWithAggregationInput = {
    id_cartelera?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: cartelerasCountOrderByAggregateInput
    _avg?: cartelerasAvgOrderByAggregateInput
    _max?: cartelerasMaxOrderByAggregateInput
    _min?: cartelerasMinOrderByAggregateInput
    _sum?: cartelerasSumOrderByAggregateInput
  }

  export type cartelerasScalarWhereWithAggregatesInput = {
    AND?: cartelerasScalarWhereWithAggregatesInput | cartelerasScalarWhereWithAggregatesInput[]
    OR?: cartelerasScalarWhereWithAggregatesInput[]
    NOT?: cartelerasScalarWhereWithAggregatesInput | cartelerasScalarWhereWithAggregatesInput[]
    id_cartelera?: IntWithAggregatesFilter<"carteleras"> | number
    fecha_inicio?: DateTimeWithAggregatesFilter<"carteleras"> | Date | string
    fecha_fin?: DateTimeWithAggregatesFilter<"carteleras"> | Date | string
    descripcion?: StringNullableWithAggregatesFilter<"carteleras"> | string | null
  }

  export type cinesWhereInput = {
    AND?: cinesWhereInput | cinesWhereInput[]
    OR?: cinesWhereInput[]
    NOT?: cinesWhereInput | cinesWhereInput[]
    id_cine?: IntFilter<"cines"> | number
    nombre_cine?: StringFilter<"cines"> | string
    direccion?: StringNullableFilter<"cines"> | string | null
    telefono?: StringNullableFilter<"cines"> | string | null
    facebook_url?: StringNullableFilter<"cines"> | string | null
    instagram_url?: StringNullableFilter<"cines"> | string | null
    tiktok_url?: StringNullableFilter<"cines"> | string | null
    email?: StringNullableFilter<"cines"> | string | null
    ubicacion_url?: StringNullableFilter<"cines"> | string | null
    empleados?: EmpleadosListRelationFilter
    salas?: SalasListRelationFilter
  }

  export type cinesOrderByWithRelationInput = {
    id_cine?: SortOrder
    nombre_cine?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    facebook_url?: SortOrderInput | SortOrder
    instagram_url?: SortOrderInput | SortOrder
    tiktok_url?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    ubicacion_url?: SortOrderInput | SortOrder
    empleados?: empleadosOrderByRelationAggregateInput
    salas?: salasOrderByRelationAggregateInput
    _relevance?: cinesOrderByRelevanceInput
  }

  export type cinesWhereUniqueInput = Prisma.AtLeast<{
    id_cine?: number
    AND?: cinesWhereInput | cinesWhereInput[]
    OR?: cinesWhereInput[]
    NOT?: cinesWhereInput | cinesWhereInput[]
    nombre_cine?: StringFilter<"cines"> | string
    direccion?: StringNullableFilter<"cines"> | string | null
    telefono?: StringNullableFilter<"cines"> | string | null
    facebook_url?: StringNullableFilter<"cines"> | string | null
    instagram_url?: StringNullableFilter<"cines"> | string | null
    tiktok_url?: StringNullableFilter<"cines"> | string | null
    email?: StringNullableFilter<"cines"> | string | null
    ubicacion_url?: StringNullableFilter<"cines"> | string | null
    empleados?: EmpleadosListRelationFilter
    salas?: SalasListRelationFilter
  }, "id_cine">

  export type cinesOrderByWithAggregationInput = {
    id_cine?: SortOrder
    nombre_cine?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    facebook_url?: SortOrderInput | SortOrder
    instagram_url?: SortOrderInput | SortOrder
    tiktok_url?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    ubicacion_url?: SortOrderInput | SortOrder
    _count?: cinesCountOrderByAggregateInput
    _avg?: cinesAvgOrderByAggregateInput
    _max?: cinesMaxOrderByAggregateInput
    _min?: cinesMinOrderByAggregateInput
    _sum?: cinesSumOrderByAggregateInput
  }

  export type cinesScalarWhereWithAggregatesInput = {
    AND?: cinesScalarWhereWithAggregatesInput | cinesScalarWhereWithAggregatesInput[]
    OR?: cinesScalarWhereWithAggregatesInput[]
    NOT?: cinesScalarWhereWithAggregatesInput | cinesScalarWhereWithAggregatesInput[]
    id_cine?: IntWithAggregatesFilter<"cines"> | number
    nombre_cine?: StringWithAggregatesFilter<"cines"> | string
    direccion?: StringNullableWithAggregatesFilter<"cines"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"cines"> | string | null
    facebook_url?: StringNullableWithAggregatesFilter<"cines"> | string | null
    instagram_url?: StringNullableWithAggregatesFilter<"cines"> | string | null
    tiktok_url?: StringNullableWithAggregatesFilter<"cines"> | string | null
    email?: StringNullableWithAggregatesFilter<"cines"> | string | null
    ubicacion_url?: StringNullableWithAggregatesFilter<"cines"> | string | null
  }

  export type clasificacionesWhereInput = {
    AND?: clasificacionesWhereInput | clasificacionesWhereInput[]
    OR?: clasificacionesWhereInput[]
    NOT?: clasificacionesWhereInput | clasificacionesWhereInput[]
    id_clasificacion?: IntFilter<"clasificaciones"> | number
    codigo?: StringFilter<"clasificaciones"> | string
    descripcion?: StringNullableFilter<"clasificaciones"> | string | null
    peliculas?: PeliculasListRelationFilter
  }

  export type clasificacionesOrderByWithRelationInput = {
    id_clasificacion?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    peliculas?: peliculasOrderByRelationAggregateInput
    _relevance?: clasificacionesOrderByRelevanceInput
  }

  export type clasificacionesWhereUniqueInput = Prisma.AtLeast<{
    id_clasificacion?: number
    codigo?: string
    AND?: clasificacionesWhereInput | clasificacionesWhereInput[]
    OR?: clasificacionesWhereInput[]
    NOT?: clasificacionesWhereInput | clasificacionesWhereInput[]
    descripcion?: StringNullableFilter<"clasificaciones"> | string | null
    peliculas?: PeliculasListRelationFilter
  }, "id_clasificacion" | "codigo">

  export type clasificacionesOrderByWithAggregationInput = {
    id_clasificacion?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: clasificacionesCountOrderByAggregateInput
    _avg?: clasificacionesAvgOrderByAggregateInput
    _max?: clasificacionesMaxOrderByAggregateInput
    _min?: clasificacionesMinOrderByAggregateInput
    _sum?: clasificacionesSumOrderByAggregateInput
  }

  export type clasificacionesScalarWhereWithAggregatesInput = {
    AND?: clasificacionesScalarWhereWithAggregatesInput | clasificacionesScalarWhereWithAggregatesInput[]
    OR?: clasificacionesScalarWhereWithAggregatesInput[]
    NOT?: clasificacionesScalarWhereWithAggregatesInput | clasificacionesScalarWhereWithAggregatesInput[]
    id_clasificacion?: IntWithAggregatesFilter<"clasificaciones"> | number
    codigo?: StringWithAggregatesFilter<"clasificaciones"> | string
    descripcion?: StringNullableWithAggregatesFilter<"clasificaciones"> | string | null
  }

  export type directoresWhereInput = {
    AND?: directoresWhereInput | directoresWhereInput[]
    OR?: directoresWhereInput[]
    NOT?: directoresWhereInput | directoresWhereInput[]
    id_director?: IntFilter<"directores"> | number
    nombre_director?: StringFilter<"directores"> | string
    apellido_director?: StringNullableFilter<"directores"> | string | null
    biografia?: StringNullableFilter<"directores"> | string | null
    peliculas_directores?: Peliculas_directoresListRelationFilter
  }

  export type directoresOrderByWithRelationInput = {
    id_director?: SortOrder
    nombre_director?: SortOrder
    apellido_director?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    peliculas_directores?: peliculas_directoresOrderByRelationAggregateInput
    _relevance?: directoresOrderByRelevanceInput
  }

  export type directoresWhereUniqueInput = Prisma.AtLeast<{
    id_director?: number
    AND?: directoresWhereInput | directoresWhereInput[]
    OR?: directoresWhereInput[]
    NOT?: directoresWhereInput | directoresWhereInput[]
    nombre_director?: StringFilter<"directores"> | string
    apellido_director?: StringNullableFilter<"directores"> | string | null
    biografia?: StringNullableFilter<"directores"> | string | null
    peliculas_directores?: Peliculas_directoresListRelationFilter
  }, "id_director">

  export type directoresOrderByWithAggregationInput = {
    id_director?: SortOrder
    nombre_director?: SortOrder
    apellido_director?: SortOrderInput | SortOrder
    biografia?: SortOrderInput | SortOrder
    _count?: directoresCountOrderByAggregateInput
    _avg?: directoresAvgOrderByAggregateInput
    _max?: directoresMaxOrderByAggregateInput
    _min?: directoresMinOrderByAggregateInput
    _sum?: directoresSumOrderByAggregateInput
  }

  export type directoresScalarWhereWithAggregatesInput = {
    AND?: directoresScalarWhereWithAggregatesInput | directoresScalarWhereWithAggregatesInput[]
    OR?: directoresScalarWhereWithAggregatesInput[]
    NOT?: directoresScalarWhereWithAggregatesInput | directoresScalarWhereWithAggregatesInput[]
    id_director?: IntWithAggregatesFilter<"directores"> | number
    nombre_director?: StringWithAggregatesFilter<"directores"> | string
    apellido_director?: StringNullableWithAggregatesFilter<"directores"> | string | null
    biografia?: StringNullableWithAggregatesFilter<"directores"> | string | null
  }

  export type empleadosWhereInput = {
    AND?: empleadosWhereInput | empleadosWhereInput[]
    OR?: empleadosWhereInput[]
    NOT?: empleadosWhereInput | empleadosWhereInput[]
    id_empleado?: IntFilter<"empleados"> | number
    nombre?: StringNullableFilter<"empleados"> | string | null
    apellido?: StringNullableFilter<"empleados"> | string | null
    ci?: StringNullableFilter<"empleados"> | string | null
    correo?: StringNullableFilter<"empleados"> | string | null
    telefono?: StringNullableFilter<"empleados"> | string | null
    fecha_contrato?: DateTimeNullableFilter<"empleados"> | Date | string | null
    id_cine?: IntNullableFilter<"empleados"> | number | null
    id_rol?: IntNullableFilter<"empleados"> | number | null
    usuario_sistema?: BoolNullableFilter<"empleados"> | boolean | null
    cines?: XOR<CinesNullableScalarRelationFilter, cinesWhereInput> | null
    roles_empleados?: XOR<Roles_empleadosNullableScalarRelationFilter, roles_empleadosWhereInput> | null
    logs_actividad?: Logs_actividadListRelationFilter
    notificaciones?: NotificacionesListRelationFilter
  }

  export type empleadosOrderByWithRelationInput = {
    id_empleado?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    ci?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    fecha_contrato?: SortOrderInput | SortOrder
    id_cine?: SortOrderInput | SortOrder
    id_rol?: SortOrderInput | SortOrder
    usuario_sistema?: SortOrderInput | SortOrder
    cines?: cinesOrderByWithRelationInput
    roles_empleados?: roles_empleadosOrderByWithRelationInput
    logs_actividad?: logs_actividadOrderByRelationAggregateInput
    notificaciones?: notificacionesOrderByRelationAggregateInput
    _relevance?: empleadosOrderByRelevanceInput
  }

  export type empleadosWhereUniqueInput = Prisma.AtLeast<{
    id_empleado?: number
    ci?: string
    AND?: empleadosWhereInput | empleadosWhereInput[]
    OR?: empleadosWhereInput[]
    NOT?: empleadosWhereInput | empleadosWhereInput[]
    nombre?: StringNullableFilter<"empleados"> | string | null
    apellido?: StringNullableFilter<"empleados"> | string | null
    correo?: StringNullableFilter<"empleados"> | string | null
    telefono?: StringNullableFilter<"empleados"> | string | null
    fecha_contrato?: DateTimeNullableFilter<"empleados"> | Date | string | null
    id_cine?: IntNullableFilter<"empleados"> | number | null
    id_rol?: IntNullableFilter<"empleados"> | number | null
    usuario_sistema?: BoolNullableFilter<"empleados"> | boolean | null
    cines?: XOR<CinesNullableScalarRelationFilter, cinesWhereInput> | null
    roles_empleados?: XOR<Roles_empleadosNullableScalarRelationFilter, roles_empleadosWhereInput> | null
    logs_actividad?: Logs_actividadListRelationFilter
    notificaciones?: NotificacionesListRelationFilter
  }, "id_empleado" | "ci">

  export type empleadosOrderByWithAggregationInput = {
    id_empleado?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    ci?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    fecha_contrato?: SortOrderInput | SortOrder
    id_cine?: SortOrderInput | SortOrder
    id_rol?: SortOrderInput | SortOrder
    usuario_sistema?: SortOrderInput | SortOrder
    _count?: empleadosCountOrderByAggregateInput
    _avg?: empleadosAvgOrderByAggregateInput
    _max?: empleadosMaxOrderByAggregateInput
    _min?: empleadosMinOrderByAggregateInput
    _sum?: empleadosSumOrderByAggregateInput
  }

  export type empleadosScalarWhereWithAggregatesInput = {
    AND?: empleadosScalarWhereWithAggregatesInput | empleadosScalarWhereWithAggregatesInput[]
    OR?: empleadosScalarWhereWithAggregatesInput[]
    NOT?: empleadosScalarWhereWithAggregatesInput | empleadosScalarWhereWithAggregatesInput[]
    id_empleado?: IntWithAggregatesFilter<"empleados"> | number
    nombre?: StringNullableWithAggregatesFilter<"empleados"> | string | null
    apellido?: StringNullableWithAggregatesFilter<"empleados"> | string | null
    ci?: StringNullableWithAggregatesFilter<"empleados"> | string | null
    correo?: StringNullableWithAggregatesFilter<"empleados"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"empleados"> | string | null
    fecha_contrato?: DateTimeNullableWithAggregatesFilter<"empleados"> | Date | string | null
    id_cine?: IntNullableWithAggregatesFilter<"empleados"> | number | null
    id_rol?: IntNullableWithAggregatesFilter<"empleados"> | number | null
    usuario_sistema?: BoolNullableWithAggregatesFilter<"empleados"> | boolean | null
  }

  export type funcionesWhereInput = {
    AND?: funcionesWhereInput | funcionesWhereInput[]
    OR?: funcionesWhereInput[]
    NOT?: funcionesWhereInput | funcionesWhereInput[]
    id_funcion?: IntFilter<"funciones"> | number
    id_cartelera?: IntFilter<"funciones"> | number
    id_sala?: IntFilter<"funciones"> | number
    id_pelicula?: IntFilter<"funciones"> | number
    fecha_hora_inicio?: DateTimeNullableFilter<"funciones"> | Date | string | null
    fecha_hora_fin?: DateTimeNullableFilter<"funciones"> | Date | string | null
    precio_boleto?: DecimalNullableFilter<"funciones"> | Decimal | DecimalJsLike | number | string | null
    boletos?: BoletosListRelationFilter
    carteleras?: XOR<CartelerasScalarRelationFilter, cartelerasWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
    salas?: XOR<SalasScalarRelationFilter, salasWhereInput>
  }

  export type funcionesOrderByWithRelationInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    fecha_hora_inicio?: SortOrderInput | SortOrder
    fecha_hora_fin?: SortOrderInput | SortOrder
    precio_boleto?: SortOrderInput | SortOrder
    boletos?: boletosOrderByRelationAggregateInput
    carteleras?: cartelerasOrderByWithRelationInput
    peliculas?: peliculasOrderByWithRelationInput
    salas?: salasOrderByWithRelationInput
  }

  export type funcionesWhereUniqueInput = Prisma.AtLeast<{
    id_funcion?: number
    AND?: funcionesWhereInput | funcionesWhereInput[]
    OR?: funcionesWhereInput[]
    NOT?: funcionesWhereInput | funcionesWhereInput[]
    id_cartelera?: IntFilter<"funciones"> | number
    id_sala?: IntFilter<"funciones"> | number
    id_pelicula?: IntFilter<"funciones"> | number
    fecha_hora_inicio?: DateTimeNullableFilter<"funciones"> | Date | string | null
    fecha_hora_fin?: DateTimeNullableFilter<"funciones"> | Date | string | null
    precio_boleto?: DecimalNullableFilter<"funciones"> | Decimal | DecimalJsLike | number | string | null
    boletos?: BoletosListRelationFilter
    carteleras?: XOR<CartelerasScalarRelationFilter, cartelerasWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
    salas?: XOR<SalasScalarRelationFilter, salasWhereInput>
  }, "id_funcion">

  export type funcionesOrderByWithAggregationInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    fecha_hora_inicio?: SortOrderInput | SortOrder
    fecha_hora_fin?: SortOrderInput | SortOrder
    precio_boleto?: SortOrderInput | SortOrder
    _count?: funcionesCountOrderByAggregateInput
    _avg?: funcionesAvgOrderByAggregateInput
    _max?: funcionesMaxOrderByAggregateInput
    _min?: funcionesMinOrderByAggregateInput
    _sum?: funcionesSumOrderByAggregateInput
  }

  export type funcionesScalarWhereWithAggregatesInput = {
    AND?: funcionesScalarWhereWithAggregatesInput | funcionesScalarWhereWithAggregatesInput[]
    OR?: funcionesScalarWhereWithAggregatesInput[]
    NOT?: funcionesScalarWhereWithAggregatesInput | funcionesScalarWhereWithAggregatesInput[]
    id_funcion?: IntWithAggregatesFilter<"funciones"> | number
    id_cartelera?: IntWithAggregatesFilter<"funciones"> | number
    id_sala?: IntWithAggregatesFilter<"funciones"> | number
    id_pelicula?: IntWithAggregatesFilter<"funciones"> | number
    fecha_hora_inicio?: DateTimeNullableWithAggregatesFilter<"funciones"> | Date | string | null
    fecha_hora_fin?: DateTimeNullableWithAggregatesFilter<"funciones"> | Date | string | null
    precio_boleto?: DecimalNullableWithAggregatesFilter<"funciones"> | Decimal | DecimalJsLike | number | string | null
  }

  export type generosWhereInput = {
    AND?: generosWhereInput | generosWhereInput[]
    OR?: generosWhereInput[]
    NOT?: generosWhereInput | generosWhereInput[]
    id_genero?: IntFilter<"generos"> | number
    nombre_genero?: StringFilter<"generos"> | string
    peliculas_generos?: Peliculas_generosListRelationFilter
  }

  export type generosOrderByWithRelationInput = {
    id_genero?: SortOrder
    nombre_genero?: SortOrder
    peliculas_generos?: peliculas_generosOrderByRelationAggregateInput
    _relevance?: generosOrderByRelevanceInput
  }

  export type generosWhereUniqueInput = Prisma.AtLeast<{
    id_genero?: number
    AND?: generosWhereInput | generosWhereInput[]
    OR?: generosWhereInput[]
    NOT?: generosWhereInput | generosWhereInput[]
    nombre_genero?: StringFilter<"generos"> | string
    peliculas_generos?: Peliculas_generosListRelationFilter
  }, "id_genero">

  export type generosOrderByWithAggregationInput = {
    id_genero?: SortOrder
    nombre_genero?: SortOrder
    _count?: generosCountOrderByAggregateInput
    _avg?: generosAvgOrderByAggregateInput
    _max?: generosMaxOrderByAggregateInput
    _min?: generosMinOrderByAggregateInput
    _sum?: generosSumOrderByAggregateInput
  }

  export type generosScalarWhereWithAggregatesInput = {
    AND?: generosScalarWhereWithAggregatesInput | generosScalarWhereWithAggregatesInput[]
    OR?: generosScalarWhereWithAggregatesInput[]
    NOT?: generosScalarWhereWithAggregatesInput | generosScalarWhereWithAggregatesInput[]
    id_genero?: IntWithAggregatesFilter<"generos"> | number
    nombre_genero?: StringWithAggregatesFilter<"generos"> | string
  }

  export type historial_reproduccionWhereInput = {
    AND?: historial_reproduccionWhereInput | historial_reproduccionWhereInput[]
    OR?: historial_reproduccionWhereInput[]
    NOT?: historial_reproduccionWhereInput | historial_reproduccionWhereInput[]
    id_usuario?: IntFilter<"historial_reproduccion"> | number
    id_pelicula?: IntFilter<"historial_reproduccion"> | number
    fecha_visualizacion?: DateTimeNullableFilter<"historial_reproduccion"> | Date | string | null
    progreso_visto_porcentaje?: IntNullableFilter<"historial_reproduccion"> | number | null
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type historial_reproduccionOrderByWithRelationInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    fecha_visualizacion?: SortOrderInput | SortOrder
    progreso_visto_porcentaje?: SortOrderInput | SortOrder
    peliculas?: peliculasOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type historial_reproduccionWhereUniqueInput = Prisma.AtLeast<{
    id_usuario_id_pelicula?: historial_reproduccionId_usuarioId_peliculaCompoundUniqueInput
    AND?: historial_reproduccionWhereInput | historial_reproduccionWhereInput[]
    OR?: historial_reproduccionWhereInput[]
    NOT?: historial_reproduccionWhereInput | historial_reproduccionWhereInput[]
    id_usuario?: IntFilter<"historial_reproduccion"> | number
    id_pelicula?: IntFilter<"historial_reproduccion"> | number
    fecha_visualizacion?: DateTimeNullableFilter<"historial_reproduccion"> | Date | string | null
    progreso_visto_porcentaje?: IntNullableFilter<"historial_reproduccion"> | number | null
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id_usuario_id_pelicula">

  export type historial_reproduccionOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    fecha_visualizacion?: SortOrderInput | SortOrder
    progreso_visto_porcentaje?: SortOrderInput | SortOrder
    _count?: historial_reproduccionCountOrderByAggregateInput
    _avg?: historial_reproduccionAvgOrderByAggregateInput
    _max?: historial_reproduccionMaxOrderByAggregateInput
    _min?: historial_reproduccionMinOrderByAggregateInput
    _sum?: historial_reproduccionSumOrderByAggregateInput
  }

  export type historial_reproduccionScalarWhereWithAggregatesInput = {
    AND?: historial_reproduccionScalarWhereWithAggregatesInput | historial_reproduccionScalarWhereWithAggregatesInput[]
    OR?: historial_reproduccionScalarWhereWithAggregatesInput[]
    NOT?: historial_reproduccionScalarWhereWithAggregatesInput | historial_reproduccionScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"historial_reproduccion"> | number
    id_pelicula?: IntWithAggregatesFilter<"historial_reproduccion"> | number
    fecha_visualizacion?: DateTimeNullableWithAggregatesFilter<"historial_reproduccion"> | Date | string | null
    progreso_visto_porcentaje?: IntNullableWithAggregatesFilter<"historial_reproduccion"> | number | null
  }

  export type imagenes_extraWhereInput = {
    AND?: imagenes_extraWhereInput | imagenes_extraWhereInput[]
    OR?: imagenes_extraWhereInput[]
    NOT?: imagenes_extraWhereInput | imagenes_extraWhereInput[]
    id_imagen_extra?: IntFilter<"imagenes_extra"> | number
    tipo?: Enumimagenes_extra_tipoFilter<"imagenes_extra"> | $Enums.imagenes_extra_tipo
    nombre?: StringFilter<"imagenes_extra"> | string
    url?: StringFilter<"imagenes_extra"> | string
    descripcion?: StringNullableFilter<"imagenes_extra"> | string | null
  }

  export type imagenes_extraOrderByWithRelationInput = {
    id_imagen_extra?: SortOrder
    tipo?: SortOrder
    nombre?: SortOrder
    url?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _relevance?: imagenes_extraOrderByRelevanceInput
  }

  export type imagenes_extraWhereUniqueInput = Prisma.AtLeast<{
    id_imagen_extra?: number
    AND?: imagenes_extraWhereInput | imagenes_extraWhereInput[]
    OR?: imagenes_extraWhereInput[]
    NOT?: imagenes_extraWhereInput | imagenes_extraWhereInput[]
    tipo?: Enumimagenes_extra_tipoFilter<"imagenes_extra"> | $Enums.imagenes_extra_tipo
    nombre?: StringFilter<"imagenes_extra"> | string
    url?: StringFilter<"imagenes_extra"> | string
    descripcion?: StringNullableFilter<"imagenes_extra"> | string | null
  }, "id_imagen_extra">

  export type imagenes_extraOrderByWithAggregationInput = {
    id_imagen_extra?: SortOrder
    tipo?: SortOrder
    nombre?: SortOrder
    url?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: imagenes_extraCountOrderByAggregateInput
    _avg?: imagenes_extraAvgOrderByAggregateInput
    _max?: imagenes_extraMaxOrderByAggregateInput
    _min?: imagenes_extraMinOrderByAggregateInput
    _sum?: imagenes_extraSumOrderByAggregateInput
  }

  export type imagenes_extraScalarWhereWithAggregatesInput = {
    AND?: imagenes_extraScalarWhereWithAggregatesInput | imagenes_extraScalarWhereWithAggregatesInput[]
    OR?: imagenes_extraScalarWhereWithAggregatesInput[]
    NOT?: imagenes_extraScalarWhereWithAggregatesInput | imagenes_extraScalarWhereWithAggregatesInput[]
    id_imagen_extra?: IntWithAggregatesFilter<"imagenes_extra"> | number
    tipo?: Enumimagenes_extra_tipoWithAggregatesFilter<"imagenes_extra"> | $Enums.imagenes_extra_tipo
    nombre?: StringWithAggregatesFilter<"imagenes_extra"> | string
    url?: StringWithAggregatesFilter<"imagenes_extra"> | string
    descripcion?: StringNullableWithAggregatesFilter<"imagenes_extra"> | string | null
  }

  export type intentos_loginWhereInput = {
    AND?: intentos_loginWhereInput | intentos_loginWhereInput[]
    OR?: intentos_loginWhereInput[]
    NOT?: intentos_loginWhereInput | intentos_loginWhereInput[]
    id?: IntFilter<"intentos_login"> | number
    id_usuario?: IntNullableFilter<"intentos_login"> | number | null
    exito?: BoolNullableFilter<"intentos_login"> | boolean | null
    ip_origen?: StringNullableFilter<"intentos_login"> | string | null
    fecha?: DateTimeNullableFilter<"intentos_login"> | Date | string | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }

  export type intentos_loginOrderByWithRelationInput = {
    id?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    exito?: SortOrderInput | SortOrder
    ip_origen?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByWithRelationInput
    _relevance?: intentos_loginOrderByRelevanceInput
  }

  export type intentos_loginWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: intentos_loginWhereInput | intentos_loginWhereInput[]
    OR?: intentos_loginWhereInput[]
    NOT?: intentos_loginWhereInput | intentos_loginWhereInput[]
    id_usuario?: IntNullableFilter<"intentos_login"> | number | null
    exito?: BoolNullableFilter<"intentos_login"> | boolean | null
    ip_origen?: StringNullableFilter<"intentos_login"> | string | null
    fecha?: DateTimeNullableFilter<"intentos_login"> | Date | string | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }, "id">

  export type intentos_loginOrderByWithAggregationInput = {
    id?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    exito?: SortOrderInput | SortOrder
    ip_origen?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    _count?: intentos_loginCountOrderByAggregateInput
    _avg?: intentos_loginAvgOrderByAggregateInput
    _max?: intentos_loginMaxOrderByAggregateInput
    _min?: intentos_loginMinOrderByAggregateInput
    _sum?: intentos_loginSumOrderByAggregateInput
  }

  export type intentos_loginScalarWhereWithAggregatesInput = {
    AND?: intentos_loginScalarWhereWithAggregatesInput | intentos_loginScalarWhereWithAggregatesInput[]
    OR?: intentos_loginScalarWhereWithAggregatesInput[]
    NOT?: intentos_loginScalarWhereWithAggregatesInput | intentos_loginScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"intentos_login"> | number
    id_usuario?: IntNullableWithAggregatesFilter<"intentos_login"> | number | null
    exito?: BoolNullableWithAggregatesFilter<"intentos_login"> | boolean | null
    ip_origen?: StringNullableWithAggregatesFilter<"intentos_login"> | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"intentos_login"> | Date | string | null
  }

  export type logs_actividadWhereInput = {
    AND?: logs_actividadWhereInput | logs_actividadWhereInput[]
    OR?: logs_actividadWhereInput[]
    NOT?: logs_actividadWhereInput | logs_actividadWhereInput[]
    id_log?: IntFilter<"logs_actividad"> | number
    id_usuario?: IntNullableFilter<"logs_actividad"> | number | null
    accion?: StringNullableFilter<"logs_actividad"> | string | null
    fecha_hora?: DateTimeNullableFilter<"logs_actividad"> | Date | string | null
    detalle?: StringNullableFilter<"logs_actividad"> | string | null
    id_empleado?: IntNullableFilter<"logs_actividad"> | number | null
    id_boleto?: IntNullableFilter<"logs_actividad"> | number | null
    empleados?: XOR<EmpleadosNullableScalarRelationFilter, empleadosWhereInput> | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
    boletos?: XOR<BoletosNullableScalarRelationFilter, boletosWhereInput> | null
  }

  export type logs_actividadOrderByWithRelationInput = {
    id_log?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    accion?: SortOrderInput | SortOrder
    fecha_hora?: SortOrderInput | SortOrder
    detalle?: SortOrderInput | SortOrder
    id_empleado?: SortOrderInput | SortOrder
    id_boleto?: SortOrderInput | SortOrder
    empleados?: empleadosOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    boletos?: boletosOrderByWithRelationInput
    _relevance?: logs_actividadOrderByRelevanceInput
  }

  export type logs_actividadWhereUniqueInput = Prisma.AtLeast<{
    id_log?: number
    AND?: logs_actividadWhereInput | logs_actividadWhereInput[]
    OR?: logs_actividadWhereInput[]
    NOT?: logs_actividadWhereInput | logs_actividadWhereInput[]
    id_usuario?: IntNullableFilter<"logs_actividad"> | number | null
    accion?: StringNullableFilter<"logs_actividad"> | string | null
    fecha_hora?: DateTimeNullableFilter<"logs_actividad"> | Date | string | null
    detalle?: StringNullableFilter<"logs_actividad"> | string | null
    id_empleado?: IntNullableFilter<"logs_actividad"> | number | null
    id_boleto?: IntNullableFilter<"logs_actividad"> | number | null
    empleados?: XOR<EmpleadosNullableScalarRelationFilter, empleadosWhereInput> | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
    boletos?: XOR<BoletosNullableScalarRelationFilter, boletosWhereInput> | null
  }, "id_log">

  export type logs_actividadOrderByWithAggregationInput = {
    id_log?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    accion?: SortOrderInput | SortOrder
    fecha_hora?: SortOrderInput | SortOrder
    detalle?: SortOrderInput | SortOrder
    id_empleado?: SortOrderInput | SortOrder
    id_boleto?: SortOrderInput | SortOrder
    _count?: logs_actividadCountOrderByAggregateInput
    _avg?: logs_actividadAvgOrderByAggregateInput
    _max?: logs_actividadMaxOrderByAggregateInput
    _min?: logs_actividadMinOrderByAggregateInput
    _sum?: logs_actividadSumOrderByAggregateInput
  }

  export type logs_actividadScalarWhereWithAggregatesInput = {
    AND?: logs_actividadScalarWhereWithAggregatesInput | logs_actividadScalarWhereWithAggregatesInput[]
    OR?: logs_actividadScalarWhereWithAggregatesInput[]
    NOT?: logs_actividadScalarWhereWithAggregatesInput | logs_actividadScalarWhereWithAggregatesInput[]
    id_log?: IntWithAggregatesFilter<"logs_actividad"> | number
    id_usuario?: IntNullableWithAggregatesFilter<"logs_actividad"> | number | null
    accion?: StringNullableWithAggregatesFilter<"logs_actividad"> | string | null
    fecha_hora?: DateTimeNullableWithAggregatesFilter<"logs_actividad"> | Date | string | null
    detalle?: StringNullableWithAggregatesFilter<"logs_actividad"> | string | null
    id_empleado?: IntNullableWithAggregatesFilter<"logs_actividad"> | number | null
    id_boleto?: IntNullableWithAggregatesFilter<"logs_actividad"> | number | null
  }

  export type metodos_pagoWhereInput = {
    AND?: metodos_pagoWhereInput | metodos_pagoWhereInput[]
    OR?: metodos_pagoWhereInput[]
    NOT?: metodos_pagoWhereInput | metodos_pagoWhereInput[]
    id_metodo?: IntFilter<"metodos_pago"> | number
    nombre?: StringFilter<"metodos_pago"> | string
    descripcion?: StringNullableFilter<"metodos_pago"> | string | null
    pagos?: PagosListRelationFilter
  }

  export type metodos_pagoOrderByWithRelationInput = {
    id_metodo?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    pagos?: pagosOrderByRelationAggregateInput
    _relevance?: metodos_pagoOrderByRelevanceInput
  }

  export type metodos_pagoWhereUniqueInput = Prisma.AtLeast<{
    id_metodo?: number
    AND?: metodos_pagoWhereInput | metodos_pagoWhereInput[]
    OR?: metodos_pagoWhereInput[]
    NOT?: metodos_pagoWhereInput | metodos_pagoWhereInput[]
    nombre?: StringFilter<"metodos_pago"> | string
    descripcion?: StringNullableFilter<"metodos_pago"> | string | null
    pagos?: PagosListRelationFilter
  }, "id_metodo">

  export type metodos_pagoOrderByWithAggregationInput = {
    id_metodo?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: metodos_pagoCountOrderByAggregateInput
    _avg?: metodos_pagoAvgOrderByAggregateInput
    _max?: metodos_pagoMaxOrderByAggregateInput
    _min?: metodos_pagoMinOrderByAggregateInput
    _sum?: metodos_pagoSumOrderByAggregateInput
  }

  export type metodos_pagoScalarWhereWithAggregatesInput = {
    AND?: metodos_pagoScalarWhereWithAggregatesInput | metodos_pagoScalarWhereWithAggregatesInput[]
    OR?: metodos_pagoScalarWhereWithAggregatesInput[]
    NOT?: metodos_pagoScalarWhereWithAggregatesInput | metodos_pagoScalarWhereWithAggregatesInput[]
    id_metodo?: IntWithAggregatesFilter<"metodos_pago"> | number
    nombre?: StringWithAggregatesFilter<"metodos_pago"> | string
    descripcion?: StringNullableWithAggregatesFilter<"metodos_pago"> | string | null
  }

  export type notificacionesWhereInput = {
    AND?: notificacionesWhereInput | notificacionesWhereInput[]
    OR?: notificacionesWhereInput[]
    NOT?: notificacionesWhereInput | notificacionesWhereInput[]
    id_notificacion?: IntFilter<"notificaciones"> | number
    id_usuario?: IntFilter<"notificaciones"> | number
    titulo?: StringFilter<"notificaciones"> | string
    mensaje?: StringNullableFilter<"notificaciones"> | string | null
    fecha_envio?: DateTimeNullableFilter<"notificaciones"> | Date | string | null
    leido?: BoolNullableFilter<"notificaciones"> | boolean | null
    id_empleado?: IntNullableFilter<"notificaciones"> | number | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    empleados?: XOR<EmpleadosNullableScalarRelationFilter, empleadosWhereInput> | null
  }

  export type notificacionesOrderByWithRelationInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrderInput | SortOrder
    fecha_envio?: SortOrderInput | SortOrder
    leido?: SortOrderInput | SortOrder
    id_empleado?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByWithRelationInput
    empleados?: empleadosOrderByWithRelationInput
    _relevance?: notificacionesOrderByRelevanceInput
  }

  export type notificacionesWhereUniqueInput = Prisma.AtLeast<{
    id_notificacion?: number
    AND?: notificacionesWhereInput | notificacionesWhereInput[]
    OR?: notificacionesWhereInput[]
    NOT?: notificacionesWhereInput | notificacionesWhereInput[]
    id_usuario?: IntFilter<"notificaciones"> | number
    titulo?: StringFilter<"notificaciones"> | string
    mensaje?: StringNullableFilter<"notificaciones"> | string | null
    fecha_envio?: DateTimeNullableFilter<"notificaciones"> | Date | string | null
    leido?: BoolNullableFilter<"notificaciones"> | boolean | null
    id_empleado?: IntNullableFilter<"notificaciones"> | number | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    empleados?: XOR<EmpleadosNullableScalarRelationFilter, empleadosWhereInput> | null
  }, "id_notificacion">

  export type notificacionesOrderByWithAggregationInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrderInput | SortOrder
    fecha_envio?: SortOrderInput | SortOrder
    leido?: SortOrderInput | SortOrder
    id_empleado?: SortOrderInput | SortOrder
    _count?: notificacionesCountOrderByAggregateInput
    _avg?: notificacionesAvgOrderByAggregateInput
    _max?: notificacionesMaxOrderByAggregateInput
    _min?: notificacionesMinOrderByAggregateInput
    _sum?: notificacionesSumOrderByAggregateInput
  }

  export type notificacionesScalarWhereWithAggregatesInput = {
    AND?: notificacionesScalarWhereWithAggregatesInput | notificacionesScalarWhereWithAggregatesInput[]
    OR?: notificacionesScalarWhereWithAggregatesInput[]
    NOT?: notificacionesScalarWhereWithAggregatesInput | notificacionesScalarWhereWithAggregatesInput[]
    id_notificacion?: IntWithAggregatesFilter<"notificaciones"> | number
    id_usuario?: IntWithAggregatesFilter<"notificaciones"> | number
    titulo?: StringWithAggregatesFilter<"notificaciones"> | string
    mensaje?: StringNullableWithAggregatesFilter<"notificaciones"> | string | null
    fecha_envio?: DateTimeNullableWithAggregatesFilter<"notificaciones"> | Date | string | null
    leido?: BoolNullableWithAggregatesFilter<"notificaciones"> | boolean | null
    id_empleado?: IntNullableWithAggregatesFilter<"notificaciones"> | number | null
  }

  export type pagosWhereInput = {
    AND?: pagosWhereInput | pagosWhereInput[]
    OR?: pagosWhereInput[]
    NOT?: pagosWhereInput | pagosWhereInput[]
    id_pago?: IntFilter<"pagos"> | number
    id_usuario?: IntFilter<"pagos"> | number
    monto?: DecimalFilter<"pagos"> | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFilter<"pagos"> | number
    fecha_pago?: DateTimeNullableFilter<"pagos"> | Date | string | null
    estado?: Enumpagos_estadoNullableFilter<"pagos"> | $Enums.pagos_estado | null
    metodos_pago?: XOR<Metodos_pagoScalarRelationFilter, metodos_pagoWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type pagosOrderByWithRelationInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
    fecha_pago?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    metodos_pago?: metodos_pagoOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type pagosWhereUniqueInput = Prisma.AtLeast<{
    id_pago?: number
    AND?: pagosWhereInput | pagosWhereInput[]
    OR?: pagosWhereInput[]
    NOT?: pagosWhereInput | pagosWhereInput[]
    id_usuario?: IntFilter<"pagos"> | number
    monto?: DecimalFilter<"pagos"> | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFilter<"pagos"> | number
    fecha_pago?: DateTimeNullableFilter<"pagos"> | Date | string | null
    estado?: Enumpagos_estadoNullableFilter<"pagos"> | $Enums.pagos_estado | null
    metodos_pago?: XOR<Metodos_pagoScalarRelationFilter, metodos_pagoWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id_pago">

  export type pagosOrderByWithAggregationInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
    fecha_pago?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: pagosCountOrderByAggregateInput
    _avg?: pagosAvgOrderByAggregateInput
    _max?: pagosMaxOrderByAggregateInput
    _min?: pagosMinOrderByAggregateInput
    _sum?: pagosSumOrderByAggregateInput
  }

  export type pagosScalarWhereWithAggregatesInput = {
    AND?: pagosScalarWhereWithAggregatesInput | pagosScalarWhereWithAggregatesInput[]
    OR?: pagosScalarWhereWithAggregatesInput[]
    NOT?: pagosScalarWhereWithAggregatesInput | pagosScalarWhereWithAggregatesInput[]
    id_pago?: IntWithAggregatesFilter<"pagos"> | number
    id_usuario?: IntWithAggregatesFilter<"pagos"> | number
    monto?: DecimalWithAggregatesFilter<"pagos"> | Decimal | DecimalJsLike | number | string
    id_metodo?: IntWithAggregatesFilter<"pagos"> | number
    fecha_pago?: DateTimeNullableWithAggregatesFilter<"pagos"> | Date | string | null
    estado?: Enumpagos_estadoNullableWithAggregatesFilter<"pagos"> | $Enums.pagos_estado | null
  }

  export type peliculasWhereInput = {
    AND?: peliculasWhereInput | peliculasWhereInput[]
    OR?: peliculasWhereInput[]
    NOT?: peliculasWhereInput | peliculasWhereInput[]
    id_pelicula?: IntFilter<"peliculas"> | number
    titulo?: StringFilter<"peliculas"> | string
    sinopsis?: StringNullableFilter<"peliculas"> | string | null
    duracion?: IntNullableFilter<"peliculas"> | number | null
    fecha_lanzamiento?: DateTimeNullableFilter<"peliculas"> | Date | string | null
    id_productora?: IntNullableFilter<"peliculas"> | number | null
    tipo_contenido?: Enumpeliculas_tipo_contenidoNullableFilter<"peliculas"> | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: StringNullableFilter<"peliculas"> | string | null
    url_video?: StringNullableFilter<"peliculas"> | string | null
    id_clasificacion?: IntNullableFilter<"peliculas"> | number | null
    calificacion_promedio?: FloatNullableFilter<"peliculas"> | number | null
    funciones?: FuncionesListRelationFilter
    historial_reproduccion?: Historial_reproduccionListRelationFilter
    clasificaciones?: XOR<ClasificacionesNullableScalarRelationFilter, clasificacionesWhereInput> | null
    productoras?: XOR<ProductorasNullableScalarRelationFilter, productorasWhereInput> | null
    peliculas_directores?: Peliculas_directoresListRelationFilter
    peliculas_generos?: Peliculas_generosListRelationFilter
    reparto?: RepartoListRelationFilter
    valoraciones?: ValoracionesListRelationFilter
  }

  export type peliculasOrderByWithRelationInput = {
    id_pelicula?: SortOrder
    titulo?: SortOrder
    sinopsis?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    fecha_lanzamiento?: SortOrderInput | SortOrder
    id_productora?: SortOrderInput | SortOrder
    tipo_contenido?: SortOrderInput | SortOrder
    imagen_portada?: SortOrderInput | SortOrder
    url_video?: SortOrderInput | SortOrder
    id_clasificacion?: SortOrderInput | SortOrder
    calificacion_promedio?: SortOrderInput | SortOrder
    funciones?: funcionesOrderByRelationAggregateInput
    historial_reproduccion?: historial_reproduccionOrderByRelationAggregateInput
    clasificaciones?: clasificacionesOrderByWithRelationInput
    productoras?: productorasOrderByWithRelationInput
    peliculas_directores?: peliculas_directoresOrderByRelationAggregateInput
    peliculas_generos?: peliculas_generosOrderByRelationAggregateInput
    reparto?: repartoOrderByRelationAggregateInput
    valoraciones?: valoracionesOrderByRelationAggregateInput
    _relevance?: peliculasOrderByRelevanceInput
  }

  export type peliculasWhereUniqueInput = Prisma.AtLeast<{
    id_pelicula?: number
    AND?: peliculasWhereInput | peliculasWhereInput[]
    OR?: peliculasWhereInput[]
    NOT?: peliculasWhereInput | peliculasWhereInput[]
    titulo?: StringFilter<"peliculas"> | string
    sinopsis?: StringNullableFilter<"peliculas"> | string | null
    duracion?: IntNullableFilter<"peliculas"> | number | null
    fecha_lanzamiento?: DateTimeNullableFilter<"peliculas"> | Date | string | null
    id_productora?: IntNullableFilter<"peliculas"> | number | null
    tipo_contenido?: Enumpeliculas_tipo_contenidoNullableFilter<"peliculas"> | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: StringNullableFilter<"peliculas"> | string | null
    url_video?: StringNullableFilter<"peliculas"> | string | null
    id_clasificacion?: IntNullableFilter<"peliculas"> | number | null
    calificacion_promedio?: FloatNullableFilter<"peliculas"> | number | null
    funciones?: FuncionesListRelationFilter
    historial_reproduccion?: Historial_reproduccionListRelationFilter
    clasificaciones?: XOR<ClasificacionesNullableScalarRelationFilter, clasificacionesWhereInput> | null
    productoras?: XOR<ProductorasNullableScalarRelationFilter, productorasWhereInput> | null
    peliculas_directores?: Peliculas_directoresListRelationFilter
    peliculas_generos?: Peliculas_generosListRelationFilter
    reparto?: RepartoListRelationFilter
    valoraciones?: ValoracionesListRelationFilter
  }, "id_pelicula">

  export type peliculasOrderByWithAggregationInput = {
    id_pelicula?: SortOrder
    titulo?: SortOrder
    sinopsis?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    fecha_lanzamiento?: SortOrderInput | SortOrder
    id_productora?: SortOrderInput | SortOrder
    tipo_contenido?: SortOrderInput | SortOrder
    imagen_portada?: SortOrderInput | SortOrder
    url_video?: SortOrderInput | SortOrder
    id_clasificacion?: SortOrderInput | SortOrder
    calificacion_promedio?: SortOrderInput | SortOrder
    _count?: peliculasCountOrderByAggregateInput
    _avg?: peliculasAvgOrderByAggregateInput
    _max?: peliculasMaxOrderByAggregateInput
    _min?: peliculasMinOrderByAggregateInput
    _sum?: peliculasSumOrderByAggregateInput
  }

  export type peliculasScalarWhereWithAggregatesInput = {
    AND?: peliculasScalarWhereWithAggregatesInput | peliculasScalarWhereWithAggregatesInput[]
    OR?: peliculasScalarWhereWithAggregatesInput[]
    NOT?: peliculasScalarWhereWithAggregatesInput | peliculasScalarWhereWithAggregatesInput[]
    id_pelicula?: IntWithAggregatesFilter<"peliculas"> | number
    titulo?: StringWithAggregatesFilter<"peliculas"> | string
    sinopsis?: StringNullableWithAggregatesFilter<"peliculas"> | string | null
    duracion?: IntNullableWithAggregatesFilter<"peliculas"> | number | null
    fecha_lanzamiento?: DateTimeNullableWithAggregatesFilter<"peliculas"> | Date | string | null
    id_productora?: IntNullableWithAggregatesFilter<"peliculas"> | number | null
    tipo_contenido?: Enumpeliculas_tipo_contenidoNullableWithAggregatesFilter<"peliculas"> | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: StringNullableWithAggregatesFilter<"peliculas"> | string | null
    url_video?: StringNullableWithAggregatesFilter<"peliculas"> | string | null
    id_clasificacion?: IntNullableWithAggregatesFilter<"peliculas"> | number | null
    calificacion_promedio?: FloatNullableWithAggregatesFilter<"peliculas"> | number | null
  }

  export type peliculas_directoresWhereInput = {
    AND?: peliculas_directoresWhereInput | peliculas_directoresWhereInput[]
    OR?: peliculas_directoresWhereInput[]
    NOT?: peliculas_directoresWhereInput | peliculas_directoresWhereInput[]
    id_pelicula?: IntFilter<"peliculas_directores"> | number
    id_director?: IntFilter<"peliculas_directores"> | number
    directores?: XOR<DirectoresScalarRelationFilter, directoresWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
  }

  export type peliculas_directoresOrderByWithRelationInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
    directores?: directoresOrderByWithRelationInput
    peliculas?: peliculasOrderByWithRelationInput
  }

  export type peliculas_directoresWhereUniqueInput = Prisma.AtLeast<{
    id_pelicula_id_director?: peliculas_directoresId_peliculaId_directorCompoundUniqueInput
    AND?: peliculas_directoresWhereInput | peliculas_directoresWhereInput[]
    OR?: peliculas_directoresWhereInput[]
    NOT?: peliculas_directoresWhereInput | peliculas_directoresWhereInput[]
    id_pelicula?: IntFilter<"peliculas_directores"> | number
    id_director?: IntFilter<"peliculas_directores"> | number
    directores?: XOR<DirectoresScalarRelationFilter, directoresWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
  }, "id_pelicula_id_director">

  export type peliculas_directoresOrderByWithAggregationInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
    _count?: peliculas_directoresCountOrderByAggregateInput
    _avg?: peliculas_directoresAvgOrderByAggregateInput
    _max?: peliculas_directoresMaxOrderByAggregateInput
    _min?: peliculas_directoresMinOrderByAggregateInput
    _sum?: peliculas_directoresSumOrderByAggregateInput
  }

  export type peliculas_directoresScalarWhereWithAggregatesInput = {
    AND?: peliculas_directoresScalarWhereWithAggregatesInput | peliculas_directoresScalarWhereWithAggregatesInput[]
    OR?: peliculas_directoresScalarWhereWithAggregatesInput[]
    NOT?: peliculas_directoresScalarWhereWithAggregatesInput | peliculas_directoresScalarWhereWithAggregatesInput[]
    id_pelicula?: IntWithAggregatesFilter<"peliculas_directores"> | number
    id_director?: IntWithAggregatesFilter<"peliculas_directores"> | number
  }

  export type peliculas_generosWhereInput = {
    AND?: peliculas_generosWhereInput | peliculas_generosWhereInput[]
    OR?: peliculas_generosWhereInput[]
    NOT?: peliculas_generosWhereInput | peliculas_generosWhereInput[]
    id_pelicula?: IntFilter<"peliculas_generos"> | number
    id_genero?: IntFilter<"peliculas_generos"> | number
    generos?: XOR<GenerosScalarRelationFilter, generosWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
  }

  export type peliculas_generosOrderByWithRelationInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
    generos?: generosOrderByWithRelationInput
    peliculas?: peliculasOrderByWithRelationInput
  }

  export type peliculas_generosWhereUniqueInput = Prisma.AtLeast<{
    id_pelicula_id_genero?: peliculas_generosId_peliculaId_generoCompoundUniqueInput
    AND?: peliculas_generosWhereInput | peliculas_generosWhereInput[]
    OR?: peliculas_generosWhereInput[]
    NOT?: peliculas_generosWhereInput | peliculas_generosWhereInput[]
    id_pelicula?: IntFilter<"peliculas_generos"> | number
    id_genero?: IntFilter<"peliculas_generos"> | number
    generos?: XOR<GenerosScalarRelationFilter, generosWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
  }, "id_pelicula_id_genero">

  export type peliculas_generosOrderByWithAggregationInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
    _count?: peliculas_generosCountOrderByAggregateInput
    _avg?: peliculas_generosAvgOrderByAggregateInput
    _max?: peliculas_generosMaxOrderByAggregateInput
    _min?: peliculas_generosMinOrderByAggregateInput
    _sum?: peliculas_generosSumOrderByAggregateInput
  }

  export type peliculas_generosScalarWhereWithAggregatesInput = {
    AND?: peliculas_generosScalarWhereWithAggregatesInput | peliculas_generosScalarWhereWithAggregatesInput[]
    OR?: peliculas_generosScalarWhereWithAggregatesInput[]
    NOT?: peliculas_generosScalarWhereWithAggregatesInput | peliculas_generosScalarWhereWithAggregatesInput[]
    id_pelicula?: IntWithAggregatesFilter<"peliculas_generos"> | number
    id_genero?: IntWithAggregatesFilter<"peliculas_generos"> | number
  }

  export type planesWhereInput = {
    AND?: planesWhereInput | planesWhereInput[]
    OR?: planesWhereInput[]
    NOT?: planesWhereInput | planesWhereInput[]
    id_plan?: IntFilter<"planes"> | number
    nombre?: StringNullableFilter<"planes"> | string | null
    precio?: DecimalNullableFilter<"planes"> | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: IntNullableFilter<"planes"> | number | null
    descripcion?: StringNullableFilter<"planes"> | string | null
    suscripciones?: SuscripcionesListRelationFilter
  }

  export type planesOrderByWithRelationInput = {
    id_plan?: SortOrder
    nombre?: SortOrderInput | SortOrder
    precio?: SortOrderInput | SortOrder
    duracion_dias?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    suscripciones?: suscripcionesOrderByRelationAggregateInput
    _relevance?: planesOrderByRelevanceInput
  }

  export type planesWhereUniqueInput = Prisma.AtLeast<{
    id_plan?: number
    AND?: planesWhereInput | planesWhereInput[]
    OR?: planesWhereInput[]
    NOT?: planesWhereInput | planesWhereInput[]
    nombre?: StringNullableFilter<"planes"> | string | null
    precio?: DecimalNullableFilter<"planes"> | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: IntNullableFilter<"planes"> | number | null
    descripcion?: StringNullableFilter<"planes"> | string | null
    suscripciones?: SuscripcionesListRelationFilter
  }, "id_plan">

  export type planesOrderByWithAggregationInput = {
    id_plan?: SortOrder
    nombre?: SortOrderInput | SortOrder
    precio?: SortOrderInput | SortOrder
    duracion_dias?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: planesCountOrderByAggregateInput
    _avg?: planesAvgOrderByAggregateInput
    _max?: planesMaxOrderByAggregateInput
    _min?: planesMinOrderByAggregateInput
    _sum?: planesSumOrderByAggregateInput
  }

  export type planesScalarWhereWithAggregatesInput = {
    AND?: planesScalarWhereWithAggregatesInput | planesScalarWhereWithAggregatesInput[]
    OR?: planesScalarWhereWithAggregatesInput[]
    NOT?: planesScalarWhereWithAggregatesInput | planesScalarWhereWithAggregatesInput[]
    id_plan?: IntWithAggregatesFilter<"planes"> | number
    nombre?: StringNullableWithAggregatesFilter<"planes"> | string | null
    precio?: DecimalNullableWithAggregatesFilter<"planes"> | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: IntNullableWithAggregatesFilter<"planes"> | number | null
    descripcion?: StringNullableWithAggregatesFilter<"planes"> | string | null
  }

  export type productorasWhereInput = {
    AND?: productorasWhereInput | productorasWhereInput[]
    OR?: productorasWhereInput[]
    NOT?: productorasWhereInput | productorasWhereInput[]
    id_productora?: IntFilter<"productoras"> | number
    nombre_productora?: StringFilter<"productoras"> | string
    pais_origen?: StringNullableFilter<"productoras"> | string | null
    peliculas?: PeliculasListRelationFilter
  }

  export type productorasOrderByWithRelationInput = {
    id_productora?: SortOrder
    nombre_productora?: SortOrder
    pais_origen?: SortOrderInput | SortOrder
    peliculas?: peliculasOrderByRelationAggregateInput
    _relevance?: productorasOrderByRelevanceInput
  }

  export type productorasWhereUniqueInput = Prisma.AtLeast<{
    id_productora?: number
    AND?: productorasWhereInput | productorasWhereInput[]
    OR?: productorasWhereInput[]
    NOT?: productorasWhereInput | productorasWhereInput[]
    nombre_productora?: StringFilter<"productoras"> | string
    pais_origen?: StringNullableFilter<"productoras"> | string | null
    peliculas?: PeliculasListRelationFilter
  }, "id_productora">

  export type productorasOrderByWithAggregationInput = {
    id_productora?: SortOrder
    nombre_productora?: SortOrder
    pais_origen?: SortOrderInput | SortOrder
    _count?: productorasCountOrderByAggregateInput
    _avg?: productorasAvgOrderByAggregateInput
    _max?: productorasMaxOrderByAggregateInput
    _min?: productorasMinOrderByAggregateInput
    _sum?: productorasSumOrderByAggregateInput
  }

  export type productorasScalarWhereWithAggregatesInput = {
    AND?: productorasScalarWhereWithAggregatesInput | productorasScalarWhereWithAggregatesInput[]
    OR?: productorasScalarWhereWithAggregatesInput[]
    NOT?: productorasScalarWhereWithAggregatesInput | productorasScalarWhereWithAggregatesInput[]
    id_productora?: IntWithAggregatesFilter<"productoras"> | number
    nombre_productora?: StringWithAggregatesFilter<"productoras"> | string
    pais_origen?: StringNullableWithAggregatesFilter<"productoras"> | string | null
  }

  export type promocionesWhereInput = {
    AND?: promocionesWhereInput | promocionesWhereInput[]
    OR?: promocionesWhereInput[]
    NOT?: promocionesWhereInput | promocionesWhereInput[]
    id_promocion?: IntFilter<"promociones"> | number
    titulo?: StringFilter<"promociones"> | string
    descripcion?: StringNullableFilter<"promociones"> | string | null
    fecha_inicio?: DateTimeNullableFilter<"promociones"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"promociones"> | Date | string | null
    descuento?: DecimalNullableFilter<"promociones"> | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesOrderByWithRelationInput = {
    id_promocion?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrderInput | SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    descuento?: SortOrderInput | SortOrder
    _relevance?: promocionesOrderByRelevanceInput
  }

  export type promocionesWhereUniqueInput = Prisma.AtLeast<{
    id_promocion?: number
    AND?: promocionesWhereInput | promocionesWhereInput[]
    OR?: promocionesWhereInput[]
    NOT?: promocionesWhereInput | promocionesWhereInput[]
    titulo?: StringFilter<"promociones"> | string
    descripcion?: StringNullableFilter<"promociones"> | string | null
    fecha_inicio?: DateTimeNullableFilter<"promociones"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"promociones"> | Date | string | null
    descuento?: DecimalNullableFilter<"promociones"> | Decimal | DecimalJsLike | number | string | null
  }, "id_promocion">

  export type promocionesOrderByWithAggregationInput = {
    id_promocion?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrderInput | SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    descuento?: SortOrderInput | SortOrder
    _count?: promocionesCountOrderByAggregateInput
    _avg?: promocionesAvgOrderByAggregateInput
    _max?: promocionesMaxOrderByAggregateInput
    _min?: promocionesMinOrderByAggregateInput
    _sum?: promocionesSumOrderByAggregateInput
  }

  export type promocionesScalarWhereWithAggregatesInput = {
    AND?: promocionesScalarWhereWithAggregatesInput | promocionesScalarWhereWithAggregatesInput[]
    OR?: promocionesScalarWhereWithAggregatesInput[]
    NOT?: promocionesScalarWhereWithAggregatesInput | promocionesScalarWhereWithAggregatesInput[]
    id_promocion?: IntWithAggregatesFilter<"promociones"> | number
    titulo?: StringWithAggregatesFilter<"promociones"> | string
    descripcion?: StringNullableWithAggregatesFilter<"promociones"> | string | null
    fecha_inicio?: DateTimeNullableWithAggregatesFilter<"promociones"> | Date | string | null
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"promociones"> | Date | string | null
    descuento?: DecimalNullableWithAggregatesFilter<"promociones"> | Decimal | DecimalJsLike | number | string | null
  }

  export type repartoWhereInput = {
    AND?: repartoWhereInput | repartoWhereInput[]
    OR?: repartoWhereInput[]
    NOT?: repartoWhereInput | repartoWhereInput[]
    id_reparto?: IntFilter<"reparto"> | number
    id_pelicula?: IntFilter<"reparto"> | number
    id_actor?: IntFilter<"reparto"> | number
    rol?: StringNullableFilter<"reparto"> | string | null
    actores?: XOR<ActoresScalarRelationFilter, actoresWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
  }

  export type repartoOrderByWithRelationInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
    rol?: SortOrderInput | SortOrder
    actores?: actoresOrderByWithRelationInput
    peliculas?: peliculasOrderByWithRelationInput
    _relevance?: repartoOrderByRelevanceInput
  }

  export type repartoWhereUniqueInput = Prisma.AtLeast<{
    id_reparto?: number
    AND?: repartoWhereInput | repartoWhereInput[]
    OR?: repartoWhereInput[]
    NOT?: repartoWhereInput | repartoWhereInput[]
    id_pelicula?: IntFilter<"reparto"> | number
    id_actor?: IntFilter<"reparto"> | number
    rol?: StringNullableFilter<"reparto"> | string | null
    actores?: XOR<ActoresScalarRelationFilter, actoresWhereInput>
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
  }, "id_reparto">

  export type repartoOrderByWithAggregationInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
    rol?: SortOrderInput | SortOrder
    _count?: repartoCountOrderByAggregateInput
    _avg?: repartoAvgOrderByAggregateInput
    _max?: repartoMaxOrderByAggregateInput
    _min?: repartoMinOrderByAggregateInput
    _sum?: repartoSumOrderByAggregateInput
  }

  export type repartoScalarWhereWithAggregatesInput = {
    AND?: repartoScalarWhereWithAggregatesInput | repartoScalarWhereWithAggregatesInput[]
    OR?: repartoScalarWhereWithAggregatesInput[]
    NOT?: repartoScalarWhereWithAggregatesInput | repartoScalarWhereWithAggregatesInput[]
    id_reparto?: IntWithAggregatesFilter<"reparto"> | number
    id_pelicula?: IntWithAggregatesFilter<"reparto"> | number
    id_actor?: IntWithAggregatesFilter<"reparto"> | number
    rol?: StringNullableWithAggregatesFilter<"reparto"> | string | null
  }

  export type reportes_usuariosWhereInput = {
    AND?: reportes_usuariosWhereInput | reportes_usuariosWhereInput[]
    OR?: reportes_usuariosWhereInput[]
    NOT?: reportes_usuariosWhereInput | reportes_usuariosWhereInput[]
    id_reporte?: IntFilter<"reportes_usuarios"> | number
    id_usuario?: IntFilter<"reportes_usuarios"> | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: StringNullableFilter<"reportes_usuarios"> | string | null
    fecha_reporte?: DateTimeNullableFilter<"reportes_usuarios"> | Date | string | null
    estado?: Enumreportes_usuarios_estadoNullableFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_estado | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type reportes_usuariosOrderByWithRelationInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
    tipo_reporte?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha_reporte?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByWithRelationInput
    _relevance?: reportes_usuariosOrderByRelevanceInput
  }

  export type reportes_usuariosWhereUniqueInput = Prisma.AtLeast<{
    id_reporte?: number
    AND?: reportes_usuariosWhereInput | reportes_usuariosWhereInput[]
    OR?: reportes_usuariosWhereInput[]
    NOT?: reportes_usuariosWhereInput | reportes_usuariosWhereInput[]
    id_usuario?: IntFilter<"reportes_usuarios"> | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: StringNullableFilter<"reportes_usuarios"> | string | null
    fecha_reporte?: DateTimeNullableFilter<"reportes_usuarios"> | Date | string | null
    estado?: Enumreportes_usuarios_estadoNullableFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_estado | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id_reporte">

  export type reportes_usuariosOrderByWithAggregationInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
    tipo_reporte?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha_reporte?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: reportes_usuariosCountOrderByAggregateInput
    _avg?: reportes_usuariosAvgOrderByAggregateInput
    _max?: reportes_usuariosMaxOrderByAggregateInput
    _min?: reportes_usuariosMinOrderByAggregateInput
    _sum?: reportes_usuariosSumOrderByAggregateInput
  }

  export type reportes_usuariosScalarWhereWithAggregatesInput = {
    AND?: reportes_usuariosScalarWhereWithAggregatesInput | reportes_usuariosScalarWhereWithAggregatesInput[]
    OR?: reportes_usuariosScalarWhereWithAggregatesInput[]
    NOT?: reportes_usuariosScalarWhereWithAggregatesInput | reportes_usuariosScalarWhereWithAggregatesInput[]
    id_reporte?: IntWithAggregatesFilter<"reportes_usuarios"> | number
    id_usuario?: IntWithAggregatesFilter<"reportes_usuarios"> | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteWithAggregatesFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: StringNullableWithAggregatesFilter<"reportes_usuarios"> | string | null
    fecha_reporte?: DateTimeNullableWithAggregatesFilter<"reportes_usuarios"> | Date | string | null
    estado?: Enumreportes_usuarios_estadoNullableWithAggregatesFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_estado | null
  }

  export type roles_empleadosWhereInput = {
    AND?: roles_empleadosWhereInput | roles_empleadosWhereInput[]
    OR?: roles_empleadosWhereInput[]
    NOT?: roles_empleadosWhereInput | roles_empleadosWhereInput[]
    id_rol?: IntFilter<"roles_empleados"> | number
    nombre_rol?: StringFilter<"roles_empleados"> | string
    empleados?: EmpleadosListRelationFilter
  }

  export type roles_empleadosOrderByWithRelationInput = {
    id_rol?: SortOrder
    nombre_rol?: SortOrder
    empleados?: empleadosOrderByRelationAggregateInput
    _relevance?: roles_empleadosOrderByRelevanceInput
  }

  export type roles_empleadosWhereUniqueInput = Prisma.AtLeast<{
    id_rol?: number
    AND?: roles_empleadosWhereInput | roles_empleadosWhereInput[]
    OR?: roles_empleadosWhereInput[]
    NOT?: roles_empleadosWhereInput | roles_empleadosWhereInput[]
    nombre_rol?: StringFilter<"roles_empleados"> | string
    empleados?: EmpleadosListRelationFilter
  }, "id_rol">

  export type roles_empleadosOrderByWithAggregationInput = {
    id_rol?: SortOrder
    nombre_rol?: SortOrder
    _count?: roles_empleadosCountOrderByAggregateInput
    _avg?: roles_empleadosAvgOrderByAggregateInput
    _max?: roles_empleadosMaxOrderByAggregateInput
    _min?: roles_empleadosMinOrderByAggregateInput
    _sum?: roles_empleadosSumOrderByAggregateInput
  }

  export type roles_empleadosScalarWhereWithAggregatesInput = {
    AND?: roles_empleadosScalarWhereWithAggregatesInput | roles_empleadosScalarWhereWithAggregatesInput[]
    OR?: roles_empleadosScalarWhereWithAggregatesInput[]
    NOT?: roles_empleadosScalarWhereWithAggregatesInput | roles_empleadosScalarWhereWithAggregatesInput[]
    id_rol?: IntWithAggregatesFilter<"roles_empleados"> | number
    nombre_rol?: StringWithAggregatesFilter<"roles_empleados"> | string
  }

  export type salasWhereInput = {
    AND?: salasWhereInput | salasWhereInput[]
    OR?: salasWhereInput[]
    NOT?: salasWhereInput | salasWhereInput[]
    id_sala?: IntFilter<"salas"> | number
    id_cine?: IntFilter<"salas"> | number
    nombre_sala?: StringNullableFilter<"salas"> | string | null
    capacidad?: IntNullableFilter<"salas"> | number | null
    funciones?: FuncionesListRelationFilter
    cines?: XOR<CinesScalarRelationFilter, cinesWhereInput>
  }

  export type salasOrderByWithRelationInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    nombre_sala?: SortOrderInput | SortOrder
    capacidad?: SortOrderInput | SortOrder
    funciones?: funcionesOrderByRelationAggregateInput
    cines?: cinesOrderByWithRelationInput
    _relevance?: salasOrderByRelevanceInput
  }

  export type salasWhereUniqueInput = Prisma.AtLeast<{
    id_sala?: number
    AND?: salasWhereInput | salasWhereInput[]
    OR?: salasWhereInput[]
    NOT?: salasWhereInput | salasWhereInput[]
    id_cine?: IntFilter<"salas"> | number
    nombre_sala?: StringNullableFilter<"salas"> | string | null
    capacidad?: IntNullableFilter<"salas"> | number | null
    funciones?: FuncionesListRelationFilter
    cines?: XOR<CinesScalarRelationFilter, cinesWhereInput>
  }, "id_sala">

  export type salasOrderByWithAggregationInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    nombre_sala?: SortOrderInput | SortOrder
    capacidad?: SortOrderInput | SortOrder
    _count?: salasCountOrderByAggregateInput
    _avg?: salasAvgOrderByAggregateInput
    _max?: salasMaxOrderByAggregateInput
    _min?: salasMinOrderByAggregateInput
    _sum?: salasSumOrderByAggregateInput
  }

  export type salasScalarWhereWithAggregatesInput = {
    AND?: salasScalarWhereWithAggregatesInput | salasScalarWhereWithAggregatesInput[]
    OR?: salasScalarWhereWithAggregatesInput[]
    NOT?: salasScalarWhereWithAggregatesInput | salasScalarWhereWithAggregatesInput[]
    id_sala?: IntWithAggregatesFilter<"salas"> | number
    id_cine?: IntWithAggregatesFilter<"salas"> | number
    nombre_sala?: StringNullableWithAggregatesFilter<"salas"> | string | null
    capacidad?: IntNullableWithAggregatesFilter<"salas"> | number | null
  }

  export type suscripcionesWhereInput = {
    AND?: suscripcionesWhereInput | suscripcionesWhereInput[]
    OR?: suscripcionesWhereInput[]
    NOT?: suscripcionesWhereInput | suscripcionesWhereInput[]
    id_suscripcion?: IntFilter<"suscripciones"> | number
    id_usuario?: IntFilter<"suscripciones"> | number
    fecha_inicio?: DateTimeNullableFilter<"suscripciones"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"suscripciones"> | Date | string | null
    estado?: Enumsuscripciones_estadoNullableFilter<"suscripciones"> | $Enums.suscripciones_estado | null
    id_plan?: IntNullableFilter<"suscripciones"> | number | null
    planes?: XOR<PlanesNullableScalarRelationFilter, planesWhereInput> | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type suscripcionesOrderByWithRelationInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    fecha_inicio?: SortOrderInput | SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    id_plan?: SortOrderInput | SortOrder
    planes?: planesOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type suscripcionesWhereUniqueInput = Prisma.AtLeast<{
    id_suscripcion?: number
    AND?: suscripcionesWhereInput | suscripcionesWhereInput[]
    OR?: suscripcionesWhereInput[]
    NOT?: suscripcionesWhereInput | suscripcionesWhereInput[]
    id_usuario?: IntFilter<"suscripciones"> | number
    fecha_inicio?: DateTimeNullableFilter<"suscripciones"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"suscripciones"> | Date | string | null
    estado?: Enumsuscripciones_estadoNullableFilter<"suscripciones"> | $Enums.suscripciones_estado | null
    id_plan?: IntNullableFilter<"suscripciones"> | number | null
    planes?: XOR<PlanesNullableScalarRelationFilter, planesWhereInput> | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id_suscripcion">

  export type suscripcionesOrderByWithAggregationInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    fecha_inicio?: SortOrderInput | SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    id_plan?: SortOrderInput | SortOrder
    _count?: suscripcionesCountOrderByAggregateInput
    _avg?: suscripcionesAvgOrderByAggregateInput
    _max?: suscripcionesMaxOrderByAggregateInput
    _min?: suscripcionesMinOrderByAggregateInput
    _sum?: suscripcionesSumOrderByAggregateInput
  }

  export type suscripcionesScalarWhereWithAggregatesInput = {
    AND?: suscripcionesScalarWhereWithAggregatesInput | suscripcionesScalarWhereWithAggregatesInput[]
    OR?: suscripcionesScalarWhereWithAggregatesInput[]
    NOT?: suscripcionesScalarWhereWithAggregatesInput | suscripcionesScalarWhereWithAggregatesInput[]
    id_suscripcion?: IntWithAggregatesFilter<"suscripciones"> | number
    id_usuario?: IntWithAggregatesFilter<"suscripciones"> | number
    fecha_inicio?: DateTimeNullableWithAggregatesFilter<"suscripciones"> | Date | string | null
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"suscripciones"> | Date | string | null
    estado?: Enumsuscripciones_estadoNullableWithAggregatesFilter<"suscripciones"> | $Enums.suscripciones_estado | null
    id_plan?: IntNullableWithAggregatesFilter<"suscripciones"> | number | null
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id_usuario?: IntFilter<"usuarios"> | number
    nombre?: StringFilter<"usuarios"> | string
    email?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    rol?: Enumusuarios_rolNullableFilter<"usuarios"> | $Enums.usuarios_rol | null
    fecha_registro?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    bloqueado_hasta?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    foto_perfil?: StringNullableFilter<"usuarios"> | string | null
    verificado?: BoolNullableFilter<"usuarios"> | boolean | null
    boletos?: BoletosListRelationFilter
    historial_reproduccion?: Historial_reproduccionListRelationFilter
    intentos_login?: Intentos_loginListRelationFilter
    logs_actividad?: Logs_actividadListRelationFilter
    notificaciones?: NotificacionesListRelationFilter
    pagos?: PagosListRelationFilter
    reportes_usuarios?: Reportes_usuariosListRelationFilter
    suscripciones?: SuscripcionesListRelationFilter
    valoraciones?: ValoracionesListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    bloqueado_hasta?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    verificado?: SortOrderInput | SortOrder
    boletos?: boletosOrderByRelationAggregateInput
    historial_reproduccion?: historial_reproduccionOrderByRelationAggregateInput
    intentos_login?: intentos_loginOrderByRelationAggregateInput
    logs_actividad?: logs_actividadOrderByRelationAggregateInput
    notificaciones?: notificacionesOrderByRelationAggregateInput
    pagos?: pagosOrderByRelationAggregateInput
    reportes_usuarios?: reportes_usuariosOrderByRelationAggregateInput
    suscripciones?: suscripcionesOrderByRelationAggregateInput
    valoraciones?: valoracionesOrderByRelationAggregateInput
    _relevance?: usuariosOrderByRelevanceInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    email?: string
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    nombre?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    rol?: Enumusuarios_rolNullableFilter<"usuarios"> | $Enums.usuarios_rol | null
    fecha_registro?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    bloqueado_hasta?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    foto_perfil?: StringNullableFilter<"usuarios"> | string | null
    verificado?: BoolNullableFilter<"usuarios"> | boolean | null
    boletos?: BoletosListRelationFilter
    historial_reproduccion?: Historial_reproduccionListRelationFilter
    intentos_login?: Intentos_loginListRelationFilter
    logs_actividad?: Logs_actividadListRelationFilter
    notificaciones?: NotificacionesListRelationFilter
    pagos?: PagosListRelationFilter
    reportes_usuarios?: Reportes_usuariosListRelationFilter
    suscripciones?: SuscripcionesListRelationFilter
    valoraciones?: ValoracionesListRelationFilter
  }, "id_usuario" | "email">

  export type usuariosOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    bloqueado_hasta?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    verificado?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"usuarios"> | number
    nombre?: StringWithAggregatesFilter<"usuarios"> | string
    email?: StringWithAggregatesFilter<"usuarios"> | string
    password?: StringWithAggregatesFilter<"usuarios"> | string
    rol?: Enumusuarios_rolNullableWithAggregatesFilter<"usuarios"> | $Enums.usuarios_rol | null
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    bloqueado_hasta?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    foto_perfil?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    verificado?: BoolNullableWithAggregatesFilter<"usuarios"> | boolean | null
  }

  export type valoracionesWhereInput = {
    AND?: valoracionesWhereInput | valoracionesWhereInput[]
    OR?: valoracionesWhereInput[]
    NOT?: valoracionesWhereInput | valoracionesWhereInput[]
    id_valoracion?: IntFilter<"valoraciones"> | number
    id_usuario?: IntFilter<"valoraciones"> | number
    id_pelicula?: IntFilter<"valoraciones"> | number
    puntaje?: IntNullableFilter<"valoraciones"> | number | null
    comentario?: StringNullableFilter<"valoraciones"> | string | null
    fecha_valoracion?: DateTimeNullableFilter<"valoraciones"> | Date | string | null
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type valoracionesOrderByWithRelationInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha_valoracion?: SortOrderInput | SortOrder
    peliculas?: peliculasOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    _relevance?: valoracionesOrderByRelevanceInput
  }

  export type valoracionesWhereUniqueInput = Prisma.AtLeast<{
    id_valoracion?: number
    AND?: valoracionesWhereInput | valoracionesWhereInput[]
    OR?: valoracionesWhereInput[]
    NOT?: valoracionesWhereInput | valoracionesWhereInput[]
    id_usuario?: IntFilter<"valoraciones"> | number
    id_pelicula?: IntFilter<"valoraciones"> | number
    puntaje?: IntNullableFilter<"valoraciones"> | number | null
    comentario?: StringNullableFilter<"valoraciones"> | string | null
    fecha_valoracion?: DateTimeNullableFilter<"valoraciones"> | Date | string | null
    peliculas?: XOR<PeliculasScalarRelationFilter, peliculasWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id_valoracion">

  export type valoracionesOrderByWithAggregationInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha_valoracion?: SortOrderInput | SortOrder
    _count?: valoracionesCountOrderByAggregateInput
    _avg?: valoracionesAvgOrderByAggregateInput
    _max?: valoracionesMaxOrderByAggregateInput
    _min?: valoracionesMinOrderByAggregateInput
    _sum?: valoracionesSumOrderByAggregateInput
  }

  export type valoracionesScalarWhereWithAggregatesInput = {
    AND?: valoracionesScalarWhereWithAggregatesInput | valoracionesScalarWhereWithAggregatesInput[]
    OR?: valoracionesScalarWhereWithAggregatesInput[]
    NOT?: valoracionesScalarWhereWithAggregatesInput | valoracionesScalarWhereWithAggregatesInput[]
    id_valoracion?: IntWithAggregatesFilter<"valoraciones"> | number
    id_usuario?: IntWithAggregatesFilter<"valoraciones"> | number
    id_pelicula?: IntWithAggregatesFilter<"valoraciones"> | number
    puntaje?: IntNullableWithAggregatesFilter<"valoraciones"> | number | null
    comentario?: StringNullableWithAggregatesFilter<"valoraciones"> | string | null
    fecha_valoracion?: DateTimeNullableWithAggregatesFilter<"valoraciones"> | Date | string | null
  }

  export type actoresCreateInput = {
    nombre_actor: string
    apellido_actor?: string | null
    fecha_nacimiento?: Date | string | null
    biografia?: string | null
    reparto?: repartoCreateNestedManyWithoutActoresInput
  }

  export type actoresUncheckedCreateInput = {
    id_actor?: number
    nombre_actor: string
    apellido_actor?: string | null
    fecha_nacimiento?: Date | string | null
    biografia?: string | null
    reparto?: repartoUncheckedCreateNestedManyWithoutActoresInput
  }

  export type actoresUpdateInput = {
    nombre_actor?: StringFieldUpdateOperationsInput | string
    apellido_actor?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    reparto?: repartoUpdateManyWithoutActoresNestedInput
  }

  export type actoresUncheckedUpdateInput = {
    id_actor?: IntFieldUpdateOperationsInput | number
    nombre_actor?: StringFieldUpdateOperationsInput | string
    apellido_actor?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    reparto?: repartoUncheckedUpdateManyWithoutActoresNestedInput
  }

  export type actoresCreateManyInput = {
    id_actor?: number
    nombre_actor: string
    apellido_actor?: string | null
    fecha_nacimiento?: Date | string | null
    biografia?: string | null
  }

  export type actoresUpdateManyMutationInput = {
    nombre_actor?: StringFieldUpdateOperationsInput | string
    apellido_actor?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type actoresUncheckedUpdateManyInput = {
    id_actor?: IntFieldUpdateOperationsInput | number
    nombre_actor?: StringFieldUpdateOperationsInput | string
    apellido_actor?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type boletosCreateInput = {
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    funciones: funcionesCreateNestedOneWithoutBoletosInput
    usuarios: usuariosCreateNestedOneWithoutBoletosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutBoletosInput
  }

  export type boletosUncheckedCreateInput = {
    id_boleto?: number
    id_funcion: number
    id_usuario: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutBoletosInput
  }

  export type boletosUpdateInput = {
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    funciones?: funcionesUpdateOneRequiredWithoutBoletosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutBoletosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutBoletosNestedInput
  }

  export type boletosUncheckedUpdateInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutBoletosNestedInput
  }

  export type boletosCreateManyInput = {
    id_boleto?: number
    id_funcion: number
    id_usuario: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
  }

  export type boletosUpdateManyMutationInput = {
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
  }

  export type boletosUncheckedUpdateManyInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
  }

  export type candy_barCreateInput = {
    nombre_producto: string
    descripcion: string
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    es_promocion?: boolean
    precio_promocional?: Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: Date | string | null
    promo_fecha_fin?: Date | string | null
    categoria?: string | null
    stock?: number | null
  }

  export type candy_barUncheckedCreateInput = {
    id_producto?: number
    nombre_producto: string
    descripcion: string
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    es_promocion?: boolean
    precio_promocional?: Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: Date | string | null
    promo_fecha_fin?: Date | string | null
    categoria?: string | null
    stock?: number | null
  }

  export type candy_barUpdateInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    es_promocion?: BoolFieldUpdateOperationsInput | boolean
    precio_promocional?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promo_fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type candy_barUncheckedUpdateInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre_producto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    es_promocion?: BoolFieldUpdateOperationsInput | boolean
    precio_promocional?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promo_fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type candy_barCreateManyInput = {
    id_producto?: number
    nombre_producto: string
    descripcion: string
    precio: Decimal | DecimalJsLike | number | string
    imagen_url?: string | null
    es_promocion?: boolean
    precio_promocional?: Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: Date | string | null
    promo_fecha_fin?: Date | string | null
    categoria?: string | null
    stock?: number | null
  }

  export type candy_barUpdateManyMutationInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    es_promocion?: BoolFieldUpdateOperationsInput | boolean
    precio_promocional?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promo_fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type candy_barUncheckedUpdateManyInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre_producto?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    es_promocion?: BoolFieldUpdateOperationsInput | boolean
    precio_promocional?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    promo_fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promo_fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type cartelerasCreateInput = {
    fecha_inicio: Date | string
    fecha_fin: Date | string
    descripcion?: string | null
    funciones?: funcionesCreateNestedManyWithoutCartelerasInput
  }

  export type cartelerasUncheckedCreateInput = {
    id_cartelera?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    descripcion?: string | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutCartelerasInput
  }

  export type cartelerasUpdateInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    funciones?: funcionesUpdateManyWithoutCartelerasNestedInput
  }

  export type cartelerasUncheckedUpdateInput = {
    id_cartelera?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    funciones?: funcionesUncheckedUpdateManyWithoutCartelerasNestedInput
  }

  export type cartelerasCreateManyInput = {
    id_cartelera?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    descripcion?: string | null
  }

  export type cartelerasUpdateManyMutationInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cartelerasUncheckedUpdateManyInput = {
    id_cartelera?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cinesCreateInput = {
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
    empleados?: empleadosCreateNestedManyWithoutCinesInput
    salas?: salasCreateNestedManyWithoutCinesInput
  }

  export type cinesUncheckedCreateInput = {
    id_cine?: number
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
    empleados?: empleadosUncheckedCreateNestedManyWithoutCinesInput
    salas?: salasUncheckedCreateNestedManyWithoutCinesInput
  }

  export type cinesUpdateInput = {
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUpdateManyWithoutCinesNestedInput
    salas?: salasUpdateManyWithoutCinesNestedInput
  }

  export type cinesUncheckedUpdateInput = {
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUncheckedUpdateManyWithoutCinesNestedInput
    salas?: salasUncheckedUpdateManyWithoutCinesNestedInput
  }

  export type cinesCreateManyInput = {
    id_cine?: number
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
  }

  export type cinesUpdateManyMutationInput = {
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cinesUncheckedUpdateManyInput = {
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clasificacionesCreateInput = {
    codigo: string
    descripcion?: string | null
    peliculas?: peliculasCreateNestedManyWithoutClasificacionesInput
  }

  export type clasificacionesUncheckedCreateInput = {
    id_clasificacion?: number
    codigo: string
    descripcion?: string | null
    peliculas?: peliculasUncheckedCreateNestedManyWithoutClasificacionesInput
  }

  export type clasificacionesUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas?: peliculasUpdateManyWithoutClasificacionesNestedInput
  }

  export type clasificacionesUncheckedUpdateInput = {
    id_clasificacion?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas?: peliculasUncheckedUpdateManyWithoutClasificacionesNestedInput
  }

  export type clasificacionesCreateManyInput = {
    id_clasificacion?: number
    codigo: string
    descripcion?: string | null
  }

  export type clasificacionesUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clasificacionesUncheckedUpdateManyInput = {
    id_clasificacion?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type directoresCreateInput = {
    nombre_director: string
    apellido_director?: string | null
    biografia?: string | null
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutDirectoresInput
  }

  export type directoresUncheckedCreateInput = {
    id_director?: number
    nombre_director: string
    apellido_director?: string | null
    biografia?: string | null
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutDirectoresInput
  }

  export type directoresUpdateInput = {
    nombre_director?: StringFieldUpdateOperationsInput | string
    apellido_director?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas_directores?: peliculas_directoresUpdateManyWithoutDirectoresNestedInput
  }

  export type directoresUncheckedUpdateInput = {
    id_director?: IntFieldUpdateOperationsInput | number
    nombre_director?: StringFieldUpdateOperationsInput | string
    apellido_director?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutDirectoresNestedInput
  }

  export type directoresCreateManyInput = {
    id_director?: number
    nombre_director: string
    apellido_director?: string | null
    biografia?: string | null
  }

  export type directoresUpdateManyMutationInput = {
    nombre_director?: StringFieldUpdateOperationsInput | string
    apellido_director?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type directoresUncheckedUpdateManyInput = {
    id_director?: IntFieldUpdateOperationsInput | number
    nombre_director?: StringFieldUpdateOperationsInput | string
    apellido_director?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type empleadosCreateInput = {
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    usuario_sistema?: boolean | null
    cines?: cinesCreateNestedOneWithoutEmpleadosInput
    roles_empleados?: roles_empleadosCreateNestedOneWithoutEmpleadosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutEmpleadosInput
    notificaciones?: notificacionesCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosUncheckedCreateInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_cine?: number | null
    id_rol?: number | null
    usuario_sistema?: boolean | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutEmpleadosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cines?: cinesUpdateOneWithoutEmpleadosNestedInput
    roles_empleados?: roles_empleadosUpdateOneWithoutEmpleadosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cine?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosCreateManyInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_cine?: number | null
    id_rol?: number | null
    usuario_sistema?: boolean | null
  }

  export type empleadosUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type empleadosUncheckedUpdateManyInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cine?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type funcionesCreateInput = {
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosCreateNestedManyWithoutFuncionesInput
    carteleras: cartelerasCreateNestedOneWithoutFuncionesInput
    peliculas: peliculasCreateNestedOneWithoutFuncionesInput
    salas: salasCreateNestedOneWithoutFuncionesInput
  }

  export type funcionesUncheckedCreateInput = {
    id_funcion?: number
    id_cartelera: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedCreateNestedManyWithoutFuncionesInput
  }

  export type funcionesUpdateInput = {
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUpdateManyWithoutFuncionesNestedInput
    carteleras?: cartelerasUpdateOneRequiredWithoutFuncionesNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutFuncionesNestedInput
    salas?: salasUpdateOneRequiredWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedUpdateManyWithoutFuncionesNestedInput
  }

  export type funcionesCreateManyInput = {
    id_funcion?: number
    id_cartelera: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
  }

  export type funcionesUpdateManyMutationInput = {
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type funcionesUncheckedUpdateManyInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type generosCreateInput = {
    nombre_genero: string
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutGenerosInput
  }

  export type generosUncheckedCreateInput = {
    id_genero?: number
    nombre_genero: string
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutGenerosInput
  }

  export type generosUpdateInput = {
    nombre_genero?: StringFieldUpdateOperationsInput | string
    peliculas_generos?: peliculas_generosUpdateManyWithoutGenerosNestedInput
  }

  export type generosUncheckedUpdateInput = {
    id_genero?: IntFieldUpdateOperationsInput | number
    nombre_genero?: StringFieldUpdateOperationsInput | string
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutGenerosNestedInput
  }

  export type generosCreateManyInput = {
    id_genero?: number
    nombre_genero: string
  }

  export type generosUpdateManyMutationInput = {
    nombre_genero?: StringFieldUpdateOperationsInput | string
  }

  export type generosUncheckedUpdateManyInput = {
    id_genero?: IntFieldUpdateOperationsInput | number
    nombre_genero?: StringFieldUpdateOperationsInput | string
  }

  export type historial_reproduccionCreateInput = {
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
    peliculas: peliculasCreateNestedOneWithoutHistorial_reproduccionInput
    usuarios: usuariosCreateNestedOneWithoutHistorial_reproduccionInput
  }

  export type historial_reproduccionUncheckedCreateInput = {
    id_usuario: number
    id_pelicula: number
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
  }

  export type historial_reproduccionUpdateInput = {
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
    peliculas?: peliculasUpdateOneRequiredWithoutHistorial_reproduccionNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutHistorial_reproduccionNestedInput
  }

  export type historial_reproduccionUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historial_reproduccionCreateManyInput = {
    id_usuario: number
    id_pelicula: number
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
  }

  export type historial_reproduccionUpdateManyMutationInput = {
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historial_reproduccionUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type imagenes_extraCreateInput = {
    tipo: $Enums.imagenes_extra_tipo
    nombre: string
    url: string
    descripcion?: string | null
  }

  export type imagenes_extraUncheckedCreateInput = {
    id_imagen_extra?: number
    tipo: $Enums.imagenes_extra_tipo
    nombre: string
    url: string
    descripcion?: string | null
  }

  export type imagenes_extraUpdateInput = {
    tipo?: Enumimagenes_extra_tipoFieldUpdateOperationsInput | $Enums.imagenes_extra_tipo
    nombre?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type imagenes_extraUncheckedUpdateInput = {
    id_imagen_extra?: IntFieldUpdateOperationsInput | number
    tipo?: Enumimagenes_extra_tipoFieldUpdateOperationsInput | $Enums.imagenes_extra_tipo
    nombre?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type imagenes_extraCreateManyInput = {
    id_imagen_extra?: number
    tipo: $Enums.imagenes_extra_tipo
    nombre: string
    url: string
    descripcion?: string | null
  }

  export type imagenes_extraUpdateManyMutationInput = {
    tipo?: Enumimagenes_extra_tipoFieldUpdateOperationsInput | $Enums.imagenes_extra_tipo
    nombre?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type imagenes_extraUncheckedUpdateManyInput = {
    id_imagen_extra?: IntFieldUpdateOperationsInput | number
    tipo?: Enumimagenes_extra_tipoFieldUpdateOperationsInput | $Enums.imagenes_extra_tipo
    nombre?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type intentos_loginCreateInput = {
    exito?: boolean | null
    ip_origen?: string | null
    fecha?: Date | string | null
    usuarios?: usuariosCreateNestedOneWithoutIntentos_loginInput
  }

  export type intentos_loginUncheckedCreateInput = {
    id?: number
    id_usuario?: number | null
    exito?: boolean | null
    ip_origen?: string | null
    fecha?: Date | string | null
  }

  export type intentos_loginUpdateInput = {
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneWithoutIntentos_loginNestedInput
  }

  export type intentos_loginUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type intentos_loginCreateManyInput = {
    id?: number
    id_usuario?: number | null
    exito?: boolean | null
    ip_origen?: string | null
    fecha?: Date | string | null
  }

  export type intentos_loginUpdateManyMutationInput = {
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type intentos_loginUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type logs_actividadCreateInput = {
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    empleados?: empleadosCreateNestedOneWithoutLogs_actividadInput
    usuarios?: usuariosCreateNestedOneWithoutLogs_actividadInput
    boletos?: boletosCreateNestedOneWithoutLogs_actividadInput
  }

  export type logs_actividadUncheckedCreateInput = {
    id_log?: number
    id_usuario?: number | null
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_empleado?: number | null
    id_boleto?: number | null
  }

  export type logs_actividadUpdateInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUpdateOneWithoutLogs_actividadNestedInput
    usuarios?: usuariosUpdateOneWithoutLogs_actividadNestedInput
    boletos?: boletosUpdateOneWithoutLogs_actividadNestedInput
  }

  export type logs_actividadUncheckedUpdateInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
    id_boleto?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type logs_actividadCreateManyInput = {
    id_log?: number
    id_usuario?: number | null
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_empleado?: number | null
    id_boleto?: number | null
  }

  export type logs_actividadUpdateManyMutationInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logs_actividadUncheckedUpdateManyInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
    id_boleto?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type metodos_pagoCreateInput = {
    nombre: string
    descripcion?: string | null
    pagos?: pagosCreateNestedManyWithoutMetodos_pagoInput
  }

  export type metodos_pagoUncheckedCreateInput = {
    id_metodo?: number
    nombre: string
    descripcion?: string | null
    pagos?: pagosUncheckedCreateNestedManyWithoutMetodos_pagoInput
  }

  export type metodos_pagoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    pagos?: pagosUpdateManyWithoutMetodos_pagoNestedInput
  }

  export type metodos_pagoUncheckedUpdateInput = {
    id_metodo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    pagos?: pagosUncheckedUpdateManyWithoutMetodos_pagoNestedInput
  }

  export type metodos_pagoCreateManyInput = {
    id_metodo?: number
    nombre: string
    descripcion?: string | null
  }

  export type metodos_pagoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type metodos_pagoUncheckedUpdateManyInput = {
    id_metodo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificacionesCreateInput = {
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    usuarios: usuariosCreateNestedOneWithoutNotificacionesInput
    empleados?: empleadosCreateNestedOneWithoutNotificacionesInput
  }

  export type notificacionesUncheckedCreateInput = {
    id_notificacion?: number
    id_usuario: number
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    id_empleado?: number | null
  }

  export type notificacionesUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarios?: usuariosUpdateOneRequiredWithoutNotificacionesNestedInput
    empleados?: empleadosUpdateOneWithoutNotificacionesNestedInput
  }

  export type notificacionesUncheckedUpdateInput = {
    id_notificacion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notificacionesCreateManyInput = {
    id_notificacion?: number
    id_usuario: number
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    id_empleado?: number | null
  }

  export type notificacionesUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type notificacionesUncheckedUpdateManyInput = {
    id_notificacion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pagosCreateInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
    metodos_pago: metodos_pagoCreateNestedOneWithoutPagosInput
    usuarios: usuariosCreateNestedOneWithoutPagosInput
  }

  export type pagosUncheckedCreateInput = {
    id_pago?: number
    id_usuario: number
    monto: Decimal | DecimalJsLike | number | string
    id_metodo: number
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
  }

  export type pagosUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
    metodos_pago?: metodos_pagoUpdateOneRequiredWithoutPagosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutPagosNestedInput
  }

  export type pagosUncheckedUpdateInput = {
    id_pago?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFieldUpdateOperationsInput | number
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type pagosCreateManyInput = {
    id_pago?: number
    id_usuario: number
    monto: Decimal | DecimalJsLike | number | string
    id_metodo: number
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
  }

  export type pagosUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type pagosUncheckedUpdateManyInput = {
    id_pago?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFieldUpdateOperationsInput | number
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type peliculasCreateInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasCreateManyInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
  }

  export type peliculasUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type peliculasUncheckedUpdateManyInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type peliculas_directoresCreateInput = {
    directores: directoresCreateNestedOneWithoutPeliculas_directoresInput
    peliculas: peliculasCreateNestedOneWithoutPeliculas_directoresInput
  }

  export type peliculas_directoresUncheckedCreateInput = {
    id_pelicula: number
    id_director: number
  }

  export type peliculas_directoresUpdateInput = {
    directores?: directoresUpdateOneRequiredWithoutPeliculas_directoresNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutPeliculas_directoresNestedInput
  }

  export type peliculas_directoresUncheckedUpdateInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    id_director?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_directoresCreateManyInput = {
    id_pelicula: number
    id_director: number
  }

  export type peliculas_directoresUpdateManyMutationInput = {

  }

  export type peliculas_directoresUncheckedUpdateManyInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    id_director?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_generosCreateInput = {
    generos: generosCreateNestedOneWithoutPeliculas_generosInput
    peliculas: peliculasCreateNestedOneWithoutPeliculas_generosInput
  }

  export type peliculas_generosUncheckedCreateInput = {
    id_pelicula: number
    id_genero: number
  }

  export type peliculas_generosUpdateInput = {
    generos?: generosUpdateOneRequiredWithoutPeliculas_generosNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutPeliculas_generosNestedInput
  }

  export type peliculas_generosUncheckedUpdateInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    id_genero?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_generosCreateManyInput = {
    id_pelicula: number
    id_genero: number
  }

  export type peliculas_generosUpdateManyMutationInput = {

  }

  export type peliculas_generosUncheckedUpdateManyInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    id_genero?: IntFieldUpdateOperationsInput | number
  }

  export type planesCreateInput = {
    nombre?: string | null
    precio?: Decimal | DecimalJsLike | number | string | null
    duracion_dias?: number | null
    descripcion?: string | null
    suscripciones?: suscripcionesCreateNestedManyWithoutPlanesInput
  }

  export type planesUncheckedCreateInput = {
    id_plan?: number
    nombre?: string | null
    precio?: Decimal | DecimalJsLike | number | string | null
    duracion_dias?: number | null
    descripcion?: string | null
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutPlanesInput
  }

  export type planesUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    suscripciones?: suscripcionesUpdateManyWithoutPlanesNestedInput
  }

  export type planesUncheckedUpdateInput = {
    id_plan?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutPlanesNestedInput
  }

  export type planesCreateManyInput = {
    id_plan?: number
    nombre?: string | null
    precio?: Decimal | DecimalJsLike | number | string | null
    duracion_dias?: number | null
    descripcion?: string | null
  }

  export type planesUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type planesUncheckedUpdateManyInput = {
    id_plan?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productorasCreateInput = {
    nombre_productora: string
    pais_origen?: string | null
    peliculas?: peliculasCreateNestedManyWithoutProductorasInput
  }

  export type productorasUncheckedCreateInput = {
    id_productora?: number
    nombre_productora: string
    pais_origen?: string | null
    peliculas?: peliculasUncheckedCreateNestedManyWithoutProductorasInput
  }

  export type productorasUpdateInput = {
    nombre_productora?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas?: peliculasUpdateManyWithoutProductorasNestedInput
  }

  export type productorasUncheckedUpdateInput = {
    id_productora?: IntFieldUpdateOperationsInput | number
    nombre_productora?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas?: peliculasUncheckedUpdateManyWithoutProductorasNestedInput
  }

  export type productorasCreateManyInput = {
    id_productora?: number
    nombre_productora: string
    pais_origen?: string | null
  }

  export type productorasUpdateManyMutationInput = {
    nombre_productora?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productorasUncheckedUpdateManyInput = {
    id_productora?: IntFieldUpdateOperationsInput | number
    nombre_productora?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type promocionesCreateInput = {
    titulo: string
    descripcion?: string | null
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    descuento?: Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesUncheckedCreateInput = {
    id_promocion?: number
    titulo: string
    descripcion?: string | null
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    descuento?: Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descuento?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesUncheckedUpdateInput = {
    id_promocion?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descuento?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesCreateManyInput = {
    id_promocion?: number
    titulo: string
    descripcion?: string | null
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    descuento?: Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descuento?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionesUncheckedUpdateManyInput = {
    id_promocion?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descuento?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type repartoCreateInput = {
    rol?: string | null
    actores: actoresCreateNestedOneWithoutRepartoInput
    peliculas: peliculasCreateNestedOneWithoutRepartoInput
  }

  export type repartoUncheckedCreateInput = {
    id_reparto?: number
    id_pelicula: number
    id_actor: number
    rol?: string | null
  }

  export type repartoUpdateInput = {
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    actores?: actoresUpdateOneRequiredWithoutRepartoNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutRepartoNestedInput
  }

  export type repartoUncheckedUpdateInput = {
    id_reparto?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    id_actor?: IntFieldUpdateOperationsInput | number
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type repartoCreateManyInput = {
    id_reparto?: number
    id_pelicula: number
    id_actor: number
    rol?: string | null
  }

  export type repartoUpdateManyMutationInput = {
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type repartoUncheckedUpdateManyInput = {
    id_reparto?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    id_actor?: IntFieldUpdateOperationsInput | number
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reportes_usuariosCreateInput = {
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion?: string | null
    fecha_reporte?: Date | string | null
    estado?: $Enums.reportes_usuarios_estado | null
    usuarios: usuariosCreateNestedOneWithoutReportes_usuariosInput
  }

  export type reportes_usuariosUncheckedCreateInput = {
    id_reporte?: number
    id_usuario: number
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion?: string | null
    fecha_reporte?: Date | string | null
    estado?: $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosUpdateInput = {
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
    usuarios?: usuariosUpdateOneRequiredWithoutReportes_usuariosNestedInput
  }

  export type reportes_usuariosUncheckedUpdateInput = {
    id_reporte?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosCreateManyInput = {
    id_reporte?: number
    id_usuario: number
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion?: string | null
    fecha_reporte?: Date | string | null
    estado?: $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosUpdateManyMutationInput = {
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosUncheckedUpdateManyInput = {
    id_reporte?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
  }

  export type roles_empleadosCreateInput = {
    nombre_rol: string
    empleados?: empleadosCreateNestedManyWithoutRoles_empleadosInput
  }

  export type roles_empleadosUncheckedCreateInput = {
    id_rol?: number
    nombre_rol: string
    empleados?: empleadosUncheckedCreateNestedManyWithoutRoles_empleadosInput
  }

  export type roles_empleadosUpdateInput = {
    nombre_rol?: StringFieldUpdateOperationsInput | string
    empleados?: empleadosUpdateManyWithoutRoles_empleadosNestedInput
  }

  export type roles_empleadosUncheckedUpdateInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre_rol?: StringFieldUpdateOperationsInput | string
    empleados?: empleadosUncheckedUpdateManyWithoutRoles_empleadosNestedInput
  }

  export type roles_empleadosCreateManyInput = {
    id_rol?: number
    nombre_rol: string
  }

  export type roles_empleadosUpdateManyMutationInput = {
    nombre_rol?: StringFieldUpdateOperationsInput | string
  }

  export type roles_empleadosUncheckedUpdateManyInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre_rol?: StringFieldUpdateOperationsInput | string
  }

  export type salasCreateInput = {
    nombre_sala?: string | null
    capacidad?: number | null
    funciones?: funcionesCreateNestedManyWithoutSalasInput
    cines: cinesCreateNestedOneWithoutSalasInput
  }

  export type salasUncheckedCreateInput = {
    id_sala?: number
    id_cine: number
    nombre_sala?: string | null
    capacidad?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutSalasInput
  }

  export type salasUpdateInput = {
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutSalasNestedInput
    cines?: cinesUpdateOneRequiredWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutSalasNestedInput
  }

  export type salasCreateManyInput = {
    id_sala?: number
    id_cine: number
    nombre_sala?: string | null
    capacidad?: number | null
  }

  export type salasUpdateManyMutationInput = {
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type salasUncheckedUpdateManyInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type suscripcionesCreateInput = {
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    planes?: planesCreateNestedOneWithoutSuscripcionesInput
    usuarios: usuariosCreateNestedOneWithoutSuscripcionesInput
  }

  export type suscripcionesUncheckedCreateInput = {
    id_suscripcion?: number
    id_usuario: number
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    id_plan?: number | null
  }

  export type suscripcionesUpdateInput = {
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    planes?: planesUpdateOneWithoutSuscripcionesNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutSuscripcionesNestedInput
  }

  export type suscripcionesUncheckedUpdateInput = {
    id_suscripcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    id_plan?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type suscripcionesCreateManyInput = {
    id_suscripcion?: number
    id_usuario: number
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    id_plan?: number | null
  }

  export type suscripcionesUpdateManyMutationInput = {
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
  }

  export type suscripcionesUncheckedUpdateManyInput = {
    id_suscripcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    id_plan?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuariosCreateInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
  }

  export type usuariosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type valoracionesCreateInput = {
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
    peliculas: peliculasCreateNestedOneWithoutValoracionesInput
    usuarios: usuariosCreateNestedOneWithoutValoracionesInput
  }

  export type valoracionesUncheckedCreateInput = {
    id_valoracion?: number
    id_usuario: number
    id_pelicula: number
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
  }

  export type valoracionesUpdateInput = {
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    peliculas?: peliculasUpdateOneRequiredWithoutValoracionesNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutValoracionesNestedInput
  }

  export type valoracionesUncheckedUpdateInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type valoracionesCreateManyInput = {
    id_valoracion?: number
    id_usuario: number
    id_pelicula: number
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
  }

  export type valoracionesUpdateManyMutationInput = {
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type valoracionesUncheckedUpdateManyInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type RepartoListRelationFilter = {
    every?: repartoWhereInput
    some?: repartoWhereInput
    none?: repartoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type repartoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type actoresOrderByRelevanceInput = {
    fields: actoresOrderByRelevanceFieldEnum | actoresOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type actoresCountOrderByAggregateInput = {
    id_actor?: SortOrder
    nombre_actor?: SortOrder
    apellido_actor?: SortOrder
    fecha_nacimiento?: SortOrder
    biografia?: SortOrder
  }

  export type actoresAvgOrderByAggregateInput = {
    id_actor?: SortOrder
  }

  export type actoresMaxOrderByAggregateInput = {
    id_actor?: SortOrder
    nombre_actor?: SortOrder
    apellido_actor?: SortOrder
    fecha_nacimiento?: SortOrder
    biografia?: SortOrder
  }

  export type actoresMinOrderByAggregateInput = {
    id_actor?: SortOrder
    nombre_actor?: SortOrder
    apellido_actor?: SortOrder
    fecha_nacimiento?: SortOrder
    biografia?: SortOrder
  }

  export type actoresSumOrderByAggregateInput = {
    id_actor?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enumboletos_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.boletos_estado | Enumboletos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.boletos_estado[] | null
    notIn?: $Enums.boletos_estado[] | null
    not?: NestedEnumboletos_estadoNullableFilter<$PrismaModel> | $Enums.boletos_estado | null
  }

  export type FuncionesScalarRelationFilter = {
    is?: funcionesWhereInput
    isNot?: funcionesWhereInput
  }

  export type UsuariosScalarRelationFilter = {
    is?: usuariosWhereInput
    isNot?: usuariosWhereInput
  }

  export type Logs_actividadListRelationFilter = {
    every?: logs_actividadWhereInput
    some?: logs_actividadWhereInput
    none?: logs_actividadWhereInput
  }

  export type logs_actividadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type boletosOrderByRelevanceInput = {
    fields: boletosOrderByRelevanceFieldEnum | boletosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type boletosCountOrderByAggregateInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
    asiento?: SortOrder
    estado?: SortOrder
  }

  export type boletosAvgOrderByAggregateInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
  }

  export type boletosMaxOrderByAggregateInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
    asiento?: SortOrder
    estado?: SortOrder
  }

  export type boletosMinOrderByAggregateInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
    asiento?: SortOrder
    estado?: SortOrder
  }

  export type boletosSumOrderByAggregateInput = {
    id_boleto?: SortOrder
    id_funcion?: SortOrder
    id_usuario?: SortOrder
  }

  export type Enumboletos_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.boletos_estado | Enumboletos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.boletos_estado[] | null
    notIn?: $Enums.boletos_estado[] | null
    not?: NestedEnumboletos_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.boletos_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumboletos_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumboletos_estadoNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type candy_barOrderByRelevanceInput = {
    fields: candy_barOrderByRelevanceFieldEnum | candy_barOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type candy_barCountOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre_producto?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrder
    es_promocion?: SortOrder
    precio_promocional?: SortOrder
    promo_fecha_inicio?: SortOrder
    promo_fecha_fin?: SortOrder
    categoria?: SortOrder
    stock?: SortOrder
  }

  export type candy_barAvgOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    precio_promocional?: SortOrder
    stock?: SortOrder
  }

  export type candy_barMaxOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre_producto?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrder
    es_promocion?: SortOrder
    precio_promocional?: SortOrder
    promo_fecha_inicio?: SortOrder
    promo_fecha_fin?: SortOrder
    categoria?: SortOrder
    stock?: SortOrder
  }

  export type candy_barMinOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre_producto?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    imagen_url?: SortOrder
    es_promocion?: SortOrder
    precio_promocional?: SortOrder
    promo_fecha_inicio?: SortOrder
    promo_fecha_fin?: SortOrder
    categoria?: SortOrder
    stock?: SortOrder
  }

  export type candy_barSumOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    precio_promocional?: SortOrder
    stock?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FuncionesListRelationFilter = {
    every?: funcionesWhereInput
    some?: funcionesWhereInput
    none?: funcionesWhereInput
  }

  export type funcionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cartelerasOrderByRelevanceInput = {
    fields: cartelerasOrderByRelevanceFieldEnum | cartelerasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type cartelerasCountOrderByAggregateInput = {
    id_cartelera?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descripcion?: SortOrder
  }

  export type cartelerasAvgOrderByAggregateInput = {
    id_cartelera?: SortOrder
  }

  export type cartelerasMaxOrderByAggregateInput = {
    id_cartelera?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descripcion?: SortOrder
  }

  export type cartelerasMinOrderByAggregateInput = {
    id_cartelera?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descripcion?: SortOrder
  }

  export type cartelerasSumOrderByAggregateInput = {
    id_cartelera?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EmpleadosListRelationFilter = {
    every?: empleadosWhereInput
    some?: empleadosWhereInput
    none?: empleadosWhereInput
  }

  export type SalasListRelationFilter = {
    every?: salasWhereInput
    some?: salasWhereInput
    none?: salasWhereInput
  }

  export type empleadosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type salasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cinesOrderByRelevanceInput = {
    fields: cinesOrderByRelevanceFieldEnum | cinesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type cinesCountOrderByAggregateInput = {
    id_cine?: SortOrder
    nombre_cine?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    facebook_url?: SortOrder
    instagram_url?: SortOrder
    tiktok_url?: SortOrder
    email?: SortOrder
    ubicacion_url?: SortOrder
  }

  export type cinesAvgOrderByAggregateInput = {
    id_cine?: SortOrder
  }

  export type cinesMaxOrderByAggregateInput = {
    id_cine?: SortOrder
    nombre_cine?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    facebook_url?: SortOrder
    instagram_url?: SortOrder
    tiktok_url?: SortOrder
    email?: SortOrder
    ubicacion_url?: SortOrder
  }

  export type cinesMinOrderByAggregateInput = {
    id_cine?: SortOrder
    nombre_cine?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    facebook_url?: SortOrder
    instagram_url?: SortOrder
    tiktok_url?: SortOrder
    email?: SortOrder
    ubicacion_url?: SortOrder
  }

  export type cinesSumOrderByAggregateInput = {
    id_cine?: SortOrder
  }

  export type PeliculasListRelationFilter = {
    every?: peliculasWhereInput
    some?: peliculasWhereInput
    none?: peliculasWhereInput
  }

  export type peliculasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clasificacionesOrderByRelevanceInput = {
    fields: clasificacionesOrderByRelevanceFieldEnum | clasificacionesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type clasificacionesCountOrderByAggregateInput = {
    id_clasificacion?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
  }

  export type clasificacionesAvgOrderByAggregateInput = {
    id_clasificacion?: SortOrder
  }

  export type clasificacionesMaxOrderByAggregateInput = {
    id_clasificacion?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
  }

  export type clasificacionesMinOrderByAggregateInput = {
    id_clasificacion?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
  }

  export type clasificacionesSumOrderByAggregateInput = {
    id_clasificacion?: SortOrder
  }

  export type Peliculas_directoresListRelationFilter = {
    every?: peliculas_directoresWhereInput
    some?: peliculas_directoresWhereInput
    none?: peliculas_directoresWhereInput
  }

  export type peliculas_directoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type directoresOrderByRelevanceInput = {
    fields: directoresOrderByRelevanceFieldEnum | directoresOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type directoresCountOrderByAggregateInput = {
    id_director?: SortOrder
    nombre_director?: SortOrder
    apellido_director?: SortOrder
    biografia?: SortOrder
  }

  export type directoresAvgOrderByAggregateInput = {
    id_director?: SortOrder
  }

  export type directoresMaxOrderByAggregateInput = {
    id_director?: SortOrder
    nombre_director?: SortOrder
    apellido_director?: SortOrder
    biografia?: SortOrder
  }

  export type directoresMinOrderByAggregateInput = {
    id_director?: SortOrder
    nombre_director?: SortOrder
    apellido_director?: SortOrder
    biografia?: SortOrder
  }

  export type directoresSumOrderByAggregateInput = {
    id_director?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type CinesNullableScalarRelationFilter = {
    is?: cinesWhereInput | null
    isNot?: cinesWhereInput | null
  }

  export type Roles_empleadosNullableScalarRelationFilter = {
    is?: roles_empleadosWhereInput | null
    isNot?: roles_empleadosWhereInput | null
  }

  export type NotificacionesListRelationFilter = {
    every?: notificacionesWhereInput
    some?: notificacionesWhereInput
    none?: notificacionesWhereInput
  }

  export type notificacionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type empleadosOrderByRelevanceInput = {
    fields: empleadosOrderByRelevanceFieldEnum | empleadosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type empleadosCountOrderByAggregateInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    ci?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    fecha_contrato?: SortOrder
    id_cine?: SortOrder
    id_rol?: SortOrder
    usuario_sistema?: SortOrder
  }

  export type empleadosAvgOrderByAggregateInput = {
    id_empleado?: SortOrder
    id_cine?: SortOrder
    id_rol?: SortOrder
  }

  export type empleadosMaxOrderByAggregateInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    ci?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    fecha_contrato?: SortOrder
    id_cine?: SortOrder
    id_rol?: SortOrder
    usuario_sistema?: SortOrder
  }

  export type empleadosMinOrderByAggregateInput = {
    id_empleado?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    ci?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    fecha_contrato?: SortOrder
    id_cine?: SortOrder
    id_rol?: SortOrder
    usuario_sistema?: SortOrder
  }

  export type empleadosSumOrderByAggregateInput = {
    id_empleado?: SortOrder
    id_cine?: SortOrder
    id_rol?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type BoletosListRelationFilter = {
    every?: boletosWhereInput
    some?: boletosWhereInput
    none?: boletosWhereInput
  }

  export type CartelerasScalarRelationFilter = {
    is?: cartelerasWhereInput
    isNot?: cartelerasWhereInput
  }

  export type PeliculasScalarRelationFilter = {
    is?: peliculasWhereInput
    isNot?: peliculasWhereInput
  }

  export type SalasScalarRelationFilter = {
    is?: salasWhereInput
    isNot?: salasWhereInput
  }

  export type boletosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type funcionesCountOrderByAggregateInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    fecha_hora_inicio?: SortOrder
    fecha_hora_fin?: SortOrder
    precio_boleto?: SortOrder
  }

  export type funcionesAvgOrderByAggregateInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    precio_boleto?: SortOrder
  }

  export type funcionesMaxOrderByAggregateInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    fecha_hora_inicio?: SortOrder
    fecha_hora_fin?: SortOrder
    precio_boleto?: SortOrder
  }

  export type funcionesMinOrderByAggregateInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    fecha_hora_inicio?: SortOrder
    fecha_hora_fin?: SortOrder
    precio_boleto?: SortOrder
  }

  export type funcionesSumOrderByAggregateInput = {
    id_funcion?: SortOrder
    id_cartelera?: SortOrder
    id_sala?: SortOrder
    id_pelicula?: SortOrder
    precio_boleto?: SortOrder
  }

  export type Peliculas_generosListRelationFilter = {
    every?: peliculas_generosWhereInput
    some?: peliculas_generosWhereInput
    none?: peliculas_generosWhereInput
  }

  export type peliculas_generosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type generosOrderByRelevanceInput = {
    fields: generosOrderByRelevanceFieldEnum | generosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type generosCountOrderByAggregateInput = {
    id_genero?: SortOrder
    nombre_genero?: SortOrder
  }

  export type generosAvgOrderByAggregateInput = {
    id_genero?: SortOrder
  }

  export type generosMaxOrderByAggregateInput = {
    id_genero?: SortOrder
    nombre_genero?: SortOrder
  }

  export type generosMinOrderByAggregateInput = {
    id_genero?: SortOrder
    nombre_genero?: SortOrder
  }

  export type generosSumOrderByAggregateInput = {
    id_genero?: SortOrder
  }

  export type historial_reproduccionId_usuarioId_peliculaCompoundUniqueInput = {
    id_usuario: number
    id_pelicula: number
  }

  export type historial_reproduccionCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    fecha_visualizacion?: SortOrder
    progreso_visto_porcentaje?: SortOrder
  }

  export type historial_reproduccionAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    progreso_visto_porcentaje?: SortOrder
  }

  export type historial_reproduccionMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    fecha_visualizacion?: SortOrder
    progreso_visto_porcentaje?: SortOrder
  }

  export type historial_reproduccionMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    fecha_visualizacion?: SortOrder
    progreso_visto_porcentaje?: SortOrder
  }

  export type historial_reproduccionSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    progreso_visto_porcentaje?: SortOrder
  }

  export type Enumimagenes_extra_tipoFilter<$PrismaModel = never> = {
    equals?: $Enums.imagenes_extra_tipo | Enumimagenes_extra_tipoFieldRefInput<$PrismaModel>
    in?: $Enums.imagenes_extra_tipo[]
    notIn?: $Enums.imagenes_extra_tipo[]
    not?: NestedEnumimagenes_extra_tipoFilter<$PrismaModel> | $Enums.imagenes_extra_tipo
  }

  export type imagenes_extraOrderByRelevanceInput = {
    fields: imagenes_extraOrderByRelevanceFieldEnum | imagenes_extraOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type imagenes_extraCountOrderByAggregateInput = {
    id_imagen_extra?: SortOrder
    tipo?: SortOrder
    nombre?: SortOrder
    url?: SortOrder
    descripcion?: SortOrder
  }

  export type imagenes_extraAvgOrderByAggregateInput = {
    id_imagen_extra?: SortOrder
  }

  export type imagenes_extraMaxOrderByAggregateInput = {
    id_imagen_extra?: SortOrder
    tipo?: SortOrder
    nombre?: SortOrder
    url?: SortOrder
    descripcion?: SortOrder
  }

  export type imagenes_extraMinOrderByAggregateInput = {
    id_imagen_extra?: SortOrder
    tipo?: SortOrder
    nombre?: SortOrder
    url?: SortOrder
    descripcion?: SortOrder
  }

  export type imagenes_extraSumOrderByAggregateInput = {
    id_imagen_extra?: SortOrder
  }

  export type Enumimagenes_extra_tipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.imagenes_extra_tipo | Enumimagenes_extra_tipoFieldRefInput<$PrismaModel>
    in?: $Enums.imagenes_extra_tipo[]
    notIn?: $Enums.imagenes_extra_tipo[]
    not?: NestedEnumimagenes_extra_tipoWithAggregatesFilter<$PrismaModel> | $Enums.imagenes_extra_tipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumimagenes_extra_tipoFilter<$PrismaModel>
    _max?: NestedEnumimagenes_extra_tipoFilter<$PrismaModel>
  }

  export type UsuariosNullableScalarRelationFilter = {
    is?: usuariosWhereInput | null
    isNot?: usuariosWhereInput | null
  }

  export type intentos_loginOrderByRelevanceInput = {
    fields: intentos_loginOrderByRelevanceFieldEnum | intentos_loginOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type intentos_loginCountOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    exito?: SortOrder
    ip_origen?: SortOrder
    fecha?: SortOrder
  }

  export type intentos_loginAvgOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
  }

  export type intentos_loginMaxOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    exito?: SortOrder
    ip_origen?: SortOrder
    fecha?: SortOrder
  }

  export type intentos_loginMinOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
    exito?: SortOrder
    ip_origen?: SortOrder
    fecha?: SortOrder
  }

  export type intentos_loginSumOrderByAggregateInput = {
    id?: SortOrder
    id_usuario?: SortOrder
  }

  export type EmpleadosNullableScalarRelationFilter = {
    is?: empleadosWhereInput | null
    isNot?: empleadosWhereInput | null
  }

  export type BoletosNullableScalarRelationFilter = {
    is?: boletosWhereInput | null
    isNot?: boletosWhereInput | null
  }

  export type logs_actividadOrderByRelevanceInput = {
    fields: logs_actividadOrderByRelevanceFieldEnum | logs_actividadOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type logs_actividadCountOrderByAggregateInput = {
    id_log?: SortOrder
    id_usuario?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
    detalle?: SortOrder
    id_empleado?: SortOrder
    id_boleto?: SortOrder
  }

  export type logs_actividadAvgOrderByAggregateInput = {
    id_log?: SortOrder
    id_usuario?: SortOrder
    id_empleado?: SortOrder
    id_boleto?: SortOrder
  }

  export type logs_actividadMaxOrderByAggregateInput = {
    id_log?: SortOrder
    id_usuario?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
    detalle?: SortOrder
    id_empleado?: SortOrder
    id_boleto?: SortOrder
  }

  export type logs_actividadMinOrderByAggregateInput = {
    id_log?: SortOrder
    id_usuario?: SortOrder
    accion?: SortOrder
    fecha_hora?: SortOrder
    detalle?: SortOrder
    id_empleado?: SortOrder
    id_boleto?: SortOrder
  }

  export type logs_actividadSumOrderByAggregateInput = {
    id_log?: SortOrder
    id_usuario?: SortOrder
    id_empleado?: SortOrder
    id_boleto?: SortOrder
  }

  export type PagosListRelationFilter = {
    every?: pagosWhereInput
    some?: pagosWhereInput
    none?: pagosWhereInput
  }

  export type pagosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type metodos_pagoOrderByRelevanceInput = {
    fields: metodos_pagoOrderByRelevanceFieldEnum | metodos_pagoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type metodos_pagoCountOrderByAggregateInput = {
    id_metodo?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type metodos_pagoAvgOrderByAggregateInput = {
    id_metodo?: SortOrder
  }

  export type metodos_pagoMaxOrderByAggregateInput = {
    id_metodo?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type metodos_pagoMinOrderByAggregateInput = {
    id_metodo?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type metodos_pagoSumOrderByAggregateInput = {
    id_metodo?: SortOrder
  }

  export type notificacionesOrderByRelevanceInput = {
    fields: notificacionesOrderByRelevanceFieldEnum | notificacionesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type notificacionesCountOrderByAggregateInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    fecha_envio?: SortOrder
    leido?: SortOrder
    id_empleado?: SortOrder
  }

  export type notificacionesAvgOrderByAggregateInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type notificacionesMaxOrderByAggregateInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    fecha_envio?: SortOrder
    leido?: SortOrder
    id_empleado?: SortOrder
  }

  export type notificacionesMinOrderByAggregateInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    titulo?: SortOrder
    mensaje?: SortOrder
    fecha_envio?: SortOrder
    leido?: SortOrder
    id_empleado?: SortOrder
  }

  export type notificacionesSumOrderByAggregateInput = {
    id_notificacion?: SortOrder
    id_usuario?: SortOrder
    id_empleado?: SortOrder
  }

  export type Enumpagos_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.pagos_estado | Enumpagos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.pagos_estado[] | null
    notIn?: $Enums.pagos_estado[] | null
    not?: NestedEnumpagos_estadoNullableFilter<$PrismaModel> | $Enums.pagos_estado | null
  }

  export type Metodos_pagoScalarRelationFilter = {
    is?: metodos_pagoWhereInput
    isNot?: metodos_pagoWhereInput
  }

  export type pagosCountOrderByAggregateInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
    fecha_pago?: SortOrder
    estado?: SortOrder
  }

  export type pagosAvgOrderByAggregateInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
  }

  export type pagosMaxOrderByAggregateInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
    fecha_pago?: SortOrder
    estado?: SortOrder
  }

  export type pagosMinOrderByAggregateInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
    fecha_pago?: SortOrder
    estado?: SortOrder
  }

  export type pagosSumOrderByAggregateInput = {
    id_pago?: SortOrder
    id_usuario?: SortOrder
    monto?: SortOrder
    id_metodo?: SortOrder
  }

  export type Enumpagos_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pagos_estado | Enumpagos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.pagos_estado[] | null
    notIn?: $Enums.pagos_estado[] | null
    not?: NestedEnumpagos_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.pagos_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpagos_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumpagos_estadoNullableFilter<$PrismaModel>
  }

  export type Enumpeliculas_tipo_contenidoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.peliculas_tipo_contenido | Enumpeliculas_tipo_contenidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.peliculas_tipo_contenido[] | null
    notIn?: $Enums.peliculas_tipo_contenido[] | null
    not?: NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel> | $Enums.peliculas_tipo_contenido | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Historial_reproduccionListRelationFilter = {
    every?: historial_reproduccionWhereInput
    some?: historial_reproduccionWhereInput
    none?: historial_reproduccionWhereInput
  }

  export type ClasificacionesNullableScalarRelationFilter = {
    is?: clasificacionesWhereInput | null
    isNot?: clasificacionesWhereInput | null
  }

  export type ProductorasNullableScalarRelationFilter = {
    is?: productorasWhereInput | null
    isNot?: productorasWhereInput | null
  }

  export type ValoracionesListRelationFilter = {
    every?: valoracionesWhereInput
    some?: valoracionesWhereInput
    none?: valoracionesWhereInput
  }

  export type historial_reproduccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type valoracionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type peliculasOrderByRelevanceInput = {
    fields: peliculasOrderByRelevanceFieldEnum | peliculasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type peliculasCountOrderByAggregateInput = {
    id_pelicula?: SortOrder
    titulo?: SortOrder
    sinopsis?: SortOrder
    duracion?: SortOrder
    fecha_lanzamiento?: SortOrder
    id_productora?: SortOrder
    tipo_contenido?: SortOrder
    imagen_portada?: SortOrder
    url_video?: SortOrder
    id_clasificacion?: SortOrder
    calificacion_promedio?: SortOrder
  }

  export type peliculasAvgOrderByAggregateInput = {
    id_pelicula?: SortOrder
    duracion?: SortOrder
    id_productora?: SortOrder
    id_clasificacion?: SortOrder
    calificacion_promedio?: SortOrder
  }

  export type peliculasMaxOrderByAggregateInput = {
    id_pelicula?: SortOrder
    titulo?: SortOrder
    sinopsis?: SortOrder
    duracion?: SortOrder
    fecha_lanzamiento?: SortOrder
    id_productora?: SortOrder
    tipo_contenido?: SortOrder
    imagen_portada?: SortOrder
    url_video?: SortOrder
    id_clasificacion?: SortOrder
    calificacion_promedio?: SortOrder
  }

  export type peliculasMinOrderByAggregateInput = {
    id_pelicula?: SortOrder
    titulo?: SortOrder
    sinopsis?: SortOrder
    duracion?: SortOrder
    fecha_lanzamiento?: SortOrder
    id_productora?: SortOrder
    tipo_contenido?: SortOrder
    imagen_portada?: SortOrder
    url_video?: SortOrder
    id_clasificacion?: SortOrder
    calificacion_promedio?: SortOrder
  }

  export type peliculasSumOrderByAggregateInput = {
    id_pelicula?: SortOrder
    duracion?: SortOrder
    id_productora?: SortOrder
    id_clasificacion?: SortOrder
    calificacion_promedio?: SortOrder
  }

  export type Enumpeliculas_tipo_contenidoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.peliculas_tipo_contenido | Enumpeliculas_tipo_contenidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.peliculas_tipo_contenido[] | null
    notIn?: $Enums.peliculas_tipo_contenido[] | null
    not?: NestedEnumpeliculas_tipo_contenidoNullableWithAggregatesFilter<$PrismaModel> | $Enums.peliculas_tipo_contenido | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel>
    _max?: NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DirectoresScalarRelationFilter = {
    is?: directoresWhereInput
    isNot?: directoresWhereInput
  }

  export type peliculas_directoresId_peliculaId_directorCompoundUniqueInput = {
    id_pelicula: number
    id_director: number
  }

  export type peliculas_directoresCountOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
  }

  export type peliculas_directoresAvgOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
  }

  export type peliculas_directoresMaxOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
  }

  export type peliculas_directoresMinOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
  }

  export type peliculas_directoresSumOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_director?: SortOrder
  }

  export type GenerosScalarRelationFilter = {
    is?: generosWhereInput
    isNot?: generosWhereInput
  }

  export type peliculas_generosId_peliculaId_generoCompoundUniqueInput = {
    id_pelicula: number
    id_genero: number
  }

  export type peliculas_generosCountOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
  }

  export type peliculas_generosAvgOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
  }

  export type peliculas_generosMaxOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
  }

  export type peliculas_generosMinOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
  }

  export type peliculas_generosSumOrderByAggregateInput = {
    id_pelicula?: SortOrder
    id_genero?: SortOrder
  }

  export type SuscripcionesListRelationFilter = {
    every?: suscripcionesWhereInput
    some?: suscripcionesWhereInput
    none?: suscripcionesWhereInput
  }

  export type suscripcionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type planesOrderByRelevanceInput = {
    fields: planesOrderByRelevanceFieldEnum | planesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type planesCountOrderByAggregateInput = {
    id_plan?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    duracion_dias?: SortOrder
    descripcion?: SortOrder
  }

  export type planesAvgOrderByAggregateInput = {
    id_plan?: SortOrder
    precio?: SortOrder
    duracion_dias?: SortOrder
  }

  export type planesMaxOrderByAggregateInput = {
    id_plan?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    duracion_dias?: SortOrder
    descripcion?: SortOrder
  }

  export type planesMinOrderByAggregateInput = {
    id_plan?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    duracion_dias?: SortOrder
    descripcion?: SortOrder
  }

  export type planesSumOrderByAggregateInput = {
    id_plan?: SortOrder
    precio?: SortOrder
    duracion_dias?: SortOrder
  }

  export type productorasOrderByRelevanceInput = {
    fields: productorasOrderByRelevanceFieldEnum | productorasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type productorasCountOrderByAggregateInput = {
    id_productora?: SortOrder
    nombre_productora?: SortOrder
    pais_origen?: SortOrder
  }

  export type productorasAvgOrderByAggregateInput = {
    id_productora?: SortOrder
  }

  export type productorasMaxOrderByAggregateInput = {
    id_productora?: SortOrder
    nombre_productora?: SortOrder
    pais_origen?: SortOrder
  }

  export type productorasMinOrderByAggregateInput = {
    id_productora?: SortOrder
    nombre_productora?: SortOrder
    pais_origen?: SortOrder
  }

  export type productorasSumOrderByAggregateInput = {
    id_productora?: SortOrder
  }

  export type promocionesOrderByRelevanceInput = {
    fields: promocionesOrderByRelevanceFieldEnum | promocionesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type promocionesCountOrderByAggregateInput = {
    id_promocion?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descuento?: SortOrder
  }

  export type promocionesAvgOrderByAggregateInput = {
    id_promocion?: SortOrder
    descuento?: SortOrder
  }

  export type promocionesMaxOrderByAggregateInput = {
    id_promocion?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descuento?: SortOrder
  }

  export type promocionesMinOrderByAggregateInput = {
    id_promocion?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    descuento?: SortOrder
  }

  export type promocionesSumOrderByAggregateInput = {
    id_promocion?: SortOrder
    descuento?: SortOrder
  }

  export type ActoresScalarRelationFilter = {
    is?: actoresWhereInput
    isNot?: actoresWhereInput
  }

  export type repartoOrderByRelevanceInput = {
    fields: repartoOrderByRelevanceFieldEnum | repartoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type repartoCountOrderByAggregateInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
    rol?: SortOrder
  }

  export type repartoAvgOrderByAggregateInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
  }

  export type repartoMaxOrderByAggregateInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
    rol?: SortOrder
  }

  export type repartoMinOrderByAggregateInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
    rol?: SortOrder
  }

  export type repartoSumOrderByAggregateInput = {
    id_reparto?: SortOrder
    id_pelicula?: SortOrder
    id_actor?: SortOrder
  }

  export type Enumreportes_usuarios_tipo_reporteFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_tipo_reporte | Enumreportes_usuarios_tipo_reporteFieldRefInput<$PrismaModel>
    in?: $Enums.reportes_usuarios_tipo_reporte[]
    notIn?: $Enums.reportes_usuarios_tipo_reporte[]
    not?: NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel> | $Enums.reportes_usuarios_tipo_reporte
  }

  export type Enumreportes_usuarios_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_estado | Enumreportes_usuarios_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.reportes_usuarios_estado[] | null
    notIn?: $Enums.reportes_usuarios_estado[] | null
    not?: NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel> | $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosOrderByRelevanceInput = {
    fields: reportes_usuariosOrderByRelevanceFieldEnum | reportes_usuariosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reportes_usuariosCountOrderByAggregateInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
    tipo_reporte?: SortOrder
    descripcion?: SortOrder
    fecha_reporte?: SortOrder
    estado?: SortOrder
  }

  export type reportes_usuariosAvgOrderByAggregateInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
  }

  export type reportes_usuariosMaxOrderByAggregateInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
    tipo_reporte?: SortOrder
    descripcion?: SortOrder
    fecha_reporte?: SortOrder
    estado?: SortOrder
  }

  export type reportes_usuariosMinOrderByAggregateInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
    tipo_reporte?: SortOrder
    descripcion?: SortOrder
    fecha_reporte?: SortOrder
    estado?: SortOrder
  }

  export type reportes_usuariosSumOrderByAggregateInput = {
    id_reporte?: SortOrder
    id_usuario?: SortOrder
  }

  export type Enumreportes_usuarios_tipo_reporteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_tipo_reporte | Enumreportes_usuarios_tipo_reporteFieldRefInput<$PrismaModel>
    in?: $Enums.reportes_usuarios_tipo_reporte[]
    notIn?: $Enums.reportes_usuarios_tipo_reporte[]
    not?: NestedEnumreportes_usuarios_tipo_reporteWithAggregatesFilter<$PrismaModel> | $Enums.reportes_usuarios_tipo_reporte
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel>
    _max?: NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel>
  }

  export type Enumreportes_usuarios_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_estado | Enumreportes_usuarios_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.reportes_usuarios_estado[] | null
    notIn?: $Enums.reportes_usuarios_estado[] | null
    not?: NestedEnumreportes_usuarios_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.reportes_usuarios_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel>
  }

  export type roles_empleadosOrderByRelevanceInput = {
    fields: roles_empleadosOrderByRelevanceFieldEnum | roles_empleadosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type roles_empleadosCountOrderByAggregateInput = {
    id_rol?: SortOrder
    nombre_rol?: SortOrder
  }

  export type roles_empleadosAvgOrderByAggregateInput = {
    id_rol?: SortOrder
  }

  export type roles_empleadosMaxOrderByAggregateInput = {
    id_rol?: SortOrder
    nombre_rol?: SortOrder
  }

  export type roles_empleadosMinOrderByAggregateInput = {
    id_rol?: SortOrder
    nombre_rol?: SortOrder
  }

  export type roles_empleadosSumOrderByAggregateInput = {
    id_rol?: SortOrder
  }

  export type CinesScalarRelationFilter = {
    is?: cinesWhereInput
    isNot?: cinesWhereInput
  }

  export type salasOrderByRelevanceInput = {
    fields: salasOrderByRelevanceFieldEnum | salasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type salasCountOrderByAggregateInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    nombre_sala?: SortOrder
    capacidad?: SortOrder
  }

  export type salasAvgOrderByAggregateInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    capacidad?: SortOrder
  }

  export type salasMaxOrderByAggregateInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    nombre_sala?: SortOrder
    capacidad?: SortOrder
  }

  export type salasMinOrderByAggregateInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    nombre_sala?: SortOrder
    capacidad?: SortOrder
  }

  export type salasSumOrderByAggregateInput = {
    id_sala?: SortOrder
    id_cine?: SortOrder
    capacidad?: SortOrder
  }

  export type Enumsuscripciones_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.suscripciones_estado | Enumsuscripciones_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.suscripciones_estado[] | null
    notIn?: $Enums.suscripciones_estado[] | null
    not?: NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel> | $Enums.suscripciones_estado | null
  }

  export type PlanesNullableScalarRelationFilter = {
    is?: planesWhereInput | null
    isNot?: planesWhereInput | null
  }

  export type suscripcionesCountOrderByAggregateInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    estado?: SortOrder
    id_plan?: SortOrder
  }

  export type suscripcionesAvgOrderByAggregateInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    id_plan?: SortOrder
  }

  export type suscripcionesMaxOrderByAggregateInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    estado?: SortOrder
    id_plan?: SortOrder
  }

  export type suscripcionesMinOrderByAggregateInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    estado?: SortOrder
    id_plan?: SortOrder
  }

  export type suscripcionesSumOrderByAggregateInput = {
    id_suscripcion?: SortOrder
    id_usuario?: SortOrder
    id_plan?: SortOrder
  }

  export type Enumsuscripciones_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.suscripciones_estado | Enumsuscripciones_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.suscripciones_estado[] | null
    notIn?: $Enums.suscripciones_estado[] | null
    not?: NestedEnumsuscripciones_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.suscripciones_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel>
  }

  export type Enumusuarios_rolNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.usuarios_rol | Enumusuarios_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.usuarios_rol[] | null
    notIn?: $Enums.usuarios_rol[] | null
    not?: NestedEnumusuarios_rolNullableFilter<$PrismaModel> | $Enums.usuarios_rol | null
  }

  export type Intentos_loginListRelationFilter = {
    every?: intentos_loginWhereInput
    some?: intentos_loginWhereInput
    none?: intentos_loginWhereInput
  }

  export type Reportes_usuariosListRelationFilter = {
    every?: reportes_usuariosWhereInput
    some?: reportes_usuariosWhereInput
    none?: reportes_usuariosWhereInput
  }

  export type intentos_loginOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportes_usuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosOrderByRelevanceInput = {
    fields: usuariosOrderByRelevanceFieldEnum | usuariosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usuariosCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    fecha_registro?: SortOrder
    bloqueado_hasta?: SortOrder
    foto_perfil?: SortOrder
    verificado?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    fecha_registro?: SortOrder
    bloqueado_hasta?: SortOrder
    foto_perfil?: SortOrder
    verificado?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    fecha_registro?: SortOrder
    bloqueado_hasta?: SortOrder
    foto_perfil?: SortOrder
    verificado?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type Enumusuarios_rolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.usuarios_rol | Enumusuarios_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.usuarios_rol[] | null
    notIn?: $Enums.usuarios_rol[] | null
    not?: NestedEnumusuarios_rolNullableWithAggregatesFilter<$PrismaModel> | $Enums.usuarios_rol | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusuarios_rolNullableFilter<$PrismaModel>
    _max?: NestedEnumusuarios_rolNullableFilter<$PrismaModel>
  }

  export type valoracionesOrderByRelevanceInput = {
    fields: valoracionesOrderByRelevanceFieldEnum | valoracionesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type valoracionesCountOrderByAggregateInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrder
    fecha_valoracion?: SortOrder
  }

  export type valoracionesAvgOrderByAggregateInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrder
  }

  export type valoracionesMaxOrderByAggregateInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrder
    fecha_valoracion?: SortOrder
  }

  export type valoracionesMinOrderByAggregateInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrder
    fecha_valoracion?: SortOrder
  }

  export type valoracionesSumOrderByAggregateInput = {
    id_valoracion?: SortOrder
    id_usuario?: SortOrder
    id_pelicula?: SortOrder
    puntaje?: SortOrder
  }

  export type repartoCreateNestedManyWithoutActoresInput = {
    create?: XOR<repartoCreateWithoutActoresInput, repartoUncheckedCreateWithoutActoresInput> | repartoCreateWithoutActoresInput[] | repartoUncheckedCreateWithoutActoresInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutActoresInput | repartoCreateOrConnectWithoutActoresInput[]
    createMany?: repartoCreateManyActoresInputEnvelope
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
  }

  export type repartoUncheckedCreateNestedManyWithoutActoresInput = {
    create?: XOR<repartoCreateWithoutActoresInput, repartoUncheckedCreateWithoutActoresInput> | repartoCreateWithoutActoresInput[] | repartoUncheckedCreateWithoutActoresInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutActoresInput | repartoCreateOrConnectWithoutActoresInput[]
    createMany?: repartoCreateManyActoresInputEnvelope
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type repartoUpdateManyWithoutActoresNestedInput = {
    create?: XOR<repartoCreateWithoutActoresInput, repartoUncheckedCreateWithoutActoresInput> | repartoCreateWithoutActoresInput[] | repartoUncheckedCreateWithoutActoresInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutActoresInput | repartoCreateOrConnectWithoutActoresInput[]
    upsert?: repartoUpsertWithWhereUniqueWithoutActoresInput | repartoUpsertWithWhereUniqueWithoutActoresInput[]
    createMany?: repartoCreateManyActoresInputEnvelope
    set?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    disconnect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    delete?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    update?: repartoUpdateWithWhereUniqueWithoutActoresInput | repartoUpdateWithWhereUniqueWithoutActoresInput[]
    updateMany?: repartoUpdateManyWithWhereWithoutActoresInput | repartoUpdateManyWithWhereWithoutActoresInput[]
    deleteMany?: repartoScalarWhereInput | repartoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type repartoUncheckedUpdateManyWithoutActoresNestedInput = {
    create?: XOR<repartoCreateWithoutActoresInput, repartoUncheckedCreateWithoutActoresInput> | repartoCreateWithoutActoresInput[] | repartoUncheckedCreateWithoutActoresInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutActoresInput | repartoCreateOrConnectWithoutActoresInput[]
    upsert?: repartoUpsertWithWhereUniqueWithoutActoresInput | repartoUpsertWithWhereUniqueWithoutActoresInput[]
    createMany?: repartoCreateManyActoresInputEnvelope
    set?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    disconnect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    delete?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    update?: repartoUpdateWithWhereUniqueWithoutActoresInput | repartoUpdateWithWhereUniqueWithoutActoresInput[]
    updateMany?: repartoUpdateManyWithWhereWithoutActoresInput | repartoUpdateManyWithWhereWithoutActoresInput[]
    deleteMany?: repartoScalarWhereInput | repartoScalarWhereInput[]
  }

  export type funcionesCreateNestedOneWithoutBoletosInput = {
    create?: XOR<funcionesCreateWithoutBoletosInput, funcionesUncheckedCreateWithoutBoletosInput>
    connectOrCreate?: funcionesCreateOrConnectWithoutBoletosInput
    connect?: funcionesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutBoletosInput = {
    create?: XOR<usuariosCreateWithoutBoletosInput, usuariosUncheckedCreateWithoutBoletosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutBoletosInput
    connect?: usuariosWhereUniqueInput
  }

  export type logs_actividadCreateNestedManyWithoutBoletosInput = {
    create?: XOR<logs_actividadCreateWithoutBoletosInput, logs_actividadUncheckedCreateWithoutBoletosInput> | logs_actividadCreateWithoutBoletosInput[] | logs_actividadUncheckedCreateWithoutBoletosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutBoletosInput | logs_actividadCreateOrConnectWithoutBoletosInput[]
    createMany?: logs_actividadCreateManyBoletosInputEnvelope
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
  }

  export type logs_actividadUncheckedCreateNestedManyWithoutBoletosInput = {
    create?: XOR<logs_actividadCreateWithoutBoletosInput, logs_actividadUncheckedCreateWithoutBoletosInput> | logs_actividadCreateWithoutBoletosInput[] | logs_actividadUncheckedCreateWithoutBoletosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutBoletosInput | logs_actividadCreateOrConnectWithoutBoletosInput[]
    createMany?: logs_actividadCreateManyBoletosInputEnvelope
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
  }

  export type NullableEnumboletos_estadoFieldUpdateOperationsInput = {
    set?: $Enums.boletos_estado | null
  }

  export type funcionesUpdateOneRequiredWithoutBoletosNestedInput = {
    create?: XOR<funcionesCreateWithoutBoletosInput, funcionesUncheckedCreateWithoutBoletosInput>
    connectOrCreate?: funcionesCreateOrConnectWithoutBoletosInput
    upsert?: funcionesUpsertWithoutBoletosInput
    connect?: funcionesWhereUniqueInput
    update?: XOR<XOR<funcionesUpdateToOneWithWhereWithoutBoletosInput, funcionesUpdateWithoutBoletosInput>, funcionesUncheckedUpdateWithoutBoletosInput>
  }

  export type usuariosUpdateOneRequiredWithoutBoletosNestedInput = {
    create?: XOR<usuariosCreateWithoutBoletosInput, usuariosUncheckedCreateWithoutBoletosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutBoletosInput
    upsert?: usuariosUpsertWithoutBoletosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutBoletosInput, usuariosUpdateWithoutBoletosInput>, usuariosUncheckedUpdateWithoutBoletosInput>
  }

  export type logs_actividadUpdateManyWithoutBoletosNestedInput = {
    create?: XOR<logs_actividadCreateWithoutBoletosInput, logs_actividadUncheckedCreateWithoutBoletosInput> | logs_actividadCreateWithoutBoletosInput[] | logs_actividadUncheckedCreateWithoutBoletosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutBoletosInput | logs_actividadCreateOrConnectWithoutBoletosInput[]
    upsert?: logs_actividadUpsertWithWhereUniqueWithoutBoletosInput | logs_actividadUpsertWithWhereUniqueWithoutBoletosInput[]
    createMany?: logs_actividadCreateManyBoletosInputEnvelope
    set?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    disconnect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    delete?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    update?: logs_actividadUpdateWithWhereUniqueWithoutBoletosInput | logs_actividadUpdateWithWhereUniqueWithoutBoletosInput[]
    updateMany?: logs_actividadUpdateManyWithWhereWithoutBoletosInput | logs_actividadUpdateManyWithWhereWithoutBoletosInput[]
    deleteMany?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
  }

  export type logs_actividadUncheckedUpdateManyWithoutBoletosNestedInput = {
    create?: XOR<logs_actividadCreateWithoutBoletosInput, logs_actividadUncheckedCreateWithoutBoletosInput> | logs_actividadCreateWithoutBoletosInput[] | logs_actividadUncheckedCreateWithoutBoletosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutBoletosInput | logs_actividadCreateOrConnectWithoutBoletosInput[]
    upsert?: logs_actividadUpsertWithWhereUniqueWithoutBoletosInput | logs_actividadUpsertWithWhereUniqueWithoutBoletosInput[]
    createMany?: logs_actividadCreateManyBoletosInputEnvelope
    set?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    disconnect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    delete?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    update?: logs_actividadUpdateWithWhereUniqueWithoutBoletosInput | logs_actividadUpdateWithWhereUniqueWithoutBoletosInput[]
    updateMany?: logs_actividadUpdateManyWithWhereWithoutBoletosInput | logs_actividadUpdateManyWithWhereWithoutBoletosInput[]
    deleteMany?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type funcionesCreateNestedManyWithoutCartelerasInput = {
    create?: XOR<funcionesCreateWithoutCartelerasInput, funcionesUncheckedCreateWithoutCartelerasInput> | funcionesCreateWithoutCartelerasInput[] | funcionesUncheckedCreateWithoutCartelerasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutCartelerasInput | funcionesCreateOrConnectWithoutCartelerasInput[]
    createMany?: funcionesCreateManyCartelerasInputEnvelope
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
  }

  export type funcionesUncheckedCreateNestedManyWithoutCartelerasInput = {
    create?: XOR<funcionesCreateWithoutCartelerasInput, funcionesUncheckedCreateWithoutCartelerasInput> | funcionesCreateWithoutCartelerasInput[] | funcionesUncheckedCreateWithoutCartelerasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutCartelerasInput | funcionesCreateOrConnectWithoutCartelerasInput[]
    createMany?: funcionesCreateManyCartelerasInputEnvelope
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type funcionesUpdateManyWithoutCartelerasNestedInput = {
    create?: XOR<funcionesCreateWithoutCartelerasInput, funcionesUncheckedCreateWithoutCartelerasInput> | funcionesCreateWithoutCartelerasInput[] | funcionesUncheckedCreateWithoutCartelerasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutCartelerasInput | funcionesCreateOrConnectWithoutCartelerasInput[]
    upsert?: funcionesUpsertWithWhereUniqueWithoutCartelerasInput | funcionesUpsertWithWhereUniqueWithoutCartelerasInput[]
    createMany?: funcionesCreateManyCartelerasInputEnvelope
    set?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    disconnect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    delete?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    update?: funcionesUpdateWithWhereUniqueWithoutCartelerasInput | funcionesUpdateWithWhereUniqueWithoutCartelerasInput[]
    updateMany?: funcionesUpdateManyWithWhereWithoutCartelerasInput | funcionesUpdateManyWithWhereWithoutCartelerasInput[]
    deleteMany?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
  }

  export type funcionesUncheckedUpdateManyWithoutCartelerasNestedInput = {
    create?: XOR<funcionesCreateWithoutCartelerasInput, funcionesUncheckedCreateWithoutCartelerasInput> | funcionesCreateWithoutCartelerasInput[] | funcionesUncheckedCreateWithoutCartelerasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutCartelerasInput | funcionesCreateOrConnectWithoutCartelerasInput[]
    upsert?: funcionesUpsertWithWhereUniqueWithoutCartelerasInput | funcionesUpsertWithWhereUniqueWithoutCartelerasInput[]
    createMany?: funcionesCreateManyCartelerasInputEnvelope
    set?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    disconnect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    delete?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    update?: funcionesUpdateWithWhereUniqueWithoutCartelerasInput | funcionesUpdateWithWhereUniqueWithoutCartelerasInput[]
    updateMany?: funcionesUpdateManyWithWhereWithoutCartelerasInput | funcionesUpdateManyWithWhereWithoutCartelerasInput[]
    deleteMany?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
  }

  export type empleadosCreateNestedManyWithoutCinesInput = {
    create?: XOR<empleadosCreateWithoutCinesInput, empleadosUncheckedCreateWithoutCinesInput> | empleadosCreateWithoutCinesInput[] | empleadosUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutCinesInput | empleadosCreateOrConnectWithoutCinesInput[]
    createMany?: empleadosCreateManyCinesInputEnvelope
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
  }

  export type salasCreateNestedManyWithoutCinesInput = {
    create?: XOR<salasCreateWithoutCinesInput, salasUncheckedCreateWithoutCinesInput> | salasCreateWithoutCinesInput[] | salasUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: salasCreateOrConnectWithoutCinesInput | salasCreateOrConnectWithoutCinesInput[]
    createMany?: salasCreateManyCinesInputEnvelope
    connect?: salasWhereUniqueInput | salasWhereUniqueInput[]
  }

  export type empleadosUncheckedCreateNestedManyWithoutCinesInput = {
    create?: XOR<empleadosCreateWithoutCinesInput, empleadosUncheckedCreateWithoutCinesInput> | empleadosCreateWithoutCinesInput[] | empleadosUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutCinesInput | empleadosCreateOrConnectWithoutCinesInput[]
    createMany?: empleadosCreateManyCinesInputEnvelope
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
  }

  export type salasUncheckedCreateNestedManyWithoutCinesInput = {
    create?: XOR<salasCreateWithoutCinesInput, salasUncheckedCreateWithoutCinesInput> | salasCreateWithoutCinesInput[] | salasUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: salasCreateOrConnectWithoutCinesInput | salasCreateOrConnectWithoutCinesInput[]
    createMany?: salasCreateManyCinesInputEnvelope
    connect?: salasWhereUniqueInput | salasWhereUniqueInput[]
  }

  export type empleadosUpdateManyWithoutCinesNestedInput = {
    create?: XOR<empleadosCreateWithoutCinesInput, empleadosUncheckedCreateWithoutCinesInput> | empleadosCreateWithoutCinesInput[] | empleadosUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutCinesInput | empleadosCreateOrConnectWithoutCinesInput[]
    upsert?: empleadosUpsertWithWhereUniqueWithoutCinesInput | empleadosUpsertWithWhereUniqueWithoutCinesInput[]
    createMany?: empleadosCreateManyCinesInputEnvelope
    set?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    disconnect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    delete?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    update?: empleadosUpdateWithWhereUniqueWithoutCinesInput | empleadosUpdateWithWhereUniqueWithoutCinesInput[]
    updateMany?: empleadosUpdateManyWithWhereWithoutCinesInput | empleadosUpdateManyWithWhereWithoutCinesInput[]
    deleteMany?: empleadosScalarWhereInput | empleadosScalarWhereInput[]
  }

  export type salasUpdateManyWithoutCinesNestedInput = {
    create?: XOR<salasCreateWithoutCinesInput, salasUncheckedCreateWithoutCinesInput> | salasCreateWithoutCinesInput[] | salasUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: salasCreateOrConnectWithoutCinesInput | salasCreateOrConnectWithoutCinesInput[]
    upsert?: salasUpsertWithWhereUniqueWithoutCinesInput | salasUpsertWithWhereUniqueWithoutCinesInput[]
    createMany?: salasCreateManyCinesInputEnvelope
    set?: salasWhereUniqueInput | salasWhereUniqueInput[]
    disconnect?: salasWhereUniqueInput | salasWhereUniqueInput[]
    delete?: salasWhereUniqueInput | salasWhereUniqueInput[]
    connect?: salasWhereUniqueInput | salasWhereUniqueInput[]
    update?: salasUpdateWithWhereUniqueWithoutCinesInput | salasUpdateWithWhereUniqueWithoutCinesInput[]
    updateMany?: salasUpdateManyWithWhereWithoutCinesInput | salasUpdateManyWithWhereWithoutCinesInput[]
    deleteMany?: salasScalarWhereInput | salasScalarWhereInput[]
  }

  export type empleadosUncheckedUpdateManyWithoutCinesNestedInput = {
    create?: XOR<empleadosCreateWithoutCinesInput, empleadosUncheckedCreateWithoutCinesInput> | empleadosCreateWithoutCinesInput[] | empleadosUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutCinesInput | empleadosCreateOrConnectWithoutCinesInput[]
    upsert?: empleadosUpsertWithWhereUniqueWithoutCinesInput | empleadosUpsertWithWhereUniqueWithoutCinesInput[]
    createMany?: empleadosCreateManyCinesInputEnvelope
    set?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    disconnect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    delete?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    update?: empleadosUpdateWithWhereUniqueWithoutCinesInput | empleadosUpdateWithWhereUniqueWithoutCinesInput[]
    updateMany?: empleadosUpdateManyWithWhereWithoutCinesInput | empleadosUpdateManyWithWhereWithoutCinesInput[]
    deleteMany?: empleadosScalarWhereInput | empleadosScalarWhereInput[]
  }

  export type salasUncheckedUpdateManyWithoutCinesNestedInput = {
    create?: XOR<salasCreateWithoutCinesInput, salasUncheckedCreateWithoutCinesInput> | salasCreateWithoutCinesInput[] | salasUncheckedCreateWithoutCinesInput[]
    connectOrCreate?: salasCreateOrConnectWithoutCinesInput | salasCreateOrConnectWithoutCinesInput[]
    upsert?: salasUpsertWithWhereUniqueWithoutCinesInput | salasUpsertWithWhereUniqueWithoutCinesInput[]
    createMany?: salasCreateManyCinesInputEnvelope
    set?: salasWhereUniqueInput | salasWhereUniqueInput[]
    disconnect?: salasWhereUniqueInput | salasWhereUniqueInput[]
    delete?: salasWhereUniqueInput | salasWhereUniqueInput[]
    connect?: salasWhereUniqueInput | salasWhereUniqueInput[]
    update?: salasUpdateWithWhereUniqueWithoutCinesInput | salasUpdateWithWhereUniqueWithoutCinesInput[]
    updateMany?: salasUpdateManyWithWhereWithoutCinesInput | salasUpdateManyWithWhereWithoutCinesInput[]
    deleteMany?: salasScalarWhereInput | salasScalarWhereInput[]
  }

  export type peliculasCreateNestedManyWithoutClasificacionesInput = {
    create?: XOR<peliculasCreateWithoutClasificacionesInput, peliculasUncheckedCreateWithoutClasificacionesInput> | peliculasCreateWithoutClasificacionesInput[] | peliculasUncheckedCreateWithoutClasificacionesInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutClasificacionesInput | peliculasCreateOrConnectWithoutClasificacionesInput[]
    createMany?: peliculasCreateManyClasificacionesInputEnvelope
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
  }

  export type peliculasUncheckedCreateNestedManyWithoutClasificacionesInput = {
    create?: XOR<peliculasCreateWithoutClasificacionesInput, peliculasUncheckedCreateWithoutClasificacionesInput> | peliculasCreateWithoutClasificacionesInput[] | peliculasUncheckedCreateWithoutClasificacionesInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutClasificacionesInput | peliculasCreateOrConnectWithoutClasificacionesInput[]
    createMany?: peliculasCreateManyClasificacionesInputEnvelope
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
  }

  export type peliculasUpdateManyWithoutClasificacionesNestedInput = {
    create?: XOR<peliculasCreateWithoutClasificacionesInput, peliculasUncheckedCreateWithoutClasificacionesInput> | peliculasCreateWithoutClasificacionesInput[] | peliculasUncheckedCreateWithoutClasificacionesInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutClasificacionesInput | peliculasCreateOrConnectWithoutClasificacionesInput[]
    upsert?: peliculasUpsertWithWhereUniqueWithoutClasificacionesInput | peliculasUpsertWithWhereUniqueWithoutClasificacionesInput[]
    createMany?: peliculasCreateManyClasificacionesInputEnvelope
    set?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    disconnect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    delete?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    update?: peliculasUpdateWithWhereUniqueWithoutClasificacionesInput | peliculasUpdateWithWhereUniqueWithoutClasificacionesInput[]
    updateMany?: peliculasUpdateManyWithWhereWithoutClasificacionesInput | peliculasUpdateManyWithWhereWithoutClasificacionesInput[]
    deleteMany?: peliculasScalarWhereInput | peliculasScalarWhereInput[]
  }

  export type peliculasUncheckedUpdateManyWithoutClasificacionesNestedInput = {
    create?: XOR<peliculasCreateWithoutClasificacionesInput, peliculasUncheckedCreateWithoutClasificacionesInput> | peliculasCreateWithoutClasificacionesInput[] | peliculasUncheckedCreateWithoutClasificacionesInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutClasificacionesInput | peliculasCreateOrConnectWithoutClasificacionesInput[]
    upsert?: peliculasUpsertWithWhereUniqueWithoutClasificacionesInput | peliculasUpsertWithWhereUniqueWithoutClasificacionesInput[]
    createMany?: peliculasCreateManyClasificacionesInputEnvelope
    set?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    disconnect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    delete?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    update?: peliculasUpdateWithWhereUniqueWithoutClasificacionesInput | peliculasUpdateWithWhereUniqueWithoutClasificacionesInput[]
    updateMany?: peliculasUpdateManyWithWhereWithoutClasificacionesInput | peliculasUpdateManyWithWhereWithoutClasificacionesInput[]
    deleteMany?: peliculasScalarWhereInput | peliculasScalarWhereInput[]
  }

  export type peliculas_directoresCreateNestedManyWithoutDirectoresInput = {
    create?: XOR<peliculas_directoresCreateWithoutDirectoresInput, peliculas_directoresUncheckedCreateWithoutDirectoresInput> | peliculas_directoresCreateWithoutDirectoresInput[] | peliculas_directoresUncheckedCreateWithoutDirectoresInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutDirectoresInput | peliculas_directoresCreateOrConnectWithoutDirectoresInput[]
    createMany?: peliculas_directoresCreateManyDirectoresInputEnvelope
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
  }

  export type peliculas_directoresUncheckedCreateNestedManyWithoutDirectoresInput = {
    create?: XOR<peliculas_directoresCreateWithoutDirectoresInput, peliculas_directoresUncheckedCreateWithoutDirectoresInput> | peliculas_directoresCreateWithoutDirectoresInput[] | peliculas_directoresUncheckedCreateWithoutDirectoresInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutDirectoresInput | peliculas_directoresCreateOrConnectWithoutDirectoresInput[]
    createMany?: peliculas_directoresCreateManyDirectoresInputEnvelope
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
  }

  export type peliculas_directoresUpdateManyWithoutDirectoresNestedInput = {
    create?: XOR<peliculas_directoresCreateWithoutDirectoresInput, peliculas_directoresUncheckedCreateWithoutDirectoresInput> | peliculas_directoresCreateWithoutDirectoresInput[] | peliculas_directoresUncheckedCreateWithoutDirectoresInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutDirectoresInput | peliculas_directoresCreateOrConnectWithoutDirectoresInput[]
    upsert?: peliculas_directoresUpsertWithWhereUniqueWithoutDirectoresInput | peliculas_directoresUpsertWithWhereUniqueWithoutDirectoresInput[]
    createMany?: peliculas_directoresCreateManyDirectoresInputEnvelope
    set?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    disconnect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    delete?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    update?: peliculas_directoresUpdateWithWhereUniqueWithoutDirectoresInput | peliculas_directoresUpdateWithWhereUniqueWithoutDirectoresInput[]
    updateMany?: peliculas_directoresUpdateManyWithWhereWithoutDirectoresInput | peliculas_directoresUpdateManyWithWhereWithoutDirectoresInput[]
    deleteMany?: peliculas_directoresScalarWhereInput | peliculas_directoresScalarWhereInput[]
  }

  export type peliculas_directoresUncheckedUpdateManyWithoutDirectoresNestedInput = {
    create?: XOR<peliculas_directoresCreateWithoutDirectoresInput, peliculas_directoresUncheckedCreateWithoutDirectoresInput> | peliculas_directoresCreateWithoutDirectoresInput[] | peliculas_directoresUncheckedCreateWithoutDirectoresInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutDirectoresInput | peliculas_directoresCreateOrConnectWithoutDirectoresInput[]
    upsert?: peliculas_directoresUpsertWithWhereUniqueWithoutDirectoresInput | peliculas_directoresUpsertWithWhereUniqueWithoutDirectoresInput[]
    createMany?: peliculas_directoresCreateManyDirectoresInputEnvelope
    set?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    disconnect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    delete?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    update?: peliculas_directoresUpdateWithWhereUniqueWithoutDirectoresInput | peliculas_directoresUpdateWithWhereUniqueWithoutDirectoresInput[]
    updateMany?: peliculas_directoresUpdateManyWithWhereWithoutDirectoresInput | peliculas_directoresUpdateManyWithWhereWithoutDirectoresInput[]
    deleteMany?: peliculas_directoresScalarWhereInput | peliculas_directoresScalarWhereInput[]
  }

  export type cinesCreateNestedOneWithoutEmpleadosInput = {
    create?: XOR<cinesCreateWithoutEmpleadosInput, cinesUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: cinesCreateOrConnectWithoutEmpleadosInput
    connect?: cinesWhereUniqueInput
  }

  export type roles_empleadosCreateNestedOneWithoutEmpleadosInput = {
    create?: XOR<roles_empleadosCreateWithoutEmpleadosInput, roles_empleadosUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: roles_empleadosCreateOrConnectWithoutEmpleadosInput
    connect?: roles_empleadosWhereUniqueInput
  }

  export type logs_actividadCreateNestedManyWithoutEmpleadosInput = {
    create?: XOR<logs_actividadCreateWithoutEmpleadosInput, logs_actividadUncheckedCreateWithoutEmpleadosInput> | logs_actividadCreateWithoutEmpleadosInput[] | logs_actividadUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutEmpleadosInput | logs_actividadCreateOrConnectWithoutEmpleadosInput[]
    createMany?: logs_actividadCreateManyEmpleadosInputEnvelope
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
  }

  export type notificacionesCreateNestedManyWithoutEmpleadosInput = {
    create?: XOR<notificacionesCreateWithoutEmpleadosInput, notificacionesUncheckedCreateWithoutEmpleadosInput> | notificacionesCreateWithoutEmpleadosInput[] | notificacionesUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutEmpleadosInput | notificacionesCreateOrConnectWithoutEmpleadosInput[]
    createMany?: notificacionesCreateManyEmpleadosInputEnvelope
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
  }

  export type logs_actividadUncheckedCreateNestedManyWithoutEmpleadosInput = {
    create?: XOR<logs_actividadCreateWithoutEmpleadosInput, logs_actividadUncheckedCreateWithoutEmpleadosInput> | logs_actividadCreateWithoutEmpleadosInput[] | logs_actividadUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutEmpleadosInput | logs_actividadCreateOrConnectWithoutEmpleadosInput[]
    createMany?: logs_actividadCreateManyEmpleadosInputEnvelope
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
  }

  export type notificacionesUncheckedCreateNestedManyWithoutEmpleadosInput = {
    create?: XOR<notificacionesCreateWithoutEmpleadosInput, notificacionesUncheckedCreateWithoutEmpleadosInput> | notificacionesCreateWithoutEmpleadosInput[] | notificacionesUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutEmpleadosInput | notificacionesCreateOrConnectWithoutEmpleadosInput[]
    createMany?: notificacionesCreateManyEmpleadosInputEnvelope
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type cinesUpdateOneWithoutEmpleadosNestedInput = {
    create?: XOR<cinesCreateWithoutEmpleadosInput, cinesUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: cinesCreateOrConnectWithoutEmpleadosInput
    upsert?: cinesUpsertWithoutEmpleadosInput
    disconnect?: cinesWhereInput | boolean
    delete?: cinesWhereInput | boolean
    connect?: cinesWhereUniqueInput
    update?: XOR<XOR<cinesUpdateToOneWithWhereWithoutEmpleadosInput, cinesUpdateWithoutEmpleadosInput>, cinesUncheckedUpdateWithoutEmpleadosInput>
  }

  export type roles_empleadosUpdateOneWithoutEmpleadosNestedInput = {
    create?: XOR<roles_empleadosCreateWithoutEmpleadosInput, roles_empleadosUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: roles_empleadosCreateOrConnectWithoutEmpleadosInput
    upsert?: roles_empleadosUpsertWithoutEmpleadosInput
    disconnect?: roles_empleadosWhereInput | boolean
    delete?: roles_empleadosWhereInput | boolean
    connect?: roles_empleadosWhereUniqueInput
    update?: XOR<XOR<roles_empleadosUpdateToOneWithWhereWithoutEmpleadosInput, roles_empleadosUpdateWithoutEmpleadosInput>, roles_empleadosUncheckedUpdateWithoutEmpleadosInput>
  }

  export type logs_actividadUpdateManyWithoutEmpleadosNestedInput = {
    create?: XOR<logs_actividadCreateWithoutEmpleadosInput, logs_actividadUncheckedCreateWithoutEmpleadosInput> | logs_actividadCreateWithoutEmpleadosInput[] | logs_actividadUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutEmpleadosInput | logs_actividadCreateOrConnectWithoutEmpleadosInput[]
    upsert?: logs_actividadUpsertWithWhereUniqueWithoutEmpleadosInput | logs_actividadUpsertWithWhereUniqueWithoutEmpleadosInput[]
    createMany?: logs_actividadCreateManyEmpleadosInputEnvelope
    set?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    disconnect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    delete?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    update?: logs_actividadUpdateWithWhereUniqueWithoutEmpleadosInput | logs_actividadUpdateWithWhereUniqueWithoutEmpleadosInput[]
    updateMany?: logs_actividadUpdateManyWithWhereWithoutEmpleadosInput | logs_actividadUpdateManyWithWhereWithoutEmpleadosInput[]
    deleteMany?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
  }

  export type notificacionesUpdateManyWithoutEmpleadosNestedInput = {
    create?: XOR<notificacionesCreateWithoutEmpleadosInput, notificacionesUncheckedCreateWithoutEmpleadosInput> | notificacionesCreateWithoutEmpleadosInput[] | notificacionesUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutEmpleadosInput | notificacionesCreateOrConnectWithoutEmpleadosInput[]
    upsert?: notificacionesUpsertWithWhereUniqueWithoutEmpleadosInput | notificacionesUpsertWithWhereUniqueWithoutEmpleadosInput[]
    createMany?: notificacionesCreateManyEmpleadosInputEnvelope
    set?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    disconnect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    delete?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    update?: notificacionesUpdateWithWhereUniqueWithoutEmpleadosInput | notificacionesUpdateWithWhereUniqueWithoutEmpleadosInput[]
    updateMany?: notificacionesUpdateManyWithWhereWithoutEmpleadosInput | notificacionesUpdateManyWithWhereWithoutEmpleadosInput[]
    deleteMany?: notificacionesScalarWhereInput | notificacionesScalarWhereInput[]
  }

  export type logs_actividadUncheckedUpdateManyWithoutEmpleadosNestedInput = {
    create?: XOR<logs_actividadCreateWithoutEmpleadosInput, logs_actividadUncheckedCreateWithoutEmpleadosInput> | logs_actividadCreateWithoutEmpleadosInput[] | logs_actividadUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutEmpleadosInput | logs_actividadCreateOrConnectWithoutEmpleadosInput[]
    upsert?: logs_actividadUpsertWithWhereUniqueWithoutEmpleadosInput | logs_actividadUpsertWithWhereUniqueWithoutEmpleadosInput[]
    createMany?: logs_actividadCreateManyEmpleadosInputEnvelope
    set?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    disconnect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    delete?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    update?: logs_actividadUpdateWithWhereUniqueWithoutEmpleadosInput | logs_actividadUpdateWithWhereUniqueWithoutEmpleadosInput[]
    updateMany?: logs_actividadUpdateManyWithWhereWithoutEmpleadosInput | logs_actividadUpdateManyWithWhereWithoutEmpleadosInput[]
    deleteMany?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
  }

  export type notificacionesUncheckedUpdateManyWithoutEmpleadosNestedInput = {
    create?: XOR<notificacionesCreateWithoutEmpleadosInput, notificacionesUncheckedCreateWithoutEmpleadosInput> | notificacionesCreateWithoutEmpleadosInput[] | notificacionesUncheckedCreateWithoutEmpleadosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutEmpleadosInput | notificacionesCreateOrConnectWithoutEmpleadosInput[]
    upsert?: notificacionesUpsertWithWhereUniqueWithoutEmpleadosInput | notificacionesUpsertWithWhereUniqueWithoutEmpleadosInput[]
    createMany?: notificacionesCreateManyEmpleadosInputEnvelope
    set?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    disconnect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    delete?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    update?: notificacionesUpdateWithWhereUniqueWithoutEmpleadosInput | notificacionesUpdateWithWhereUniqueWithoutEmpleadosInput[]
    updateMany?: notificacionesUpdateManyWithWhereWithoutEmpleadosInput | notificacionesUpdateManyWithWhereWithoutEmpleadosInput[]
    deleteMany?: notificacionesScalarWhereInput | notificacionesScalarWhereInput[]
  }

  export type boletosCreateNestedManyWithoutFuncionesInput = {
    create?: XOR<boletosCreateWithoutFuncionesInput, boletosUncheckedCreateWithoutFuncionesInput> | boletosCreateWithoutFuncionesInput[] | boletosUncheckedCreateWithoutFuncionesInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutFuncionesInput | boletosCreateOrConnectWithoutFuncionesInput[]
    createMany?: boletosCreateManyFuncionesInputEnvelope
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
  }

  export type cartelerasCreateNestedOneWithoutFuncionesInput = {
    create?: XOR<cartelerasCreateWithoutFuncionesInput, cartelerasUncheckedCreateWithoutFuncionesInput>
    connectOrCreate?: cartelerasCreateOrConnectWithoutFuncionesInput
    connect?: cartelerasWhereUniqueInput
  }

  export type peliculasCreateNestedOneWithoutFuncionesInput = {
    create?: XOR<peliculasCreateWithoutFuncionesInput, peliculasUncheckedCreateWithoutFuncionesInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutFuncionesInput
    connect?: peliculasWhereUniqueInput
  }

  export type salasCreateNestedOneWithoutFuncionesInput = {
    create?: XOR<salasCreateWithoutFuncionesInput, salasUncheckedCreateWithoutFuncionesInput>
    connectOrCreate?: salasCreateOrConnectWithoutFuncionesInput
    connect?: salasWhereUniqueInput
  }

  export type boletosUncheckedCreateNestedManyWithoutFuncionesInput = {
    create?: XOR<boletosCreateWithoutFuncionesInput, boletosUncheckedCreateWithoutFuncionesInput> | boletosCreateWithoutFuncionesInput[] | boletosUncheckedCreateWithoutFuncionesInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutFuncionesInput | boletosCreateOrConnectWithoutFuncionesInput[]
    createMany?: boletosCreateManyFuncionesInputEnvelope
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
  }

  export type boletosUpdateManyWithoutFuncionesNestedInput = {
    create?: XOR<boletosCreateWithoutFuncionesInput, boletosUncheckedCreateWithoutFuncionesInput> | boletosCreateWithoutFuncionesInput[] | boletosUncheckedCreateWithoutFuncionesInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutFuncionesInput | boletosCreateOrConnectWithoutFuncionesInput[]
    upsert?: boletosUpsertWithWhereUniqueWithoutFuncionesInput | boletosUpsertWithWhereUniqueWithoutFuncionesInput[]
    createMany?: boletosCreateManyFuncionesInputEnvelope
    set?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    disconnect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    delete?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    update?: boletosUpdateWithWhereUniqueWithoutFuncionesInput | boletosUpdateWithWhereUniqueWithoutFuncionesInput[]
    updateMany?: boletosUpdateManyWithWhereWithoutFuncionesInput | boletosUpdateManyWithWhereWithoutFuncionesInput[]
    deleteMany?: boletosScalarWhereInput | boletosScalarWhereInput[]
  }

  export type cartelerasUpdateOneRequiredWithoutFuncionesNestedInput = {
    create?: XOR<cartelerasCreateWithoutFuncionesInput, cartelerasUncheckedCreateWithoutFuncionesInput>
    connectOrCreate?: cartelerasCreateOrConnectWithoutFuncionesInput
    upsert?: cartelerasUpsertWithoutFuncionesInput
    connect?: cartelerasWhereUniqueInput
    update?: XOR<XOR<cartelerasUpdateToOneWithWhereWithoutFuncionesInput, cartelerasUpdateWithoutFuncionesInput>, cartelerasUncheckedUpdateWithoutFuncionesInput>
  }

  export type peliculasUpdateOneRequiredWithoutFuncionesNestedInput = {
    create?: XOR<peliculasCreateWithoutFuncionesInput, peliculasUncheckedCreateWithoutFuncionesInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutFuncionesInput
    upsert?: peliculasUpsertWithoutFuncionesInput
    connect?: peliculasWhereUniqueInput
    update?: XOR<XOR<peliculasUpdateToOneWithWhereWithoutFuncionesInput, peliculasUpdateWithoutFuncionesInput>, peliculasUncheckedUpdateWithoutFuncionesInput>
  }

  export type salasUpdateOneRequiredWithoutFuncionesNestedInput = {
    create?: XOR<salasCreateWithoutFuncionesInput, salasUncheckedCreateWithoutFuncionesInput>
    connectOrCreate?: salasCreateOrConnectWithoutFuncionesInput
    upsert?: salasUpsertWithoutFuncionesInput
    connect?: salasWhereUniqueInput
    update?: XOR<XOR<salasUpdateToOneWithWhereWithoutFuncionesInput, salasUpdateWithoutFuncionesInput>, salasUncheckedUpdateWithoutFuncionesInput>
  }

  export type boletosUncheckedUpdateManyWithoutFuncionesNestedInput = {
    create?: XOR<boletosCreateWithoutFuncionesInput, boletosUncheckedCreateWithoutFuncionesInput> | boletosCreateWithoutFuncionesInput[] | boletosUncheckedCreateWithoutFuncionesInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutFuncionesInput | boletosCreateOrConnectWithoutFuncionesInput[]
    upsert?: boletosUpsertWithWhereUniqueWithoutFuncionesInput | boletosUpsertWithWhereUniqueWithoutFuncionesInput[]
    createMany?: boletosCreateManyFuncionesInputEnvelope
    set?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    disconnect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    delete?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    update?: boletosUpdateWithWhereUniqueWithoutFuncionesInput | boletosUpdateWithWhereUniqueWithoutFuncionesInput[]
    updateMany?: boletosUpdateManyWithWhereWithoutFuncionesInput | boletosUpdateManyWithWhereWithoutFuncionesInput[]
    deleteMany?: boletosScalarWhereInput | boletosScalarWhereInput[]
  }

  export type peliculas_generosCreateNestedManyWithoutGenerosInput = {
    create?: XOR<peliculas_generosCreateWithoutGenerosInput, peliculas_generosUncheckedCreateWithoutGenerosInput> | peliculas_generosCreateWithoutGenerosInput[] | peliculas_generosUncheckedCreateWithoutGenerosInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutGenerosInput | peliculas_generosCreateOrConnectWithoutGenerosInput[]
    createMany?: peliculas_generosCreateManyGenerosInputEnvelope
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
  }

  export type peliculas_generosUncheckedCreateNestedManyWithoutGenerosInput = {
    create?: XOR<peliculas_generosCreateWithoutGenerosInput, peliculas_generosUncheckedCreateWithoutGenerosInput> | peliculas_generosCreateWithoutGenerosInput[] | peliculas_generosUncheckedCreateWithoutGenerosInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutGenerosInput | peliculas_generosCreateOrConnectWithoutGenerosInput[]
    createMany?: peliculas_generosCreateManyGenerosInputEnvelope
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
  }

  export type peliculas_generosUpdateManyWithoutGenerosNestedInput = {
    create?: XOR<peliculas_generosCreateWithoutGenerosInput, peliculas_generosUncheckedCreateWithoutGenerosInput> | peliculas_generosCreateWithoutGenerosInput[] | peliculas_generosUncheckedCreateWithoutGenerosInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutGenerosInput | peliculas_generosCreateOrConnectWithoutGenerosInput[]
    upsert?: peliculas_generosUpsertWithWhereUniqueWithoutGenerosInput | peliculas_generosUpsertWithWhereUniqueWithoutGenerosInput[]
    createMany?: peliculas_generosCreateManyGenerosInputEnvelope
    set?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    disconnect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    delete?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    update?: peliculas_generosUpdateWithWhereUniqueWithoutGenerosInput | peliculas_generosUpdateWithWhereUniqueWithoutGenerosInput[]
    updateMany?: peliculas_generosUpdateManyWithWhereWithoutGenerosInput | peliculas_generosUpdateManyWithWhereWithoutGenerosInput[]
    deleteMany?: peliculas_generosScalarWhereInput | peliculas_generosScalarWhereInput[]
  }

  export type peliculas_generosUncheckedUpdateManyWithoutGenerosNestedInput = {
    create?: XOR<peliculas_generosCreateWithoutGenerosInput, peliculas_generosUncheckedCreateWithoutGenerosInput> | peliculas_generosCreateWithoutGenerosInput[] | peliculas_generosUncheckedCreateWithoutGenerosInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutGenerosInput | peliculas_generosCreateOrConnectWithoutGenerosInput[]
    upsert?: peliculas_generosUpsertWithWhereUniqueWithoutGenerosInput | peliculas_generosUpsertWithWhereUniqueWithoutGenerosInput[]
    createMany?: peliculas_generosCreateManyGenerosInputEnvelope
    set?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    disconnect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    delete?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    update?: peliculas_generosUpdateWithWhereUniqueWithoutGenerosInput | peliculas_generosUpdateWithWhereUniqueWithoutGenerosInput[]
    updateMany?: peliculas_generosUpdateManyWithWhereWithoutGenerosInput | peliculas_generosUpdateManyWithWhereWithoutGenerosInput[]
    deleteMany?: peliculas_generosScalarWhereInput | peliculas_generosScalarWhereInput[]
  }

  export type peliculasCreateNestedOneWithoutHistorial_reproduccionInput = {
    create?: XOR<peliculasCreateWithoutHistorial_reproduccionInput, peliculasUncheckedCreateWithoutHistorial_reproduccionInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutHistorial_reproduccionInput
    connect?: peliculasWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutHistorial_reproduccionInput = {
    create?: XOR<usuariosCreateWithoutHistorial_reproduccionInput, usuariosUncheckedCreateWithoutHistorial_reproduccionInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutHistorial_reproduccionInput
    connect?: usuariosWhereUniqueInput
  }

  export type peliculasUpdateOneRequiredWithoutHistorial_reproduccionNestedInput = {
    create?: XOR<peliculasCreateWithoutHistorial_reproduccionInput, peliculasUncheckedCreateWithoutHistorial_reproduccionInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutHistorial_reproduccionInput
    upsert?: peliculasUpsertWithoutHistorial_reproduccionInput
    connect?: peliculasWhereUniqueInput
    update?: XOR<XOR<peliculasUpdateToOneWithWhereWithoutHistorial_reproduccionInput, peliculasUpdateWithoutHistorial_reproduccionInput>, peliculasUncheckedUpdateWithoutHistorial_reproduccionInput>
  }

  export type usuariosUpdateOneRequiredWithoutHistorial_reproduccionNestedInput = {
    create?: XOR<usuariosCreateWithoutHistorial_reproduccionInput, usuariosUncheckedCreateWithoutHistorial_reproduccionInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutHistorial_reproduccionInput
    upsert?: usuariosUpsertWithoutHistorial_reproduccionInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutHistorial_reproduccionInput, usuariosUpdateWithoutHistorial_reproduccionInput>, usuariosUncheckedUpdateWithoutHistorial_reproduccionInput>
  }

  export type Enumimagenes_extra_tipoFieldUpdateOperationsInput = {
    set?: $Enums.imagenes_extra_tipo
  }

  export type usuariosCreateNestedOneWithoutIntentos_loginInput = {
    create?: XOR<usuariosCreateWithoutIntentos_loginInput, usuariosUncheckedCreateWithoutIntentos_loginInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutIntentos_loginInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosUpdateOneWithoutIntentos_loginNestedInput = {
    create?: XOR<usuariosCreateWithoutIntentos_loginInput, usuariosUncheckedCreateWithoutIntentos_loginInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutIntentos_loginInput
    upsert?: usuariosUpsertWithoutIntentos_loginInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutIntentos_loginInput, usuariosUpdateWithoutIntentos_loginInput>, usuariosUncheckedUpdateWithoutIntentos_loginInput>
  }

  export type empleadosCreateNestedOneWithoutLogs_actividadInput = {
    create?: XOR<empleadosCreateWithoutLogs_actividadInput, empleadosUncheckedCreateWithoutLogs_actividadInput>
    connectOrCreate?: empleadosCreateOrConnectWithoutLogs_actividadInput
    connect?: empleadosWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutLogs_actividadInput = {
    create?: XOR<usuariosCreateWithoutLogs_actividadInput, usuariosUncheckedCreateWithoutLogs_actividadInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutLogs_actividadInput
    connect?: usuariosWhereUniqueInput
  }

  export type boletosCreateNestedOneWithoutLogs_actividadInput = {
    create?: XOR<boletosCreateWithoutLogs_actividadInput, boletosUncheckedCreateWithoutLogs_actividadInput>
    connectOrCreate?: boletosCreateOrConnectWithoutLogs_actividadInput
    connect?: boletosWhereUniqueInput
  }

  export type empleadosUpdateOneWithoutLogs_actividadNestedInput = {
    create?: XOR<empleadosCreateWithoutLogs_actividadInput, empleadosUncheckedCreateWithoutLogs_actividadInput>
    connectOrCreate?: empleadosCreateOrConnectWithoutLogs_actividadInput
    upsert?: empleadosUpsertWithoutLogs_actividadInput
    disconnect?: empleadosWhereInput | boolean
    delete?: empleadosWhereInput | boolean
    connect?: empleadosWhereUniqueInput
    update?: XOR<XOR<empleadosUpdateToOneWithWhereWithoutLogs_actividadInput, empleadosUpdateWithoutLogs_actividadInput>, empleadosUncheckedUpdateWithoutLogs_actividadInput>
  }

  export type usuariosUpdateOneWithoutLogs_actividadNestedInput = {
    create?: XOR<usuariosCreateWithoutLogs_actividadInput, usuariosUncheckedCreateWithoutLogs_actividadInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutLogs_actividadInput
    upsert?: usuariosUpsertWithoutLogs_actividadInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutLogs_actividadInput, usuariosUpdateWithoutLogs_actividadInput>, usuariosUncheckedUpdateWithoutLogs_actividadInput>
  }

  export type boletosUpdateOneWithoutLogs_actividadNestedInput = {
    create?: XOR<boletosCreateWithoutLogs_actividadInput, boletosUncheckedCreateWithoutLogs_actividadInput>
    connectOrCreate?: boletosCreateOrConnectWithoutLogs_actividadInput
    upsert?: boletosUpsertWithoutLogs_actividadInput
    disconnect?: boletosWhereInput | boolean
    delete?: boletosWhereInput | boolean
    connect?: boletosWhereUniqueInput
    update?: XOR<XOR<boletosUpdateToOneWithWhereWithoutLogs_actividadInput, boletosUpdateWithoutLogs_actividadInput>, boletosUncheckedUpdateWithoutLogs_actividadInput>
  }

  export type pagosCreateNestedManyWithoutMetodos_pagoInput = {
    create?: XOR<pagosCreateWithoutMetodos_pagoInput, pagosUncheckedCreateWithoutMetodos_pagoInput> | pagosCreateWithoutMetodos_pagoInput[] | pagosUncheckedCreateWithoutMetodos_pagoInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutMetodos_pagoInput | pagosCreateOrConnectWithoutMetodos_pagoInput[]
    createMany?: pagosCreateManyMetodos_pagoInputEnvelope
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
  }

  export type pagosUncheckedCreateNestedManyWithoutMetodos_pagoInput = {
    create?: XOR<pagosCreateWithoutMetodos_pagoInput, pagosUncheckedCreateWithoutMetodos_pagoInput> | pagosCreateWithoutMetodos_pagoInput[] | pagosUncheckedCreateWithoutMetodos_pagoInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutMetodos_pagoInput | pagosCreateOrConnectWithoutMetodos_pagoInput[]
    createMany?: pagosCreateManyMetodos_pagoInputEnvelope
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
  }

  export type pagosUpdateManyWithoutMetodos_pagoNestedInput = {
    create?: XOR<pagosCreateWithoutMetodos_pagoInput, pagosUncheckedCreateWithoutMetodos_pagoInput> | pagosCreateWithoutMetodos_pagoInput[] | pagosUncheckedCreateWithoutMetodos_pagoInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutMetodos_pagoInput | pagosCreateOrConnectWithoutMetodos_pagoInput[]
    upsert?: pagosUpsertWithWhereUniqueWithoutMetodos_pagoInput | pagosUpsertWithWhereUniqueWithoutMetodos_pagoInput[]
    createMany?: pagosCreateManyMetodos_pagoInputEnvelope
    set?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    disconnect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    delete?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    update?: pagosUpdateWithWhereUniqueWithoutMetodos_pagoInput | pagosUpdateWithWhereUniqueWithoutMetodos_pagoInput[]
    updateMany?: pagosUpdateManyWithWhereWithoutMetodos_pagoInput | pagosUpdateManyWithWhereWithoutMetodos_pagoInput[]
    deleteMany?: pagosScalarWhereInput | pagosScalarWhereInput[]
  }

  export type pagosUncheckedUpdateManyWithoutMetodos_pagoNestedInput = {
    create?: XOR<pagosCreateWithoutMetodos_pagoInput, pagosUncheckedCreateWithoutMetodos_pagoInput> | pagosCreateWithoutMetodos_pagoInput[] | pagosUncheckedCreateWithoutMetodos_pagoInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutMetodos_pagoInput | pagosCreateOrConnectWithoutMetodos_pagoInput[]
    upsert?: pagosUpsertWithWhereUniqueWithoutMetodos_pagoInput | pagosUpsertWithWhereUniqueWithoutMetodos_pagoInput[]
    createMany?: pagosCreateManyMetodos_pagoInputEnvelope
    set?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    disconnect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    delete?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    update?: pagosUpdateWithWhereUniqueWithoutMetodos_pagoInput | pagosUpdateWithWhereUniqueWithoutMetodos_pagoInput[]
    updateMany?: pagosUpdateManyWithWhereWithoutMetodos_pagoInput | pagosUpdateManyWithWhereWithoutMetodos_pagoInput[]
    deleteMany?: pagosScalarWhereInput | pagosScalarWhereInput[]
  }

  export type usuariosCreateNestedOneWithoutNotificacionesInput = {
    create?: XOR<usuariosCreateWithoutNotificacionesInput, usuariosUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutNotificacionesInput
    connect?: usuariosWhereUniqueInput
  }

  export type empleadosCreateNestedOneWithoutNotificacionesInput = {
    create?: XOR<empleadosCreateWithoutNotificacionesInput, empleadosUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: empleadosCreateOrConnectWithoutNotificacionesInput
    connect?: empleadosWhereUniqueInput
  }

  export type usuariosUpdateOneRequiredWithoutNotificacionesNestedInput = {
    create?: XOR<usuariosCreateWithoutNotificacionesInput, usuariosUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutNotificacionesInput
    upsert?: usuariosUpsertWithoutNotificacionesInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutNotificacionesInput, usuariosUpdateWithoutNotificacionesInput>, usuariosUncheckedUpdateWithoutNotificacionesInput>
  }

  export type empleadosUpdateOneWithoutNotificacionesNestedInput = {
    create?: XOR<empleadosCreateWithoutNotificacionesInput, empleadosUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: empleadosCreateOrConnectWithoutNotificacionesInput
    upsert?: empleadosUpsertWithoutNotificacionesInput
    disconnect?: empleadosWhereInput | boolean
    delete?: empleadosWhereInput | boolean
    connect?: empleadosWhereUniqueInput
    update?: XOR<XOR<empleadosUpdateToOneWithWhereWithoutNotificacionesInput, empleadosUpdateWithoutNotificacionesInput>, empleadosUncheckedUpdateWithoutNotificacionesInput>
  }

  export type metodos_pagoCreateNestedOneWithoutPagosInput = {
    create?: XOR<metodos_pagoCreateWithoutPagosInput, metodos_pagoUncheckedCreateWithoutPagosInput>
    connectOrCreate?: metodos_pagoCreateOrConnectWithoutPagosInput
    connect?: metodos_pagoWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutPagosInput = {
    create?: XOR<usuariosCreateWithoutPagosInput, usuariosUncheckedCreateWithoutPagosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPagosInput
    connect?: usuariosWhereUniqueInput
  }

  export type NullableEnumpagos_estadoFieldUpdateOperationsInput = {
    set?: $Enums.pagos_estado | null
  }

  export type metodos_pagoUpdateOneRequiredWithoutPagosNestedInput = {
    create?: XOR<metodos_pagoCreateWithoutPagosInput, metodos_pagoUncheckedCreateWithoutPagosInput>
    connectOrCreate?: metodos_pagoCreateOrConnectWithoutPagosInput
    upsert?: metodos_pagoUpsertWithoutPagosInput
    connect?: metodos_pagoWhereUniqueInput
    update?: XOR<XOR<metodos_pagoUpdateToOneWithWhereWithoutPagosInput, metodos_pagoUpdateWithoutPagosInput>, metodos_pagoUncheckedUpdateWithoutPagosInput>
  }

  export type usuariosUpdateOneRequiredWithoutPagosNestedInput = {
    create?: XOR<usuariosCreateWithoutPagosInput, usuariosUncheckedCreateWithoutPagosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPagosInput
    upsert?: usuariosUpsertWithoutPagosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutPagosInput, usuariosUpdateWithoutPagosInput>, usuariosUncheckedUpdateWithoutPagosInput>
  }

  export type funcionesCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<funcionesCreateWithoutPeliculasInput, funcionesUncheckedCreateWithoutPeliculasInput> | funcionesCreateWithoutPeliculasInput[] | funcionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutPeliculasInput | funcionesCreateOrConnectWithoutPeliculasInput[]
    createMany?: funcionesCreateManyPeliculasInputEnvelope
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
  }

  export type historial_reproduccionCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<historial_reproduccionCreateWithoutPeliculasInput, historial_reproduccionUncheckedCreateWithoutPeliculasInput> | historial_reproduccionCreateWithoutPeliculasInput[] | historial_reproduccionUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutPeliculasInput | historial_reproduccionCreateOrConnectWithoutPeliculasInput[]
    createMany?: historial_reproduccionCreateManyPeliculasInputEnvelope
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
  }

  export type clasificacionesCreateNestedOneWithoutPeliculasInput = {
    create?: XOR<clasificacionesCreateWithoutPeliculasInput, clasificacionesUncheckedCreateWithoutPeliculasInput>
    connectOrCreate?: clasificacionesCreateOrConnectWithoutPeliculasInput
    connect?: clasificacionesWhereUniqueInput
  }

  export type productorasCreateNestedOneWithoutPeliculasInput = {
    create?: XOR<productorasCreateWithoutPeliculasInput, productorasUncheckedCreateWithoutPeliculasInput>
    connectOrCreate?: productorasCreateOrConnectWithoutPeliculasInput
    connect?: productorasWhereUniqueInput
  }

  export type peliculas_directoresCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<peliculas_directoresCreateWithoutPeliculasInput, peliculas_directoresUncheckedCreateWithoutPeliculasInput> | peliculas_directoresCreateWithoutPeliculasInput[] | peliculas_directoresUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutPeliculasInput | peliculas_directoresCreateOrConnectWithoutPeliculasInput[]
    createMany?: peliculas_directoresCreateManyPeliculasInputEnvelope
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
  }

  export type peliculas_generosCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<peliculas_generosCreateWithoutPeliculasInput, peliculas_generosUncheckedCreateWithoutPeliculasInput> | peliculas_generosCreateWithoutPeliculasInput[] | peliculas_generosUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutPeliculasInput | peliculas_generosCreateOrConnectWithoutPeliculasInput[]
    createMany?: peliculas_generosCreateManyPeliculasInputEnvelope
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
  }

  export type repartoCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<repartoCreateWithoutPeliculasInput, repartoUncheckedCreateWithoutPeliculasInput> | repartoCreateWithoutPeliculasInput[] | repartoUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutPeliculasInput | repartoCreateOrConnectWithoutPeliculasInput[]
    createMany?: repartoCreateManyPeliculasInputEnvelope
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
  }

  export type valoracionesCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<valoracionesCreateWithoutPeliculasInput, valoracionesUncheckedCreateWithoutPeliculasInput> | valoracionesCreateWithoutPeliculasInput[] | valoracionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutPeliculasInput | valoracionesCreateOrConnectWithoutPeliculasInput[]
    createMany?: valoracionesCreateManyPeliculasInputEnvelope
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
  }

  export type funcionesUncheckedCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<funcionesCreateWithoutPeliculasInput, funcionesUncheckedCreateWithoutPeliculasInput> | funcionesCreateWithoutPeliculasInput[] | funcionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutPeliculasInput | funcionesCreateOrConnectWithoutPeliculasInput[]
    createMany?: funcionesCreateManyPeliculasInputEnvelope
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
  }

  export type historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<historial_reproduccionCreateWithoutPeliculasInput, historial_reproduccionUncheckedCreateWithoutPeliculasInput> | historial_reproduccionCreateWithoutPeliculasInput[] | historial_reproduccionUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutPeliculasInput | historial_reproduccionCreateOrConnectWithoutPeliculasInput[]
    createMany?: historial_reproduccionCreateManyPeliculasInputEnvelope
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
  }

  export type peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<peliculas_directoresCreateWithoutPeliculasInput, peliculas_directoresUncheckedCreateWithoutPeliculasInput> | peliculas_directoresCreateWithoutPeliculasInput[] | peliculas_directoresUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutPeliculasInput | peliculas_directoresCreateOrConnectWithoutPeliculasInput[]
    createMany?: peliculas_directoresCreateManyPeliculasInputEnvelope
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
  }

  export type peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<peliculas_generosCreateWithoutPeliculasInput, peliculas_generosUncheckedCreateWithoutPeliculasInput> | peliculas_generosCreateWithoutPeliculasInput[] | peliculas_generosUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutPeliculasInput | peliculas_generosCreateOrConnectWithoutPeliculasInput[]
    createMany?: peliculas_generosCreateManyPeliculasInputEnvelope
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
  }

  export type repartoUncheckedCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<repartoCreateWithoutPeliculasInput, repartoUncheckedCreateWithoutPeliculasInput> | repartoCreateWithoutPeliculasInput[] | repartoUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutPeliculasInput | repartoCreateOrConnectWithoutPeliculasInput[]
    createMany?: repartoCreateManyPeliculasInputEnvelope
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
  }

  export type valoracionesUncheckedCreateNestedManyWithoutPeliculasInput = {
    create?: XOR<valoracionesCreateWithoutPeliculasInput, valoracionesUncheckedCreateWithoutPeliculasInput> | valoracionesCreateWithoutPeliculasInput[] | valoracionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutPeliculasInput | valoracionesCreateOrConnectWithoutPeliculasInput[]
    createMany?: valoracionesCreateManyPeliculasInputEnvelope
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
  }

  export type NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput = {
    set?: $Enums.peliculas_tipo_contenido | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type funcionesUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<funcionesCreateWithoutPeliculasInput, funcionesUncheckedCreateWithoutPeliculasInput> | funcionesCreateWithoutPeliculasInput[] | funcionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutPeliculasInput | funcionesCreateOrConnectWithoutPeliculasInput[]
    upsert?: funcionesUpsertWithWhereUniqueWithoutPeliculasInput | funcionesUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: funcionesCreateManyPeliculasInputEnvelope
    set?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    disconnect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    delete?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    update?: funcionesUpdateWithWhereUniqueWithoutPeliculasInput | funcionesUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: funcionesUpdateManyWithWhereWithoutPeliculasInput | funcionesUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
  }

  export type historial_reproduccionUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<historial_reproduccionCreateWithoutPeliculasInput, historial_reproduccionUncheckedCreateWithoutPeliculasInput> | historial_reproduccionCreateWithoutPeliculasInput[] | historial_reproduccionUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutPeliculasInput | historial_reproduccionCreateOrConnectWithoutPeliculasInput[]
    upsert?: historial_reproduccionUpsertWithWhereUniqueWithoutPeliculasInput | historial_reproduccionUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: historial_reproduccionCreateManyPeliculasInputEnvelope
    set?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    disconnect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    delete?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    update?: historial_reproduccionUpdateWithWhereUniqueWithoutPeliculasInput | historial_reproduccionUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: historial_reproduccionUpdateManyWithWhereWithoutPeliculasInput | historial_reproduccionUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: historial_reproduccionScalarWhereInput | historial_reproduccionScalarWhereInput[]
  }

  export type clasificacionesUpdateOneWithoutPeliculasNestedInput = {
    create?: XOR<clasificacionesCreateWithoutPeliculasInput, clasificacionesUncheckedCreateWithoutPeliculasInput>
    connectOrCreate?: clasificacionesCreateOrConnectWithoutPeliculasInput
    upsert?: clasificacionesUpsertWithoutPeliculasInput
    disconnect?: clasificacionesWhereInput | boolean
    delete?: clasificacionesWhereInput | boolean
    connect?: clasificacionesWhereUniqueInput
    update?: XOR<XOR<clasificacionesUpdateToOneWithWhereWithoutPeliculasInput, clasificacionesUpdateWithoutPeliculasInput>, clasificacionesUncheckedUpdateWithoutPeliculasInput>
  }

  export type productorasUpdateOneWithoutPeliculasNestedInput = {
    create?: XOR<productorasCreateWithoutPeliculasInput, productorasUncheckedCreateWithoutPeliculasInput>
    connectOrCreate?: productorasCreateOrConnectWithoutPeliculasInput
    upsert?: productorasUpsertWithoutPeliculasInput
    disconnect?: productorasWhereInput | boolean
    delete?: productorasWhereInput | boolean
    connect?: productorasWhereUniqueInput
    update?: XOR<XOR<productorasUpdateToOneWithWhereWithoutPeliculasInput, productorasUpdateWithoutPeliculasInput>, productorasUncheckedUpdateWithoutPeliculasInput>
  }

  export type peliculas_directoresUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<peliculas_directoresCreateWithoutPeliculasInput, peliculas_directoresUncheckedCreateWithoutPeliculasInput> | peliculas_directoresCreateWithoutPeliculasInput[] | peliculas_directoresUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutPeliculasInput | peliculas_directoresCreateOrConnectWithoutPeliculasInput[]
    upsert?: peliculas_directoresUpsertWithWhereUniqueWithoutPeliculasInput | peliculas_directoresUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: peliculas_directoresCreateManyPeliculasInputEnvelope
    set?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    disconnect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    delete?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    update?: peliculas_directoresUpdateWithWhereUniqueWithoutPeliculasInput | peliculas_directoresUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: peliculas_directoresUpdateManyWithWhereWithoutPeliculasInput | peliculas_directoresUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: peliculas_directoresScalarWhereInput | peliculas_directoresScalarWhereInput[]
  }

  export type peliculas_generosUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<peliculas_generosCreateWithoutPeliculasInput, peliculas_generosUncheckedCreateWithoutPeliculasInput> | peliculas_generosCreateWithoutPeliculasInput[] | peliculas_generosUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutPeliculasInput | peliculas_generosCreateOrConnectWithoutPeliculasInput[]
    upsert?: peliculas_generosUpsertWithWhereUniqueWithoutPeliculasInput | peliculas_generosUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: peliculas_generosCreateManyPeliculasInputEnvelope
    set?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    disconnect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    delete?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    update?: peliculas_generosUpdateWithWhereUniqueWithoutPeliculasInput | peliculas_generosUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: peliculas_generosUpdateManyWithWhereWithoutPeliculasInput | peliculas_generosUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: peliculas_generosScalarWhereInput | peliculas_generosScalarWhereInput[]
  }

  export type repartoUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<repartoCreateWithoutPeliculasInput, repartoUncheckedCreateWithoutPeliculasInput> | repartoCreateWithoutPeliculasInput[] | repartoUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutPeliculasInput | repartoCreateOrConnectWithoutPeliculasInput[]
    upsert?: repartoUpsertWithWhereUniqueWithoutPeliculasInput | repartoUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: repartoCreateManyPeliculasInputEnvelope
    set?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    disconnect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    delete?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    update?: repartoUpdateWithWhereUniqueWithoutPeliculasInput | repartoUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: repartoUpdateManyWithWhereWithoutPeliculasInput | repartoUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: repartoScalarWhereInput | repartoScalarWhereInput[]
  }

  export type valoracionesUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<valoracionesCreateWithoutPeliculasInput, valoracionesUncheckedCreateWithoutPeliculasInput> | valoracionesCreateWithoutPeliculasInput[] | valoracionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutPeliculasInput | valoracionesCreateOrConnectWithoutPeliculasInput[]
    upsert?: valoracionesUpsertWithWhereUniqueWithoutPeliculasInput | valoracionesUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: valoracionesCreateManyPeliculasInputEnvelope
    set?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    disconnect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    delete?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    update?: valoracionesUpdateWithWhereUniqueWithoutPeliculasInput | valoracionesUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: valoracionesUpdateManyWithWhereWithoutPeliculasInput | valoracionesUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: valoracionesScalarWhereInput | valoracionesScalarWhereInput[]
  }

  export type funcionesUncheckedUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<funcionesCreateWithoutPeliculasInput, funcionesUncheckedCreateWithoutPeliculasInput> | funcionesCreateWithoutPeliculasInput[] | funcionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutPeliculasInput | funcionesCreateOrConnectWithoutPeliculasInput[]
    upsert?: funcionesUpsertWithWhereUniqueWithoutPeliculasInput | funcionesUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: funcionesCreateManyPeliculasInputEnvelope
    set?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    disconnect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    delete?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    update?: funcionesUpdateWithWhereUniqueWithoutPeliculasInput | funcionesUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: funcionesUpdateManyWithWhereWithoutPeliculasInput | funcionesUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
  }

  export type historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<historial_reproduccionCreateWithoutPeliculasInput, historial_reproduccionUncheckedCreateWithoutPeliculasInput> | historial_reproduccionCreateWithoutPeliculasInput[] | historial_reproduccionUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutPeliculasInput | historial_reproduccionCreateOrConnectWithoutPeliculasInput[]
    upsert?: historial_reproduccionUpsertWithWhereUniqueWithoutPeliculasInput | historial_reproduccionUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: historial_reproduccionCreateManyPeliculasInputEnvelope
    set?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    disconnect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    delete?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    update?: historial_reproduccionUpdateWithWhereUniqueWithoutPeliculasInput | historial_reproduccionUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: historial_reproduccionUpdateManyWithWhereWithoutPeliculasInput | historial_reproduccionUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: historial_reproduccionScalarWhereInput | historial_reproduccionScalarWhereInput[]
  }

  export type peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<peliculas_directoresCreateWithoutPeliculasInput, peliculas_directoresUncheckedCreateWithoutPeliculasInput> | peliculas_directoresCreateWithoutPeliculasInput[] | peliculas_directoresUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_directoresCreateOrConnectWithoutPeliculasInput | peliculas_directoresCreateOrConnectWithoutPeliculasInput[]
    upsert?: peliculas_directoresUpsertWithWhereUniqueWithoutPeliculasInput | peliculas_directoresUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: peliculas_directoresCreateManyPeliculasInputEnvelope
    set?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    disconnect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    delete?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    connect?: peliculas_directoresWhereUniqueInput | peliculas_directoresWhereUniqueInput[]
    update?: peliculas_directoresUpdateWithWhereUniqueWithoutPeliculasInput | peliculas_directoresUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: peliculas_directoresUpdateManyWithWhereWithoutPeliculasInput | peliculas_directoresUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: peliculas_directoresScalarWhereInput | peliculas_directoresScalarWhereInput[]
  }

  export type peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<peliculas_generosCreateWithoutPeliculasInput, peliculas_generosUncheckedCreateWithoutPeliculasInput> | peliculas_generosCreateWithoutPeliculasInput[] | peliculas_generosUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: peliculas_generosCreateOrConnectWithoutPeliculasInput | peliculas_generosCreateOrConnectWithoutPeliculasInput[]
    upsert?: peliculas_generosUpsertWithWhereUniqueWithoutPeliculasInput | peliculas_generosUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: peliculas_generosCreateManyPeliculasInputEnvelope
    set?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    disconnect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    delete?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    connect?: peliculas_generosWhereUniqueInput | peliculas_generosWhereUniqueInput[]
    update?: peliculas_generosUpdateWithWhereUniqueWithoutPeliculasInput | peliculas_generosUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: peliculas_generosUpdateManyWithWhereWithoutPeliculasInput | peliculas_generosUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: peliculas_generosScalarWhereInput | peliculas_generosScalarWhereInput[]
  }

  export type repartoUncheckedUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<repartoCreateWithoutPeliculasInput, repartoUncheckedCreateWithoutPeliculasInput> | repartoCreateWithoutPeliculasInput[] | repartoUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: repartoCreateOrConnectWithoutPeliculasInput | repartoCreateOrConnectWithoutPeliculasInput[]
    upsert?: repartoUpsertWithWhereUniqueWithoutPeliculasInput | repartoUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: repartoCreateManyPeliculasInputEnvelope
    set?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    disconnect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    delete?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    connect?: repartoWhereUniqueInput | repartoWhereUniqueInput[]
    update?: repartoUpdateWithWhereUniqueWithoutPeliculasInput | repartoUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: repartoUpdateManyWithWhereWithoutPeliculasInput | repartoUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: repartoScalarWhereInput | repartoScalarWhereInput[]
  }

  export type valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput = {
    create?: XOR<valoracionesCreateWithoutPeliculasInput, valoracionesUncheckedCreateWithoutPeliculasInput> | valoracionesCreateWithoutPeliculasInput[] | valoracionesUncheckedCreateWithoutPeliculasInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutPeliculasInput | valoracionesCreateOrConnectWithoutPeliculasInput[]
    upsert?: valoracionesUpsertWithWhereUniqueWithoutPeliculasInput | valoracionesUpsertWithWhereUniqueWithoutPeliculasInput[]
    createMany?: valoracionesCreateManyPeliculasInputEnvelope
    set?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    disconnect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    delete?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    update?: valoracionesUpdateWithWhereUniqueWithoutPeliculasInput | valoracionesUpdateWithWhereUniqueWithoutPeliculasInput[]
    updateMany?: valoracionesUpdateManyWithWhereWithoutPeliculasInput | valoracionesUpdateManyWithWhereWithoutPeliculasInput[]
    deleteMany?: valoracionesScalarWhereInput | valoracionesScalarWhereInput[]
  }

  export type directoresCreateNestedOneWithoutPeliculas_directoresInput = {
    create?: XOR<directoresCreateWithoutPeliculas_directoresInput, directoresUncheckedCreateWithoutPeliculas_directoresInput>
    connectOrCreate?: directoresCreateOrConnectWithoutPeliculas_directoresInput
    connect?: directoresWhereUniqueInput
  }

  export type peliculasCreateNestedOneWithoutPeliculas_directoresInput = {
    create?: XOR<peliculasCreateWithoutPeliculas_directoresInput, peliculasUncheckedCreateWithoutPeliculas_directoresInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutPeliculas_directoresInput
    connect?: peliculasWhereUniqueInput
  }

  export type directoresUpdateOneRequiredWithoutPeliculas_directoresNestedInput = {
    create?: XOR<directoresCreateWithoutPeliculas_directoresInput, directoresUncheckedCreateWithoutPeliculas_directoresInput>
    connectOrCreate?: directoresCreateOrConnectWithoutPeliculas_directoresInput
    upsert?: directoresUpsertWithoutPeliculas_directoresInput
    connect?: directoresWhereUniqueInput
    update?: XOR<XOR<directoresUpdateToOneWithWhereWithoutPeliculas_directoresInput, directoresUpdateWithoutPeliculas_directoresInput>, directoresUncheckedUpdateWithoutPeliculas_directoresInput>
  }

  export type peliculasUpdateOneRequiredWithoutPeliculas_directoresNestedInput = {
    create?: XOR<peliculasCreateWithoutPeliculas_directoresInput, peliculasUncheckedCreateWithoutPeliculas_directoresInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutPeliculas_directoresInput
    upsert?: peliculasUpsertWithoutPeliculas_directoresInput
    connect?: peliculasWhereUniqueInput
    update?: XOR<XOR<peliculasUpdateToOneWithWhereWithoutPeliculas_directoresInput, peliculasUpdateWithoutPeliculas_directoresInput>, peliculasUncheckedUpdateWithoutPeliculas_directoresInput>
  }

  export type generosCreateNestedOneWithoutPeliculas_generosInput = {
    create?: XOR<generosCreateWithoutPeliculas_generosInput, generosUncheckedCreateWithoutPeliculas_generosInput>
    connectOrCreate?: generosCreateOrConnectWithoutPeliculas_generosInput
    connect?: generosWhereUniqueInput
  }

  export type peliculasCreateNestedOneWithoutPeliculas_generosInput = {
    create?: XOR<peliculasCreateWithoutPeliculas_generosInput, peliculasUncheckedCreateWithoutPeliculas_generosInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutPeliculas_generosInput
    connect?: peliculasWhereUniqueInput
  }

  export type generosUpdateOneRequiredWithoutPeliculas_generosNestedInput = {
    create?: XOR<generosCreateWithoutPeliculas_generosInput, generosUncheckedCreateWithoutPeliculas_generosInput>
    connectOrCreate?: generosCreateOrConnectWithoutPeliculas_generosInput
    upsert?: generosUpsertWithoutPeliculas_generosInput
    connect?: generosWhereUniqueInput
    update?: XOR<XOR<generosUpdateToOneWithWhereWithoutPeliculas_generosInput, generosUpdateWithoutPeliculas_generosInput>, generosUncheckedUpdateWithoutPeliculas_generosInput>
  }

  export type peliculasUpdateOneRequiredWithoutPeliculas_generosNestedInput = {
    create?: XOR<peliculasCreateWithoutPeliculas_generosInput, peliculasUncheckedCreateWithoutPeliculas_generosInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutPeliculas_generosInput
    upsert?: peliculasUpsertWithoutPeliculas_generosInput
    connect?: peliculasWhereUniqueInput
    update?: XOR<XOR<peliculasUpdateToOneWithWhereWithoutPeliculas_generosInput, peliculasUpdateWithoutPeliculas_generosInput>, peliculasUncheckedUpdateWithoutPeliculas_generosInput>
  }

  export type suscripcionesCreateNestedManyWithoutPlanesInput = {
    create?: XOR<suscripcionesCreateWithoutPlanesInput, suscripcionesUncheckedCreateWithoutPlanesInput> | suscripcionesCreateWithoutPlanesInput[] | suscripcionesUncheckedCreateWithoutPlanesInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutPlanesInput | suscripcionesCreateOrConnectWithoutPlanesInput[]
    createMany?: suscripcionesCreateManyPlanesInputEnvelope
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
  }

  export type suscripcionesUncheckedCreateNestedManyWithoutPlanesInput = {
    create?: XOR<suscripcionesCreateWithoutPlanesInput, suscripcionesUncheckedCreateWithoutPlanesInput> | suscripcionesCreateWithoutPlanesInput[] | suscripcionesUncheckedCreateWithoutPlanesInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutPlanesInput | suscripcionesCreateOrConnectWithoutPlanesInput[]
    createMany?: suscripcionesCreateManyPlanesInputEnvelope
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
  }

  export type suscripcionesUpdateManyWithoutPlanesNestedInput = {
    create?: XOR<suscripcionesCreateWithoutPlanesInput, suscripcionesUncheckedCreateWithoutPlanesInput> | suscripcionesCreateWithoutPlanesInput[] | suscripcionesUncheckedCreateWithoutPlanesInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutPlanesInput | suscripcionesCreateOrConnectWithoutPlanesInput[]
    upsert?: suscripcionesUpsertWithWhereUniqueWithoutPlanesInput | suscripcionesUpsertWithWhereUniqueWithoutPlanesInput[]
    createMany?: suscripcionesCreateManyPlanesInputEnvelope
    set?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    disconnect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    delete?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    update?: suscripcionesUpdateWithWhereUniqueWithoutPlanesInput | suscripcionesUpdateWithWhereUniqueWithoutPlanesInput[]
    updateMany?: suscripcionesUpdateManyWithWhereWithoutPlanesInput | suscripcionesUpdateManyWithWhereWithoutPlanesInput[]
    deleteMany?: suscripcionesScalarWhereInput | suscripcionesScalarWhereInput[]
  }

  export type suscripcionesUncheckedUpdateManyWithoutPlanesNestedInput = {
    create?: XOR<suscripcionesCreateWithoutPlanesInput, suscripcionesUncheckedCreateWithoutPlanesInput> | suscripcionesCreateWithoutPlanesInput[] | suscripcionesUncheckedCreateWithoutPlanesInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutPlanesInput | suscripcionesCreateOrConnectWithoutPlanesInput[]
    upsert?: suscripcionesUpsertWithWhereUniqueWithoutPlanesInput | suscripcionesUpsertWithWhereUniqueWithoutPlanesInput[]
    createMany?: suscripcionesCreateManyPlanesInputEnvelope
    set?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    disconnect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    delete?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    update?: suscripcionesUpdateWithWhereUniqueWithoutPlanesInput | suscripcionesUpdateWithWhereUniqueWithoutPlanesInput[]
    updateMany?: suscripcionesUpdateManyWithWhereWithoutPlanesInput | suscripcionesUpdateManyWithWhereWithoutPlanesInput[]
    deleteMany?: suscripcionesScalarWhereInput | suscripcionesScalarWhereInput[]
  }

  export type peliculasCreateNestedManyWithoutProductorasInput = {
    create?: XOR<peliculasCreateWithoutProductorasInput, peliculasUncheckedCreateWithoutProductorasInput> | peliculasCreateWithoutProductorasInput[] | peliculasUncheckedCreateWithoutProductorasInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutProductorasInput | peliculasCreateOrConnectWithoutProductorasInput[]
    createMany?: peliculasCreateManyProductorasInputEnvelope
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
  }

  export type peliculasUncheckedCreateNestedManyWithoutProductorasInput = {
    create?: XOR<peliculasCreateWithoutProductorasInput, peliculasUncheckedCreateWithoutProductorasInput> | peliculasCreateWithoutProductorasInput[] | peliculasUncheckedCreateWithoutProductorasInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutProductorasInput | peliculasCreateOrConnectWithoutProductorasInput[]
    createMany?: peliculasCreateManyProductorasInputEnvelope
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
  }

  export type peliculasUpdateManyWithoutProductorasNestedInput = {
    create?: XOR<peliculasCreateWithoutProductorasInput, peliculasUncheckedCreateWithoutProductorasInput> | peliculasCreateWithoutProductorasInput[] | peliculasUncheckedCreateWithoutProductorasInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutProductorasInput | peliculasCreateOrConnectWithoutProductorasInput[]
    upsert?: peliculasUpsertWithWhereUniqueWithoutProductorasInput | peliculasUpsertWithWhereUniqueWithoutProductorasInput[]
    createMany?: peliculasCreateManyProductorasInputEnvelope
    set?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    disconnect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    delete?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    update?: peliculasUpdateWithWhereUniqueWithoutProductorasInput | peliculasUpdateWithWhereUniqueWithoutProductorasInput[]
    updateMany?: peliculasUpdateManyWithWhereWithoutProductorasInput | peliculasUpdateManyWithWhereWithoutProductorasInput[]
    deleteMany?: peliculasScalarWhereInput | peliculasScalarWhereInput[]
  }

  export type peliculasUncheckedUpdateManyWithoutProductorasNestedInput = {
    create?: XOR<peliculasCreateWithoutProductorasInput, peliculasUncheckedCreateWithoutProductorasInput> | peliculasCreateWithoutProductorasInput[] | peliculasUncheckedCreateWithoutProductorasInput[]
    connectOrCreate?: peliculasCreateOrConnectWithoutProductorasInput | peliculasCreateOrConnectWithoutProductorasInput[]
    upsert?: peliculasUpsertWithWhereUniqueWithoutProductorasInput | peliculasUpsertWithWhereUniqueWithoutProductorasInput[]
    createMany?: peliculasCreateManyProductorasInputEnvelope
    set?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    disconnect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    delete?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    connect?: peliculasWhereUniqueInput | peliculasWhereUniqueInput[]
    update?: peliculasUpdateWithWhereUniqueWithoutProductorasInput | peliculasUpdateWithWhereUniqueWithoutProductorasInput[]
    updateMany?: peliculasUpdateManyWithWhereWithoutProductorasInput | peliculasUpdateManyWithWhereWithoutProductorasInput[]
    deleteMany?: peliculasScalarWhereInput | peliculasScalarWhereInput[]
  }

  export type actoresCreateNestedOneWithoutRepartoInput = {
    create?: XOR<actoresCreateWithoutRepartoInput, actoresUncheckedCreateWithoutRepartoInput>
    connectOrCreate?: actoresCreateOrConnectWithoutRepartoInput
    connect?: actoresWhereUniqueInput
  }

  export type peliculasCreateNestedOneWithoutRepartoInput = {
    create?: XOR<peliculasCreateWithoutRepartoInput, peliculasUncheckedCreateWithoutRepartoInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutRepartoInput
    connect?: peliculasWhereUniqueInput
  }

  export type actoresUpdateOneRequiredWithoutRepartoNestedInput = {
    create?: XOR<actoresCreateWithoutRepartoInput, actoresUncheckedCreateWithoutRepartoInput>
    connectOrCreate?: actoresCreateOrConnectWithoutRepartoInput
    upsert?: actoresUpsertWithoutRepartoInput
    connect?: actoresWhereUniqueInput
    update?: XOR<XOR<actoresUpdateToOneWithWhereWithoutRepartoInput, actoresUpdateWithoutRepartoInput>, actoresUncheckedUpdateWithoutRepartoInput>
  }

  export type peliculasUpdateOneRequiredWithoutRepartoNestedInput = {
    create?: XOR<peliculasCreateWithoutRepartoInput, peliculasUncheckedCreateWithoutRepartoInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutRepartoInput
    upsert?: peliculasUpsertWithoutRepartoInput
    connect?: peliculasWhereUniqueInput
    update?: XOR<XOR<peliculasUpdateToOneWithWhereWithoutRepartoInput, peliculasUpdateWithoutRepartoInput>, peliculasUncheckedUpdateWithoutRepartoInput>
  }

  export type usuariosCreateNestedOneWithoutReportes_usuariosInput = {
    create?: XOR<usuariosCreateWithoutReportes_usuariosInput, usuariosUncheckedCreateWithoutReportes_usuariosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutReportes_usuariosInput
    connect?: usuariosWhereUniqueInput
  }

  export type Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput = {
    set?: $Enums.reportes_usuarios_tipo_reporte
  }

  export type NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput = {
    set?: $Enums.reportes_usuarios_estado | null
  }

  export type usuariosUpdateOneRequiredWithoutReportes_usuariosNestedInput = {
    create?: XOR<usuariosCreateWithoutReportes_usuariosInput, usuariosUncheckedCreateWithoutReportes_usuariosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutReportes_usuariosInput
    upsert?: usuariosUpsertWithoutReportes_usuariosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutReportes_usuariosInput, usuariosUpdateWithoutReportes_usuariosInput>, usuariosUncheckedUpdateWithoutReportes_usuariosInput>
  }

  export type empleadosCreateNestedManyWithoutRoles_empleadosInput = {
    create?: XOR<empleadosCreateWithoutRoles_empleadosInput, empleadosUncheckedCreateWithoutRoles_empleadosInput> | empleadosCreateWithoutRoles_empleadosInput[] | empleadosUncheckedCreateWithoutRoles_empleadosInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutRoles_empleadosInput | empleadosCreateOrConnectWithoutRoles_empleadosInput[]
    createMany?: empleadosCreateManyRoles_empleadosInputEnvelope
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
  }

  export type empleadosUncheckedCreateNestedManyWithoutRoles_empleadosInput = {
    create?: XOR<empleadosCreateWithoutRoles_empleadosInput, empleadosUncheckedCreateWithoutRoles_empleadosInput> | empleadosCreateWithoutRoles_empleadosInput[] | empleadosUncheckedCreateWithoutRoles_empleadosInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutRoles_empleadosInput | empleadosCreateOrConnectWithoutRoles_empleadosInput[]
    createMany?: empleadosCreateManyRoles_empleadosInputEnvelope
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
  }

  export type empleadosUpdateManyWithoutRoles_empleadosNestedInput = {
    create?: XOR<empleadosCreateWithoutRoles_empleadosInput, empleadosUncheckedCreateWithoutRoles_empleadosInput> | empleadosCreateWithoutRoles_empleadosInput[] | empleadosUncheckedCreateWithoutRoles_empleadosInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutRoles_empleadosInput | empleadosCreateOrConnectWithoutRoles_empleadosInput[]
    upsert?: empleadosUpsertWithWhereUniqueWithoutRoles_empleadosInput | empleadosUpsertWithWhereUniqueWithoutRoles_empleadosInput[]
    createMany?: empleadosCreateManyRoles_empleadosInputEnvelope
    set?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    disconnect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    delete?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    update?: empleadosUpdateWithWhereUniqueWithoutRoles_empleadosInput | empleadosUpdateWithWhereUniqueWithoutRoles_empleadosInput[]
    updateMany?: empleadosUpdateManyWithWhereWithoutRoles_empleadosInput | empleadosUpdateManyWithWhereWithoutRoles_empleadosInput[]
    deleteMany?: empleadosScalarWhereInput | empleadosScalarWhereInput[]
  }

  export type empleadosUncheckedUpdateManyWithoutRoles_empleadosNestedInput = {
    create?: XOR<empleadosCreateWithoutRoles_empleadosInput, empleadosUncheckedCreateWithoutRoles_empleadosInput> | empleadosCreateWithoutRoles_empleadosInput[] | empleadosUncheckedCreateWithoutRoles_empleadosInput[]
    connectOrCreate?: empleadosCreateOrConnectWithoutRoles_empleadosInput | empleadosCreateOrConnectWithoutRoles_empleadosInput[]
    upsert?: empleadosUpsertWithWhereUniqueWithoutRoles_empleadosInput | empleadosUpsertWithWhereUniqueWithoutRoles_empleadosInput[]
    createMany?: empleadosCreateManyRoles_empleadosInputEnvelope
    set?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    disconnect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    delete?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    connect?: empleadosWhereUniqueInput | empleadosWhereUniqueInput[]
    update?: empleadosUpdateWithWhereUniqueWithoutRoles_empleadosInput | empleadosUpdateWithWhereUniqueWithoutRoles_empleadosInput[]
    updateMany?: empleadosUpdateManyWithWhereWithoutRoles_empleadosInput | empleadosUpdateManyWithWhereWithoutRoles_empleadosInput[]
    deleteMany?: empleadosScalarWhereInput | empleadosScalarWhereInput[]
  }

  export type funcionesCreateNestedManyWithoutSalasInput = {
    create?: XOR<funcionesCreateWithoutSalasInput, funcionesUncheckedCreateWithoutSalasInput> | funcionesCreateWithoutSalasInput[] | funcionesUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutSalasInput | funcionesCreateOrConnectWithoutSalasInput[]
    createMany?: funcionesCreateManySalasInputEnvelope
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
  }

  export type cinesCreateNestedOneWithoutSalasInput = {
    create?: XOR<cinesCreateWithoutSalasInput, cinesUncheckedCreateWithoutSalasInput>
    connectOrCreate?: cinesCreateOrConnectWithoutSalasInput
    connect?: cinesWhereUniqueInput
  }

  export type funcionesUncheckedCreateNestedManyWithoutSalasInput = {
    create?: XOR<funcionesCreateWithoutSalasInput, funcionesUncheckedCreateWithoutSalasInput> | funcionesCreateWithoutSalasInput[] | funcionesUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutSalasInput | funcionesCreateOrConnectWithoutSalasInput[]
    createMany?: funcionesCreateManySalasInputEnvelope
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
  }

  export type funcionesUpdateManyWithoutSalasNestedInput = {
    create?: XOR<funcionesCreateWithoutSalasInput, funcionesUncheckedCreateWithoutSalasInput> | funcionesCreateWithoutSalasInput[] | funcionesUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutSalasInput | funcionesCreateOrConnectWithoutSalasInput[]
    upsert?: funcionesUpsertWithWhereUniqueWithoutSalasInput | funcionesUpsertWithWhereUniqueWithoutSalasInput[]
    createMany?: funcionesCreateManySalasInputEnvelope
    set?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    disconnect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    delete?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    update?: funcionesUpdateWithWhereUniqueWithoutSalasInput | funcionesUpdateWithWhereUniqueWithoutSalasInput[]
    updateMany?: funcionesUpdateManyWithWhereWithoutSalasInput | funcionesUpdateManyWithWhereWithoutSalasInput[]
    deleteMany?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
  }

  export type cinesUpdateOneRequiredWithoutSalasNestedInput = {
    create?: XOR<cinesCreateWithoutSalasInput, cinesUncheckedCreateWithoutSalasInput>
    connectOrCreate?: cinesCreateOrConnectWithoutSalasInput
    upsert?: cinesUpsertWithoutSalasInput
    connect?: cinesWhereUniqueInput
    update?: XOR<XOR<cinesUpdateToOneWithWhereWithoutSalasInput, cinesUpdateWithoutSalasInput>, cinesUncheckedUpdateWithoutSalasInput>
  }

  export type funcionesUncheckedUpdateManyWithoutSalasNestedInput = {
    create?: XOR<funcionesCreateWithoutSalasInput, funcionesUncheckedCreateWithoutSalasInput> | funcionesCreateWithoutSalasInput[] | funcionesUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: funcionesCreateOrConnectWithoutSalasInput | funcionesCreateOrConnectWithoutSalasInput[]
    upsert?: funcionesUpsertWithWhereUniqueWithoutSalasInput | funcionesUpsertWithWhereUniqueWithoutSalasInput[]
    createMany?: funcionesCreateManySalasInputEnvelope
    set?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    disconnect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    delete?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    connect?: funcionesWhereUniqueInput | funcionesWhereUniqueInput[]
    update?: funcionesUpdateWithWhereUniqueWithoutSalasInput | funcionesUpdateWithWhereUniqueWithoutSalasInput[]
    updateMany?: funcionesUpdateManyWithWhereWithoutSalasInput | funcionesUpdateManyWithWhereWithoutSalasInput[]
    deleteMany?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
  }

  export type planesCreateNestedOneWithoutSuscripcionesInput = {
    create?: XOR<planesCreateWithoutSuscripcionesInput, planesUncheckedCreateWithoutSuscripcionesInput>
    connectOrCreate?: planesCreateOrConnectWithoutSuscripcionesInput
    connect?: planesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutSuscripcionesInput = {
    create?: XOR<usuariosCreateWithoutSuscripcionesInput, usuariosUncheckedCreateWithoutSuscripcionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutSuscripcionesInput
    connect?: usuariosWhereUniqueInput
  }

  export type NullableEnumsuscripciones_estadoFieldUpdateOperationsInput = {
    set?: $Enums.suscripciones_estado | null
  }

  export type planesUpdateOneWithoutSuscripcionesNestedInput = {
    create?: XOR<planesCreateWithoutSuscripcionesInput, planesUncheckedCreateWithoutSuscripcionesInput>
    connectOrCreate?: planesCreateOrConnectWithoutSuscripcionesInput
    upsert?: planesUpsertWithoutSuscripcionesInput
    disconnect?: planesWhereInput | boolean
    delete?: planesWhereInput | boolean
    connect?: planesWhereUniqueInput
    update?: XOR<XOR<planesUpdateToOneWithWhereWithoutSuscripcionesInput, planesUpdateWithoutSuscripcionesInput>, planesUncheckedUpdateWithoutSuscripcionesInput>
  }

  export type usuariosUpdateOneRequiredWithoutSuscripcionesNestedInput = {
    create?: XOR<usuariosCreateWithoutSuscripcionesInput, usuariosUncheckedCreateWithoutSuscripcionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutSuscripcionesInput
    upsert?: usuariosUpsertWithoutSuscripcionesInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutSuscripcionesInput, usuariosUpdateWithoutSuscripcionesInput>, usuariosUncheckedUpdateWithoutSuscripcionesInput>
  }

  export type boletosCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<boletosCreateWithoutUsuariosInput, boletosUncheckedCreateWithoutUsuariosInput> | boletosCreateWithoutUsuariosInput[] | boletosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutUsuariosInput | boletosCreateOrConnectWithoutUsuariosInput[]
    createMany?: boletosCreateManyUsuariosInputEnvelope
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
  }

  export type historial_reproduccionCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<historial_reproduccionCreateWithoutUsuariosInput, historial_reproduccionUncheckedCreateWithoutUsuariosInput> | historial_reproduccionCreateWithoutUsuariosInput[] | historial_reproduccionUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutUsuariosInput | historial_reproduccionCreateOrConnectWithoutUsuariosInput[]
    createMany?: historial_reproduccionCreateManyUsuariosInputEnvelope
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
  }

  export type intentos_loginCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<intentos_loginCreateWithoutUsuariosInput, intentos_loginUncheckedCreateWithoutUsuariosInput> | intentos_loginCreateWithoutUsuariosInput[] | intentos_loginUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: intentos_loginCreateOrConnectWithoutUsuariosInput | intentos_loginCreateOrConnectWithoutUsuariosInput[]
    createMany?: intentos_loginCreateManyUsuariosInputEnvelope
    connect?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
  }

  export type logs_actividadCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<logs_actividadCreateWithoutUsuariosInput, logs_actividadUncheckedCreateWithoutUsuariosInput> | logs_actividadCreateWithoutUsuariosInput[] | logs_actividadUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutUsuariosInput | logs_actividadCreateOrConnectWithoutUsuariosInput[]
    createMany?: logs_actividadCreateManyUsuariosInputEnvelope
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
  }

  export type notificacionesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<notificacionesCreateWithoutUsuariosInput, notificacionesUncheckedCreateWithoutUsuariosInput> | notificacionesCreateWithoutUsuariosInput[] | notificacionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutUsuariosInput | notificacionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: notificacionesCreateManyUsuariosInputEnvelope
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
  }

  export type pagosCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<pagosCreateWithoutUsuariosInput, pagosUncheckedCreateWithoutUsuariosInput> | pagosCreateWithoutUsuariosInput[] | pagosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutUsuariosInput | pagosCreateOrConnectWithoutUsuariosInput[]
    createMany?: pagosCreateManyUsuariosInputEnvelope
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
  }

  export type reportes_usuariosCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<reportes_usuariosCreateWithoutUsuariosInput, reportes_usuariosUncheckedCreateWithoutUsuariosInput> | reportes_usuariosCreateWithoutUsuariosInput[] | reportes_usuariosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportes_usuariosCreateOrConnectWithoutUsuariosInput | reportes_usuariosCreateOrConnectWithoutUsuariosInput[]
    createMany?: reportes_usuariosCreateManyUsuariosInputEnvelope
    connect?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
  }

  export type suscripcionesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<suscripcionesCreateWithoutUsuariosInput, suscripcionesUncheckedCreateWithoutUsuariosInput> | suscripcionesCreateWithoutUsuariosInput[] | suscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutUsuariosInput | suscripcionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: suscripcionesCreateManyUsuariosInputEnvelope
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
  }

  export type valoracionesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<valoracionesCreateWithoutUsuariosInput, valoracionesUncheckedCreateWithoutUsuariosInput> | valoracionesCreateWithoutUsuariosInput[] | valoracionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutUsuariosInput | valoracionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: valoracionesCreateManyUsuariosInputEnvelope
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
  }

  export type boletosUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<boletosCreateWithoutUsuariosInput, boletosUncheckedCreateWithoutUsuariosInput> | boletosCreateWithoutUsuariosInput[] | boletosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutUsuariosInput | boletosCreateOrConnectWithoutUsuariosInput[]
    createMany?: boletosCreateManyUsuariosInputEnvelope
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
  }

  export type historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<historial_reproduccionCreateWithoutUsuariosInput, historial_reproduccionUncheckedCreateWithoutUsuariosInput> | historial_reproduccionCreateWithoutUsuariosInput[] | historial_reproduccionUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutUsuariosInput | historial_reproduccionCreateOrConnectWithoutUsuariosInput[]
    createMany?: historial_reproduccionCreateManyUsuariosInputEnvelope
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
  }

  export type intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<intentos_loginCreateWithoutUsuariosInput, intentos_loginUncheckedCreateWithoutUsuariosInput> | intentos_loginCreateWithoutUsuariosInput[] | intentos_loginUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: intentos_loginCreateOrConnectWithoutUsuariosInput | intentos_loginCreateOrConnectWithoutUsuariosInput[]
    createMany?: intentos_loginCreateManyUsuariosInputEnvelope
    connect?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
  }

  export type logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<logs_actividadCreateWithoutUsuariosInput, logs_actividadUncheckedCreateWithoutUsuariosInput> | logs_actividadCreateWithoutUsuariosInput[] | logs_actividadUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutUsuariosInput | logs_actividadCreateOrConnectWithoutUsuariosInput[]
    createMany?: logs_actividadCreateManyUsuariosInputEnvelope
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
  }

  export type notificacionesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<notificacionesCreateWithoutUsuariosInput, notificacionesUncheckedCreateWithoutUsuariosInput> | notificacionesCreateWithoutUsuariosInput[] | notificacionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutUsuariosInput | notificacionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: notificacionesCreateManyUsuariosInputEnvelope
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
  }

  export type pagosUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<pagosCreateWithoutUsuariosInput, pagosUncheckedCreateWithoutUsuariosInput> | pagosCreateWithoutUsuariosInput[] | pagosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutUsuariosInput | pagosCreateOrConnectWithoutUsuariosInput[]
    createMany?: pagosCreateManyUsuariosInputEnvelope
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
  }

  export type reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<reportes_usuariosCreateWithoutUsuariosInput, reportes_usuariosUncheckedCreateWithoutUsuariosInput> | reportes_usuariosCreateWithoutUsuariosInput[] | reportes_usuariosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportes_usuariosCreateOrConnectWithoutUsuariosInput | reportes_usuariosCreateOrConnectWithoutUsuariosInput[]
    createMany?: reportes_usuariosCreateManyUsuariosInputEnvelope
    connect?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
  }

  export type suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<suscripcionesCreateWithoutUsuariosInput, suscripcionesUncheckedCreateWithoutUsuariosInput> | suscripcionesCreateWithoutUsuariosInput[] | suscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutUsuariosInput | suscripcionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: suscripcionesCreateManyUsuariosInputEnvelope
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
  }

  export type valoracionesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<valoracionesCreateWithoutUsuariosInput, valoracionesUncheckedCreateWithoutUsuariosInput> | valoracionesCreateWithoutUsuariosInput[] | valoracionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutUsuariosInput | valoracionesCreateOrConnectWithoutUsuariosInput[]
    createMany?: valoracionesCreateManyUsuariosInputEnvelope
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
  }

  export type NullableEnumusuarios_rolFieldUpdateOperationsInput = {
    set?: $Enums.usuarios_rol | null
  }

  export type boletosUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<boletosCreateWithoutUsuariosInput, boletosUncheckedCreateWithoutUsuariosInput> | boletosCreateWithoutUsuariosInput[] | boletosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutUsuariosInput | boletosCreateOrConnectWithoutUsuariosInput[]
    upsert?: boletosUpsertWithWhereUniqueWithoutUsuariosInput | boletosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: boletosCreateManyUsuariosInputEnvelope
    set?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    disconnect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    delete?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    update?: boletosUpdateWithWhereUniqueWithoutUsuariosInput | boletosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: boletosUpdateManyWithWhereWithoutUsuariosInput | boletosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: boletosScalarWhereInput | boletosScalarWhereInput[]
  }

  export type historial_reproduccionUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<historial_reproduccionCreateWithoutUsuariosInput, historial_reproduccionUncheckedCreateWithoutUsuariosInput> | historial_reproduccionCreateWithoutUsuariosInput[] | historial_reproduccionUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutUsuariosInput | historial_reproduccionCreateOrConnectWithoutUsuariosInput[]
    upsert?: historial_reproduccionUpsertWithWhereUniqueWithoutUsuariosInput | historial_reproduccionUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: historial_reproduccionCreateManyUsuariosInputEnvelope
    set?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    disconnect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    delete?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    update?: historial_reproduccionUpdateWithWhereUniqueWithoutUsuariosInput | historial_reproduccionUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: historial_reproduccionUpdateManyWithWhereWithoutUsuariosInput | historial_reproduccionUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: historial_reproduccionScalarWhereInput | historial_reproduccionScalarWhereInput[]
  }

  export type intentos_loginUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<intentos_loginCreateWithoutUsuariosInput, intentos_loginUncheckedCreateWithoutUsuariosInput> | intentos_loginCreateWithoutUsuariosInput[] | intentos_loginUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: intentos_loginCreateOrConnectWithoutUsuariosInput | intentos_loginCreateOrConnectWithoutUsuariosInput[]
    upsert?: intentos_loginUpsertWithWhereUniqueWithoutUsuariosInput | intentos_loginUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: intentos_loginCreateManyUsuariosInputEnvelope
    set?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    disconnect?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    delete?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    connect?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    update?: intentos_loginUpdateWithWhereUniqueWithoutUsuariosInput | intentos_loginUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: intentos_loginUpdateManyWithWhereWithoutUsuariosInput | intentos_loginUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: intentos_loginScalarWhereInput | intentos_loginScalarWhereInput[]
  }

  export type logs_actividadUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<logs_actividadCreateWithoutUsuariosInput, logs_actividadUncheckedCreateWithoutUsuariosInput> | logs_actividadCreateWithoutUsuariosInput[] | logs_actividadUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutUsuariosInput | logs_actividadCreateOrConnectWithoutUsuariosInput[]
    upsert?: logs_actividadUpsertWithWhereUniqueWithoutUsuariosInput | logs_actividadUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: logs_actividadCreateManyUsuariosInputEnvelope
    set?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    disconnect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    delete?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    update?: logs_actividadUpdateWithWhereUniqueWithoutUsuariosInput | logs_actividadUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: logs_actividadUpdateManyWithWhereWithoutUsuariosInput | logs_actividadUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
  }

  export type notificacionesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<notificacionesCreateWithoutUsuariosInput, notificacionesUncheckedCreateWithoutUsuariosInput> | notificacionesCreateWithoutUsuariosInput[] | notificacionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutUsuariosInput | notificacionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: notificacionesUpsertWithWhereUniqueWithoutUsuariosInput | notificacionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: notificacionesCreateManyUsuariosInputEnvelope
    set?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    disconnect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    delete?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    update?: notificacionesUpdateWithWhereUniqueWithoutUsuariosInput | notificacionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: notificacionesUpdateManyWithWhereWithoutUsuariosInput | notificacionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: notificacionesScalarWhereInput | notificacionesScalarWhereInput[]
  }

  export type pagosUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<pagosCreateWithoutUsuariosInput, pagosUncheckedCreateWithoutUsuariosInput> | pagosCreateWithoutUsuariosInput[] | pagosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutUsuariosInput | pagosCreateOrConnectWithoutUsuariosInput[]
    upsert?: pagosUpsertWithWhereUniqueWithoutUsuariosInput | pagosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: pagosCreateManyUsuariosInputEnvelope
    set?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    disconnect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    delete?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    update?: pagosUpdateWithWhereUniqueWithoutUsuariosInput | pagosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: pagosUpdateManyWithWhereWithoutUsuariosInput | pagosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: pagosScalarWhereInput | pagosScalarWhereInput[]
  }

  export type reportes_usuariosUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<reportes_usuariosCreateWithoutUsuariosInput, reportes_usuariosUncheckedCreateWithoutUsuariosInput> | reportes_usuariosCreateWithoutUsuariosInput[] | reportes_usuariosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportes_usuariosCreateOrConnectWithoutUsuariosInput | reportes_usuariosCreateOrConnectWithoutUsuariosInput[]
    upsert?: reportes_usuariosUpsertWithWhereUniqueWithoutUsuariosInput | reportes_usuariosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: reportes_usuariosCreateManyUsuariosInputEnvelope
    set?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    disconnect?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    delete?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    connect?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    update?: reportes_usuariosUpdateWithWhereUniqueWithoutUsuariosInput | reportes_usuariosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: reportes_usuariosUpdateManyWithWhereWithoutUsuariosInput | reportes_usuariosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: reportes_usuariosScalarWhereInput | reportes_usuariosScalarWhereInput[]
  }

  export type suscripcionesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<suscripcionesCreateWithoutUsuariosInput, suscripcionesUncheckedCreateWithoutUsuariosInput> | suscripcionesCreateWithoutUsuariosInput[] | suscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutUsuariosInput | suscripcionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: suscripcionesUpsertWithWhereUniqueWithoutUsuariosInput | suscripcionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: suscripcionesCreateManyUsuariosInputEnvelope
    set?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    disconnect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    delete?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    update?: suscripcionesUpdateWithWhereUniqueWithoutUsuariosInput | suscripcionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: suscripcionesUpdateManyWithWhereWithoutUsuariosInput | suscripcionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: suscripcionesScalarWhereInput | suscripcionesScalarWhereInput[]
  }

  export type valoracionesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<valoracionesCreateWithoutUsuariosInput, valoracionesUncheckedCreateWithoutUsuariosInput> | valoracionesCreateWithoutUsuariosInput[] | valoracionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutUsuariosInput | valoracionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: valoracionesUpsertWithWhereUniqueWithoutUsuariosInput | valoracionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: valoracionesCreateManyUsuariosInputEnvelope
    set?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    disconnect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    delete?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    update?: valoracionesUpdateWithWhereUniqueWithoutUsuariosInput | valoracionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: valoracionesUpdateManyWithWhereWithoutUsuariosInput | valoracionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: valoracionesScalarWhereInput | valoracionesScalarWhereInput[]
  }

  export type boletosUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<boletosCreateWithoutUsuariosInput, boletosUncheckedCreateWithoutUsuariosInput> | boletosCreateWithoutUsuariosInput[] | boletosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: boletosCreateOrConnectWithoutUsuariosInput | boletosCreateOrConnectWithoutUsuariosInput[]
    upsert?: boletosUpsertWithWhereUniqueWithoutUsuariosInput | boletosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: boletosCreateManyUsuariosInputEnvelope
    set?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    disconnect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    delete?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    connect?: boletosWhereUniqueInput | boletosWhereUniqueInput[]
    update?: boletosUpdateWithWhereUniqueWithoutUsuariosInput | boletosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: boletosUpdateManyWithWhereWithoutUsuariosInput | boletosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: boletosScalarWhereInput | boletosScalarWhereInput[]
  }

  export type historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<historial_reproduccionCreateWithoutUsuariosInput, historial_reproduccionUncheckedCreateWithoutUsuariosInput> | historial_reproduccionCreateWithoutUsuariosInput[] | historial_reproduccionUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: historial_reproduccionCreateOrConnectWithoutUsuariosInput | historial_reproduccionCreateOrConnectWithoutUsuariosInput[]
    upsert?: historial_reproduccionUpsertWithWhereUniqueWithoutUsuariosInput | historial_reproduccionUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: historial_reproduccionCreateManyUsuariosInputEnvelope
    set?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    disconnect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    delete?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    connect?: historial_reproduccionWhereUniqueInput | historial_reproduccionWhereUniqueInput[]
    update?: historial_reproduccionUpdateWithWhereUniqueWithoutUsuariosInput | historial_reproduccionUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: historial_reproduccionUpdateManyWithWhereWithoutUsuariosInput | historial_reproduccionUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: historial_reproduccionScalarWhereInput | historial_reproduccionScalarWhereInput[]
  }

  export type intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<intentos_loginCreateWithoutUsuariosInput, intentos_loginUncheckedCreateWithoutUsuariosInput> | intentos_loginCreateWithoutUsuariosInput[] | intentos_loginUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: intentos_loginCreateOrConnectWithoutUsuariosInput | intentos_loginCreateOrConnectWithoutUsuariosInput[]
    upsert?: intentos_loginUpsertWithWhereUniqueWithoutUsuariosInput | intentos_loginUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: intentos_loginCreateManyUsuariosInputEnvelope
    set?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    disconnect?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    delete?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    connect?: intentos_loginWhereUniqueInput | intentos_loginWhereUniqueInput[]
    update?: intentos_loginUpdateWithWhereUniqueWithoutUsuariosInput | intentos_loginUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: intentos_loginUpdateManyWithWhereWithoutUsuariosInput | intentos_loginUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: intentos_loginScalarWhereInput | intentos_loginScalarWhereInput[]
  }

  export type logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<logs_actividadCreateWithoutUsuariosInput, logs_actividadUncheckedCreateWithoutUsuariosInput> | logs_actividadCreateWithoutUsuariosInput[] | logs_actividadUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: logs_actividadCreateOrConnectWithoutUsuariosInput | logs_actividadCreateOrConnectWithoutUsuariosInput[]
    upsert?: logs_actividadUpsertWithWhereUniqueWithoutUsuariosInput | logs_actividadUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: logs_actividadCreateManyUsuariosInputEnvelope
    set?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    disconnect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    delete?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    connect?: logs_actividadWhereUniqueInput | logs_actividadWhereUniqueInput[]
    update?: logs_actividadUpdateWithWhereUniqueWithoutUsuariosInput | logs_actividadUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: logs_actividadUpdateManyWithWhereWithoutUsuariosInput | logs_actividadUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
  }

  export type notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<notificacionesCreateWithoutUsuariosInput, notificacionesUncheckedCreateWithoutUsuariosInput> | notificacionesCreateWithoutUsuariosInput[] | notificacionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: notificacionesCreateOrConnectWithoutUsuariosInput | notificacionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: notificacionesUpsertWithWhereUniqueWithoutUsuariosInput | notificacionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: notificacionesCreateManyUsuariosInputEnvelope
    set?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    disconnect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    delete?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    connect?: notificacionesWhereUniqueInput | notificacionesWhereUniqueInput[]
    update?: notificacionesUpdateWithWhereUniqueWithoutUsuariosInput | notificacionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: notificacionesUpdateManyWithWhereWithoutUsuariosInput | notificacionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: notificacionesScalarWhereInput | notificacionesScalarWhereInput[]
  }

  export type pagosUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<pagosCreateWithoutUsuariosInput, pagosUncheckedCreateWithoutUsuariosInput> | pagosCreateWithoutUsuariosInput[] | pagosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: pagosCreateOrConnectWithoutUsuariosInput | pagosCreateOrConnectWithoutUsuariosInput[]
    upsert?: pagosUpsertWithWhereUniqueWithoutUsuariosInput | pagosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: pagosCreateManyUsuariosInputEnvelope
    set?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    disconnect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    delete?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    connect?: pagosWhereUniqueInput | pagosWhereUniqueInput[]
    update?: pagosUpdateWithWhereUniqueWithoutUsuariosInput | pagosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: pagosUpdateManyWithWhereWithoutUsuariosInput | pagosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: pagosScalarWhereInput | pagosScalarWhereInput[]
  }

  export type reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<reportes_usuariosCreateWithoutUsuariosInput, reportes_usuariosUncheckedCreateWithoutUsuariosInput> | reportes_usuariosCreateWithoutUsuariosInput[] | reportes_usuariosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportes_usuariosCreateOrConnectWithoutUsuariosInput | reportes_usuariosCreateOrConnectWithoutUsuariosInput[]
    upsert?: reportes_usuariosUpsertWithWhereUniqueWithoutUsuariosInput | reportes_usuariosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: reportes_usuariosCreateManyUsuariosInputEnvelope
    set?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    disconnect?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    delete?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    connect?: reportes_usuariosWhereUniqueInput | reportes_usuariosWhereUniqueInput[]
    update?: reportes_usuariosUpdateWithWhereUniqueWithoutUsuariosInput | reportes_usuariosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: reportes_usuariosUpdateManyWithWhereWithoutUsuariosInput | reportes_usuariosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: reportes_usuariosScalarWhereInput | reportes_usuariosScalarWhereInput[]
  }

  export type suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<suscripcionesCreateWithoutUsuariosInput, suscripcionesUncheckedCreateWithoutUsuariosInput> | suscripcionesCreateWithoutUsuariosInput[] | suscripcionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: suscripcionesCreateOrConnectWithoutUsuariosInput | suscripcionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: suscripcionesUpsertWithWhereUniqueWithoutUsuariosInput | suscripcionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: suscripcionesCreateManyUsuariosInputEnvelope
    set?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    disconnect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    delete?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    connect?: suscripcionesWhereUniqueInput | suscripcionesWhereUniqueInput[]
    update?: suscripcionesUpdateWithWhereUniqueWithoutUsuariosInput | suscripcionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: suscripcionesUpdateManyWithWhereWithoutUsuariosInput | suscripcionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: suscripcionesScalarWhereInput | suscripcionesScalarWhereInput[]
  }

  export type valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<valoracionesCreateWithoutUsuariosInput, valoracionesUncheckedCreateWithoutUsuariosInput> | valoracionesCreateWithoutUsuariosInput[] | valoracionesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: valoracionesCreateOrConnectWithoutUsuariosInput | valoracionesCreateOrConnectWithoutUsuariosInput[]
    upsert?: valoracionesUpsertWithWhereUniqueWithoutUsuariosInput | valoracionesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: valoracionesCreateManyUsuariosInputEnvelope
    set?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    disconnect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    delete?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    connect?: valoracionesWhereUniqueInput | valoracionesWhereUniqueInput[]
    update?: valoracionesUpdateWithWhereUniqueWithoutUsuariosInput | valoracionesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: valoracionesUpdateManyWithWhereWithoutUsuariosInput | valoracionesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: valoracionesScalarWhereInput | valoracionesScalarWhereInput[]
  }

  export type peliculasCreateNestedOneWithoutValoracionesInput = {
    create?: XOR<peliculasCreateWithoutValoracionesInput, peliculasUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutValoracionesInput
    connect?: peliculasWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutValoracionesInput = {
    create?: XOR<usuariosCreateWithoutValoracionesInput, usuariosUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutValoracionesInput
    connect?: usuariosWhereUniqueInput
  }

  export type peliculasUpdateOneRequiredWithoutValoracionesNestedInput = {
    create?: XOR<peliculasCreateWithoutValoracionesInput, peliculasUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: peliculasCreateOrConnectWithoutValoracionesInput
    upsert?: peliculasUpsertWithoutValoracionesInput
    connect?: peliculasWhereUniqueInput
    update?: XOR<XOR<peliculasUpdateToOneWithWhereWithoutValoracionesInput, peliculasUpdateWithoutValoracionesInput>, peliculasUncheckedUpdateWithoutValoracionesInput>
  }

  export type usuariosUpdateOneRequiredWithoutValoracionesNestedInput = {
    create?: XOR<usuariosCreateWithoutValoracionesInput, usuariosUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutValoracionesInput
    upsert?: usuariosUpsertWithoutValoracionesInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutValoracionesInput, usuariosUpdateWithoutValoracionesInput>, usuariosUncheckedUpdateWithoutValoracionesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumboletos_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.boletos_estado | Enumboletos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.boletos_estado[] | null
    notIn?: $Enums.boletos_estado[] | null
    not?: NestedEnumboletos_estadoNullableFilter<$PrismaModel> | $Enums.boletos_estado | null
  }

  export type NestedEnumboletos_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.boletos_estado | Enumboletos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.boletos_estado[] | null
    notIn?: $Enums.boletos_estado[] | null
    not?: NestedEnumboletos_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.boletos_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumboletos_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumboletos_estadoNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumimagenes_extra_tipoFilter<$PrismaModel = never> = {
    equals?: $Enums.imagenes_extra_tipo | Enumimagenes_extra_tipoFieldRefInput<$PrismaModel>
    in?: $Enums.imagenes_extra_tipo[]
    notIn?: $Enums.imagenes_extra_tipo[]
    not?: NestedEnumimagenes_extra_tipoFilter<$PrismaModel> | $Enums.imagenes_extra_tipo
  }

  export type NestedEnumimagenes_extra_tipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.imagenes_extra_tipo | Enumimagenes_extra_tipoFieldRefInput<$PrismaModel>
    in?: $Enums.imagenes_extra_tipo[]
    notIn?: $Enums.imagenes_extra_tipo[]
    not?: NestedEnumimagenes_extra_tipoWithAggregatesFilter<$PrismaModel> | $Enums.imagenes_extra_tipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumimagenes_extra_tipoFilter<$PrismaModel>
    _max?: NestedEnumimagenes_extra_tipoFilter<$PrismaModel>
  }

  export type NestedEnumpagos_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.pagos_estado | Enumpagos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.pagos_estado[] | null
    notIn?: $Enums.pagos_estado[] | null
    not?: NestedEnumpagos_estadoNullableFilter<$PrismaModel> | $Enums.pagos_estado | null
  }

  export type NestedEnumpagos_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pagos_estado | Enumpagos_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.pagos_estado[] | null
    notIn?: $Enums.pagos_estado[] | null
    not?: NestedEnumpagos_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.pagos_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpagos_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumpagos_estadoNullableFilter<$PrismaModel>
  }

  export type NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.peliculas_tipo_contenido | Enumpeliculas_tipo_contenidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.peliculas_tipo_contenido[] | null
    notIn?: $Enums.peliculas_tipo_contenido[] | null
    not?: NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel> | $Enums.peliculas_tipo_contenido | null
  }

  export type NestedEnumpeliculas_tipo_contenidoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.peliculas_tipo_contenido | Enumpeliculas_tipo_contenidoFieldRefInput<$PrismaModel> | null
    in?: $Enums.peliculas_tipo_contenido[] | null
    notIn?: $Enums.peliculas_tipo_contenido[] | null
    not?: NestedEnumpeliculas_tipo_contenidoNullableWithAggregatesFilter<$PrismaModel> | $Enums.peliculas_tipo_contenido | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel>
    _max?: NestedEnumpeliculas_tipo_contenidoNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_tipo_reporte | Enumreportes_usuarios_tipo_reporteFieldRefInput<$PrismaModel>
    in?: $Enums.reportes_usuarios_tipo_reporte[]
    notIn?: $Enums.reportes_usuarios_tipo_reporte[]
    not?: NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel> | $Enums.reportes_usuarios_tipo_reporte
  }

  export type NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_estado | Enumreportes_usuarios_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.reportes_usuarios_estado[] | null
    notIn?: $Enums.reportes_usuarios_estado[] | null
    not?: NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel> | $Enums.reportes_usuarios_estado | null
  }

  export type NestedEnumreportes_usuarios_tipo_reporteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_tipo_reporte | Enumreportes_usuarios_tipo_reporteFieldRefInput<$PrismaModel>
    in?: $Enums.reportes_usuarios_tipo_reporte[]
    notIn?: $Enums.reportes_usuarios_tipo_reporte[]
    not?: NestedEnumreportes_usuarios_tipo_reporteWithAggregatesFilter<$PrismaModel> | $Enums.reportes_usuarios_tipo_reporte
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel>
    _max?: NestedEnumreportes_usuarios_tipo_reporteFilter<$PrismaModel>
  }

  export type NestedEnumreportes_usuarios_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.reportes_usuarios_estado | Enumreportes_usuarios_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.reportes_usuarios_estado[] | null
    notIn?: $Enums.reportes_usuarios_estado[] | null
    not?: NestedEnumreportes_usuarios_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.reportes_usuarios_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumreportes_usuarios_estadoNullableFilter<$PrismaModel>
  }

  export type NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.suscripciones_estado | Enumsuscripciones_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.suscripciones_estado[] | null
    notIn?: $Enums.suscripciones_estado[] | null
    not?: NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel> | $Enums.suscripciones_estado | null
  }

  export type NestedEnumsuscripciones_estadoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.suscripciones_estado | Enumsuscripciones_estadoFieldRefInput<$PrismaModel> | null
    in?: $Enums.suscripciones_estado[] | null
    notIn?: $Enums.suscripciones_estado[] | null
    not?: NestedEnumsuscripciones_estadoNullableWithAggregatesFilter<$PrismaModel> | $Enums.suscripciones_estado | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel>
    _max?: NestedEnumsuscripciones_estadoNullableFilter<$PrismaModel>
  }

  export type NestedEnumusuarios_rolNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.usuarios_rol | Enumusuarios_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.usuarios_rol[] | null
    notIn?: $Enums.usuarios_rol[] | null
    not?: NestedEnumusuarios_rolNullableFilter<$PrismaModel> | $Enums.usuarios_rol | null
  }

  export type NestedEnumusuarios_rolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.usuarios_rol | Enumusuarios_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.usuarios_rol[] | null
    notIn?: $Enums.usuarios_rol[] | null
    not?: NestedEnumusuarios_rolNullableWithAggregatesFilter<$PrismaModel> | $Enums.usuarios_rol | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusuarios_rolNullableFilter<$PrismaModel>
    _max?: NestedEnumusuarios_rolNullableFilter<$PrismaModel>
  }

  export type repartoCreateWithoutActoresInput = {
    rol?: string | null
    peliculas: peliculasCreateNestedOneWithoutRepartoInput
  }

  export type repartoUncheckedCreateWithoutActoresInput = {
    id_reparto?: number
    id_pelicula: number
    rol?: string | null
  }

  export type repartoCreateOrConnectWithoutActoresInput = {
    where: repartoWhereUniqueInput
    create: XOR<repartoCreateWithoutActoresInput, repartoUncheckedCreateWithoutActoresInput>
  }

  export type repartoCreateManyActoresInputEnvelope = {
    data: repartoCreateManyActoresInput | repartoCreateManyActoresInput[]
    skipDuplicates?: boolean
  }

  export type repartoUpsertWithWhereUniqueWithoutActoresInput = {
    where: repartoWhereUniqueInput
    update: XOR<repartoUpdateWithoutActoresInput, repartoUncheckedUpdateWithoutActoresInput>
    create: XOR<repartoCreateWithoutActoresInput, repartoUncheckedCreateWithoutActoresInput>
  }

  export type repartoUpdateWithWhereUniqueWithoutActoresInput = {
    where: repartoWhereUniqueInput
    data: XOR<repartoUpdateWithoutActoresInput, repartoUncheckedUpdateWithoutActoresInput>
  }

  export type repartoUpdateManyWithWhereWithoutActoresInput = {
    where: repartoScalarWhereInput
    data: XOR<repartoUpdateManyMutationInput, repartoUncheckedUpdateManyWithoutActoresInput>
  }

  export type repartoScalarWhereInput = {
    AND?: repartoScalarWhereInput | repartoScalarWhereInput[]
    OR?: repartoScalarWhereInput[]
    NOT?: repartoScalarWhereInput | repartoScalarWhereInput[]
    id_reparto?: IntFilter<"reparto"> | number
    id_pelicula?: IntFilter<"reparto"> | number
    id_actor?: IntFilter<"reparto"> | number
    rol?: StringNullableFilter<"reparto"> | string | null
  }

  export type funcionesCreateWithoutBoletosInput = {
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    carteleras: cartelerasCreateNestedOneWithoutFuncionesInput
    peliculas: peliculasCreateNestedOneWithoutFuncionesInput
    salas: salasCreateNestedOneWithoutFuncionesInput
  }

  export type funcionesUncheckedCreateWithoutBoletosInput = {
    id_funcion?: number
    id_cartelera: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
  }

  export type funcionesCreateOrConnectWithoutBoletosInput = {
    where: funcionesWhereUniqueInput
    create: XOR<funcionesCreateWithoutBoletosInput, funcionesUncheckedCreateWithoutBoletosInput>
  }

  export type usuariosCreateWithoutBoletosInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutBoletosInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutBoletosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutBoletosInput, usuariosUncheckedCreateWithoutBoletosInput>
  }

  export type logs_actividadCreateWithoutBoletosInput = {
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    empleados?: empleadosCreateNestedOneWithoutLogs_actividadInput
    usuarios?: usuariosCreateNestedOneWithoutLogs_actividadInput
  }

  export type logs_actividadUncheckedCreateWithoutBoletosInput = {
    id_log?: number
    id_usuario?: number | null
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_empleado?: number | null
  }

  export type logs_actividadCreateOrConnectWithoutBoletosInput = {
    where: logs_actividadWhereUniqueInput
    create: XOR<logs_actividadCreateWithoutBoletosInput, logs_actividadUncheckedCreateWithoutBoletosInput>
  }

  export type logs_actividadCreateManyBoletosInputEnvelope = {
    data: logs_actividadCreateManyBoletosInput | logs_actividadCreateManyBoletosInput[]
    skipDuplicates?: boolean
  }

  export type funcionesUpsertWithoutBoletosInput = {
    update: XOR<funcionesUpdateWithoutBoletosInput, funcionesUncheckedUpdateWithoutBoletosInput>
    create: XOR<funcionesCreateWithoutBoletosInput, funcionesUncheckedCreateWithoutBoletosInput>
    where?: funcionesWhereInput
  }

  export type funcionesUpdateToOneWithWhereWithoutBoletosInput = {
    where?: funcionesWhereInput
    data: XOR<funcionesUpdateWithoutBoletosInput, funcionesUncheckedUpdateWithoutBoletosInput>
  }

  export type funcionesUpdateWithoutBoletosInput = {
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    carteleras?: cartelerasUpdateOneRequiredWithoutFuncionesNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutFuncionesNestedInput
    salas?: salasUpdateOneRequiredWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateWithoutBoletosInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type usuariosUpsertWithoutBoletosInput = {
    update: XOR<usuariosUpdateWithoutBoletosInput, usuariosUncheckedUpdateWithoutBoletosInput>
    create: XOR<usuariosCreateWithoutBoletosInput, usuariosUncheckedCreateWithoutBoletosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutBoletosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutBoletosInput, usuariosUncheckedUpdateWithoutBoletosInput>
  }

  export type usuariosUpdateWithoutBoletosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutBoletosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type logs_actividadUpsertWithWhereUniqueWithoutBoletosInput = {
    where: logs_actividadWhereUniqueInput
    update: XOR<logs_actividadUpdateWithoutBoletosInput, logs_actividadUncheckedUpdateWithoutBoletosInput>
    create: XOR<logs_actividadCreateWithoutBoletosInput, logs_actividadUncheckedCreateWithoutBoletosInput>
  }

  export type logs_actividadUpdateWithWhereUniqueWithoutBoletosInput = {
    where: logs_actividadWhereUniqueInput
    data: XOR<logs_actividadUpdateWithoutBoletosInput, logs_actividadUncheckedUpdateWithoutBoletosInput>
  }

  export type logs_actividadUpdateManyWithWhereWithoutBoletosInput = {
    where: logs_actividadScalarWhereInput
    data: XOR<logs_actividadUpdateManyMutationInput, logs_actividadUncheckedUpdateManyWithoutBoletosInput>
  }

  export type logs_actividadScalarWhereInput = {
    AND?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
    OR?: logs_actividadScalarWhereInput[]
    NOT?: logs_actividadScalarWhereInput | logs_actividadScalarWhereInput[]
    id_log?: IntFilter<"logs_actividad"> | number
    id_usuario?: IntNullableFilter<"logs_actividad"> | number | null
    accion?: StringNullableFilter<"logs_actividad"> | string | null
    fecha_hora?: DateTimeNullableFilter<"logs_actividad"> | Date | string | null
    detalle?: StringNullableFilter<"logs_actividad"> | string | null
    id_empleado?: IntNullableFilter<"logs_actividad"> | number | null
    id_boleto?: IntNullableFilter<"logs_actividad"> | number | null
  }

  export type funcionesCreateWithoutCartelerasInput = {
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosCreateNestedManyWithoutFuncionesInput
    peliculas: peliculasCreateNestedOneWithoutFuncionesInput
    salas: salasCreateNestedOneWithoutFuncionesInput
  }

  export type funcionesUncheckedCreateWithoutCartelerasInput = {
    id_funcion?: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedCreateNestedManyWithoutFuncionesInput
  }

  export type funcionesCreateOrConnectWithoutCartelerasInput = {
    where: funcionesWhereUniqueInput
    create: XOR<funcionesCreateWithoutCartelerasInput, funcionesUncheckedCreateWithoutCartelerasInput>
  }

  export type funcionesCreateManyCartelerasInputEnvelope = {
    data: funcionesCreateManyCartelerasInput | funcionesCreateManyCartelerasInput[]
    skipDuplicates?: boolean
  }

  export type funcionesUpsertWithWhereUniqueWithoutCartelerasInput = {
    where: funcionesWhereUniqueInput
    update: XOR<funcionesUpdateWithoutCartelerasInput, funcionesUncheckedUpdateWithoutCartelerasInput>
    create: XOR<funcionesCreateWithoutCartelerasInput, funcionesUncheckedCreateWithoutCartelerasInput>
  }

  export type funcionesUpdateWithWhereUniqueWithoutCartelerasInput = {
    where: funcionesWhereUniqueInput
    data: XOR<funcionesUpdateWithoutCartelerasInput, funcionesUncheckedUpdateWithoutCartelerasInput>
  }

  export type funcionesUpdateManyWithWhereWithoutCartelerasInput = {
    where: funcionesScalarWhereInput
    data: XOR<funcionesUpdateManyMutationInput, funcionesUncheckedUpdateManyWithoutCartelerasInput>
  }

  export type funcionesScalarWhereInput = {
    AND?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
    OR?: funcionesScalarWhereInput[]
    NOT?: funcionesScalarWhereInput | funcionesScalarWhereInput[]
    id_funcion?: IntFilter<"funciones"> | number
    id_cartelera?: IntFilter<"funciones"> | number
    id_sala?: IntFilter<"funciones"> | number
    id_pelicula?: IntFilter<"funciones"> | number
    fecha_hora_inicio?: DateTimeNullableFilter<"funciones"> | Date | string | null
    fecha_hora_fin?: DateTimeNullableFilter<"funciones"> | Date | string | null
    precio_boleto?: DecimalNullableFilter<"funciones"> | Decimal | DecimalJsLike | number | string | null
  }

  export type empleadosCreateWithoutCinesInput = {
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    usuario_sistema?: boolean | null
    roles_empleados?: roles_empleadosCreateNestedOneWithoutEmpleadosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutEmpleadosInput
    notificaciones?: notificacionesCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosUncheckedCreateWithoutCinesInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_rol?: number | null
    usuario_sistema?: boolean | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutEmpleadosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosCreateOrConnectWithoutCinesInput = {
    where: empleadosWhereUniqueInput
    create: XOR<empleadosCreateWithoutCinesInput, empleadosUncheckedCreateWithoutCinesInput>
  }

  export type empleadosCreateManyCinesInputEnvelope = {
    data: empleadosCreateManyCinesInput | empleadosCreateManyCinesInput[]
    skipDuplicates?: boolean
  }

  export type salasCreateWithoutCinesInput = {
    nombre_sala?: string | null
    capacidad?: number | null
    funciones?: funcionesCreateNestedManyWithoutSalasInput
  }

  export type salasUncheckedCreateWithoutCinesInput = {
    id_sala?: number
    nombre_sala?: string | null
    capacidad?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutSalasInput
  }

  export type salasCreateOrConnectWithoutCinesInput = {
    where: salasWhereUniqueInput
    create: XOR<salasCreateWithoutCinesInput, salasUncheckedCreateWithoutCinesInput>
  }

  export type salasCreateManyCinesInputEnvelope = {
    data: salasCreateManyCinesInput | salasCreateManyCinesInput[]
    skipDuplicates?: boolean
  }

  export type empleadosUpsertWithWhereUniqueWithoutCinesInput = {
    where: empleadosWhereUniqueInput
    update: XOR<empleadosUpdateWithoutCinesInput, empleadosUncheckedUpdateWithoutCinesInput>
    create: XOR<empleadosCreateWithoutCinesInput, empleadosUncheckedCreateWithoutCinesInput>
  }

  export type empleadosUpdateWithWhereUniqueWithoutCinesInput = {
    where: empleadosWhereUniqueInput
    data: XOR<empleadosUpdateWithoutCinesInput, empleadosUncheckedUpdateWithoutCinesInput>
  }

  export type empleadosUpdateManyWithWhereWithoutCinesInput = {
    where: empleadosScalarWhereInput
    data: XOR<empleadosUpdateManyMutationInput, empleadosUncheckedUpdateManyWithoutCinesInput>
  }

  export type empleadosScalarWhereInput = {
    AND?: empleadosScalarWhereInput | empleadosScalarWhereInput[]
    OR?: empleadosScalarWhereInput[]
    NOT?: empleadosScalarWhereInput | empleadosScalarWhereInput[]
    id_empleado?: IntFilter<"empleados"> | number
    nombre?: StringNullableFilter<"empleados"> | string | null
    apellido?: StringNullableFilter<"empleados"> | string | null
    ci?: StringNullableFilter<"empleados"> | string | null
    correo?: StringNullableFilter<"empleados"> | string | null
    telefono?: StringNullableFilter<"empleados"> | string | null
    fecha_contrato?: DateTimeNullableFilter<"empleados"> | Date | string | null
    id_cine?: IntNullableFilter<"empleados"> | number | null
    id_rol?: IntNullableFilter<"empleados"> | number | null
    usuario_sistema?: BoolNullableFilter<"empleados"> | boolean | null
  }

  export type salasUpsertWithWhereUniqueWithoutCinesInput = {
    where: salasWhereUniqueInput
    update: XOR<salasUpdateWithoutCinesInput, salasUncheckedUpdateWithoutCinesInput>
    create: XOR<salasCreateWithoutCinesInput, salasUncheckedCreateWithoutCinesInput>
  }

  export type salasUpdateWithWhereUniqueWithoutCinesInput = {
    where: salasWhereUniqueInput
    data: XOR<salasUpdateWithoutCinesInput, salasUncheckedUpdateWithoutCinesInput>
  }

  export type salasUpdateManyWithWhereWithoutCinesInput = {
    where: salasScalarWhereInput
    data: XOR<salasUpdateManyMutationInput, salasUncheckedUpdateManyWithoutCinesInput>
  }

  export type salasScalarWhereInput = {
    AND?: salasScalarWhereInput | salasScalarWhereInput[]
    OR?: salasScalarWhereInput[]
    NOT?: salasScalarWhereInput | salasScalarWhereInput[]
    id_sala?: IntFilter<"salas"> | number
    id_cine?: IntFilter<"salas"> | number
    nombre_sala?: StringNullableFilter<"salas"> | string | null
    capacidad?: IntNullableFilter<"salas"> | number | null
  }

  export type peliculasCreateWithoutClasificacionesInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutClasificacionesInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutClasificacionesInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutClasificacionesInput, peliculasUncheckedCreateWithoutClasificacionesInput>
  }

  export type peliculasCreateManyClasificacionesInputEnvelope = {
    data: peliculasCreateManyClasificacionesInput | peliculasCreateManyClasificacionesInput[]
    skipDuplicates?: boolean
  }

  export type peliculasUpsertWithWhereUniqueWithoutClasificacionesInput = {
    where: peliculasWhereUniqueInput
    update: XOR<peliculasUpdateWithoutClasificacionesInput, peliculasUncheckedUpdateWithoutClasificacionesInput>
    create: XOR<peliculasCreateWithoutClasificacionesInput, peliculasUncheckedCreateWithoutClasificacionesInput>
  }

  export type peliculasUpdateWithWhereUniqueWithoutClasificacionesInput = {
    where: peliculasWhereUniqueInput
    data: XOR<peliculasUpdateWithoutClasificacionesInput, peliculasUncheckedUpdateWithoutClasificacionesInput>
  }

  export type peliculasUpdateManyWithWhereWithoutClasificacionesInput = {
    where: peliculasScalarWhereInput
    data: XOR<peliculasUpdateManyMutationInput, peliculasUncheckedUpdateManyWithoutClasificacionesInput>
  }

  export type peliculasScalarWhereInput = {
    AND?: peliculasScalarWhereInput | peliculasScalarWhereInput[]
    OR?: peliculasScalarWhereInput[]
    NOT?: peliculasScalarWhereInput | peliculasScalarWhereInput[]
    id_pelicula?: IntFilter<"peliculas"> | number
    titulo?: StringFilter<"peliculas"> | string
    sinopsis?: StringNullableFilter<"peliculas"> | string | null
    duracion?: IntNullableFilter<"peliculas"> | number | null
    fecha_lanzamiento?: DateTimeNullableFilter<"peliculas"> | Date | string | null
    id_productora?: IntNullableFilter<"peliculas"> | number | null
    tipo_contenido?: Enumpeliculas_tipo_contenidoNullableFilter<"peliculas"> | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: StringNullableFilter<"peliculas"> | string | null
    url_video?: StringNullableFilter<"peliculas"> | string | null
    id_clasificacion?: IntNullableFilter<"peliculas"> | number | null
    calificacion_promedio?: FloatNullableFilter<"peliculas"> | number | null
  }

  export type peliculas_directoresCreateWithoutDirectoresInput = {
    peliculas: peliculasCreateNestedOneWithoutPeliculas_directoresInput
  }

  export type peliculas_directoresUncheckedCreateWithoutDirectoresInput = {
    id_pelicula: number
  }

  export type peliculas_directoresCreateOrConnectWithoutDirectoresInput = {
    where: peliculas_directoresWhereUniqueInput
    create: XOR<peliculas_directoresCreateWithoutDirectoresInput, peliculas_directoresUncheckedCreateWithoutDirectoresInput>
  }

  export type peliculas_directoresCreateManyDirectoresInputEnvelope = {
    data: peliculas_directoresCreateManyDirectoresInput | peliculas_directoresCreateManyDirectoresInput[]
    skipDuplicates?: boolean
  }

  export type peliculas_directoresUpsertWithWhereUniqueWithoutDirectoresInput = {
    where: peliculas_directoresWhereUniqueInput
    update: XOR<peliculas_directoresUpdateWithoutDirectoresInput, peliculas_directoresUncheckedUpdateWithoutDirectoresInput>
    create: XOR<peliculas_directoresCreateWithoutDirectoresInput, peliculas_directoresUncheckedCreateWithoutDirectoresInput>
  }

  export type peliculas_directoresUpdateWithWhereUniqueWithoutDirectoresInput = {
    where: peliculas_directoresWhereUniqueInput
    data: XOR<peliculas_directoresUpdateWithoutDirectoresInput, peliculas_directoresUncheckedUpdateWithoutDirectoresInput>
  }

  export type peliculas_directoresUpdateManyWithWhereWithoutDirectoresInput = {
    where: peliculas_directoresScalarWhereInput
    data: XOR<peliculas_directoresUpdateManyMutationInput, peliculas_directoresUncheckedUpdateManyWithoutDirectoresInput>
  }

  export type peliculas_directoresScalarWhereInput = {
    AND?: peliculas_directoresScalarWhereInput | peliculas_directoresScalarWhereInput[]
    OR?: peliculas_directoresScalarWhereInput[]
    NOT?: peliculas_directoresScalarWhereInput | peliculas_directoresScalarWhereInput[]
    id_pelicula?: IntFilter<"peliculas_directores"> | number
    id_director?: IntFilter<"peliculas_directores"> | number
  }

  export type cinesCreateWithoutEmpleadosInput = {
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
    salas?: salasCreateNestedManyWithoutCinesInput
  }

  export type cinesUncheckedCreateWithoutEmpleadosInput = {
    id_cine?: number
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
    salas?: salasUncheckedCreateNestedManyWithoutCinesInput
  }

  export type cinesCreateOrConnectWithoutEmpleadosInput = {
    where: cinesWhereUniqueInput
    create: XOR<cinesCreateWithoutEmpleadosInput, cinesUncheckedCreateWithoutEmpleadosInput>
  }

  export type roles_empleadosCreateWithoutEmpleadosInput = {
    nombre_rol: string
  }

  export type roles_empleadosUncheckedCreateWithoutEmpleadosInput = {
    id_rol?: number
    nombre_rol: string
  }

  export type roles_empleadosCreateOrConnectWithoutEmpleadosInput = {
    where: roles_empleadosWhereUniqueInput
    create: XOR<roles_empleadosCreateWithoutEmpleadosInput, roles_empleadosUncheckedCreateWithoutEmpleadosInput>
  }

  export type logs_actividadCreateWithoutEmpleadosInput = {
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    usuarios?: usuariosCreateNestedOneWithoutLogs_actividadInput
    boletos?: boletosCreateNestedOneWithoutLogs_actividadInput
  }

  export type logs_actividadUncheckedCreateWithoutEmpleadosInput = {
    id_log?: number
    id_usuario?: number | null
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_boleto?: number | null
  }

  export type logs_actividadCreateOrConnectWithoutEmpleadosInput = {
    where: logs_actividadWhereUniqueInput
    create: XOR<logs_actividadCreateWithoutEmpleadosInput, logs_actividadUncheckedCreateWithoutEmpleadosInput>
  }

  export type logs_actividadCreateManyEmpleadosInputEnvelope = {
    data: logs_actividadCreateManyEmpleadosInput | logs_actividadCreateManyEmpleadosInput[]
    skipDuplicates?: boolean
  }

  export type notificacionesCreateWithoutEmpleadosInput = {
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    usuarios: usuariosCreateNestedOneWithoutNotificacionesInput
  }

  export type notificacionesUncheckedCreateWithoutEmpleadosInput = {
    id_notificacion?: number
    id_usuario: number
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
  }

  export type notificacionesCreateOrConnectWithoutEmpleadosInput = {
    where: notificacionesWhereUniqueInput
    create: XOR<notificacionesCreateWithoutEmpleadosInput, notificacionesUncheckedCreateWithoutEmpleadosInput>
  }

  export type notificacionesCreateManyEmpleadosInputEnvelope = {
    data: notificacionesCreateManyEmpleadosInput | notificacionesCreateManyEmpleadosInput[]
    skipDuplicates?: boolean
  }

  export type cinesUpsertWithoutEmpleadosInput = {
    update: XOR<cinesUpdateWithoutEmpleadosInput, cinesUncheckedUpdateWithoutEmpleadosInput>
    create: XOR<cinesCreateWithoutEmpleadosInput, cinesUncheckedCreateWithoutEmpleadosInput>
    where?: cinesWhereInput
  }

  export type cinesUpdateToOneWithWhereWithoutEmpleadosInput = {
    where?: cinesWhereInput
    data: XOR<cinesUpdateWithoutEmpleadosInput, cinesUncheckedUpdateWithoutEmpleadosInput>
  }

  export type cinesUpdateWithoutEmpleadosInput = {
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
    salas?: salasUpdateManyWithoutCinesNestedInput
  }

  export type cinesUncheckedUpdateWithoutEmpleadosInput = {
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
    salas?: salasUncheckedUpdateManyWithoutCinesNestedInput
  }

  export type roles_empleadosUpsertWithoutEmpleadosInput = {
    update: XOR<roles_empleadosUpdateWithoutEmpleadosInput, roles_empleadosUncheckedUpdateWithoutEmpleadosInput>
    create: XOR<roles_empleadosCreateWithoutEmpleadosInput, roles_empleadosUncheckedCreateWithoutEmpleadosInput>
    where?: roles_empleadosWhereInput
  }

  export type roles_empleadosUpdateToOneWithWhereWithoutEmpleadosInput = {
    where?: roles_empleadosWhereInput
    data: XOR<roles_empleadosUpdateWithoutEmpleadosInput, roles_empleadosUncheckedUpdateWithoutEmpleadosInput>
  }

  export type roles_empleadosUpdateWithoutEmpleadosInput = {
    nombre_rol?: StringFieldUpdateOperationsInput | string
  }

  export type roles_empleadosUncheckedUpdateWithoutEmpleadosInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre_rol?: StringFieldUpdateOperationsInput | string
  }

  export type logs_actividadUpsertWithWhereUniqueWithoutEmpleadosInput = {
    where: logs_actividadWhereUniqueInput
    update: XOR<logs_actividadUpdateWithoutEmpleadosInput, logs_actividadUncheckedUpdateWithoutEmpleadosInput>
    create: XOR<logs_actividadCreateWithoutEmpleadosInput, logs_actividadUncheckedCreateWithoutEmpleadosInput>
  }

  export type logs_actividadUpdateWithWhereUniqueWithoutEmpleadosInput = {
    where: logs_actividadWhereUniqueInput
    data: XOR<logs_actividadUpdateWithoutEmpleadosInput, logs_actividadUncheckedUpdateWithoutEmpleadosInput>
  }

  export type logs_actividadUpdateManyWithWhereWithoutEmpleadosInput = {
    where: logs_actividadScalarWhereInput
    data: XOR<logs_actividadUpdateManyMutationInput, logs_actividadUncheckedUpdateManyWithoutEmpleadosInput>
  }

  export type notificacionesUpsertWithWhereUniqueWithoutEmpleadosInput = {
    where: notificacionesWhereUniqueInput
    update: XOR<notificacionesUpdateWithoutEmpleadosInput, notificacionesUncheckedUpdateWithoutEmpleadosInput>
    create: XOR<notificacionesCreateWithoutEmpleadosInput, notificacionesUncheckedCreateWithoutEmpleadosInput>
  }

  export type notificacionesUpdateWithWhereUniqueWithoutEmpleadosInput = {
    where: notificacionesWhereUniqueInput
    data: XOR<notificacionesUpdateWithoutEmpleadosInput, notificacionesUncheckedUpdateWithoutEmpleadosInput>
  }

  export type notificacionesUpdateManyWithWhereWithoutEmpleadosInput = {
    where: notificacionesScalarWhereInput
    data: XOR<notificacionesUpdateManyMutationInput, notificacionesUncheckedUpdateManyWithoutEmpleadosInput>
  }

  export type notificacionesScalarWhereInput = {
    AND?: notificacionesScalarWhereInput | notificacionesScalarWhereInput[]
    OR?: notificacionesScalarWhereInput[]
    NOT?: notificacionesScalarWhereInput | notificacionesScalarWhereInput[]
    id_notificacion?: IntFilter<"notificaciones"> | number
    id_usuario?: IntFilter<"notificaciones"> | number
    titulo?: StringFilter<"notificaciones"> | string
    mensaje?: StringNullableFilter<"notificaciones"> | string | null
    fecha_envio?: DateTimeNullableFilter<"notificaciones"> | Date | string | null
    leido?: BoolNullableFilter<"notificaciones"> | boolean | null
    id_empleado?: IntNullableFilter<"notificaciones"> | number | null
  }

  export type boletosCreateWithoutFuncionesInput = {
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    usuarios: usuariosCreateNestedOneWithoutBoletosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutBoletosInput
  }

  export type boletosUncheckedCreateWithoutFuncionesInput = {
    id_boleto?: number
    id_usuario: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutBoletosInput
  }

  export type boletosCreateOrConnectWithoutFuncionesInput = {
    where: boletosWhereUniqueInput
    create: XOR<boletosCreateWithoutFuncionesInput, boletosUncheckedCreateWithoutFuncionesInput>
  }

  export type boletosCreateManyFuncionesInputEnvelope = {
    data: boletosCreateManyFuncionesInput | boletosCreateManyFuncionesInput[]
    skipDuplicates?: boolean
  }

  export type cartelerasCreateWithoutFuncionesInput = {
    fecha_inicio: Date | string
    fecha_fin: Date | string
    descripcion?: string | null
  }

  export type cartelerasUncheckedCreateWithoutFuncionesInput = {
    id_cartelera?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    descripcion?: string | null
  }

  export type cartelerasCreateOrConnectWithoutFuncionesInput = {
    where: cartelerasWhereUniqueInput
    create: XOR<cartelerasCreateWithoutFuncionesInput, cartelerasUncheckedCreateWithoutFuncionesInput>
  }

  export type peliculasCreateWithoutFuncionesInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutFuncionesInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutFuncionesInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutFuncionesInput, peliculasUncheckedCreateWithoutFuncionesInput>
  }

  export type salasCreateWithoutFuncionesInput = {
    nombre_sala?: string | null
    capacidad?: number | null
    cines: cinesCreateNestedOneWithoutSalasInput
  }

  export type salasUncheckedCreateWithoutFuncionesInput = {
    id_sala?: number
    id_cine: number
    nombre_sala?: string | null
    capacidad?: number | null
  }

  export type salasCreateOrConnectWithoutFuncionesInput = {
    where: salasWhereUniqueInput
    create: XOR<salasCreateWithoutFuncionesInput, salasUncheckedCreateWithoutFuncionesInput>
  }

  export type boletosUpsertWithWhereUniqueWithoutFuncionesInput = {
    where: boletosWhereUniqueInput
    update: XOR<boletosUpdateWithoutFuncionesInput, boletosUncheckedUpdateWithoutFuncionesInput>
    create: XOR<boletosCreateWithoutFuncionesInput, boletosUncheckedCreateWithoutFuncionesInput>
  }

  export type boletosUpdateWithWhereUniqueWithoutFuncionesInput = {
    where: boletosWhereUniqueInput
    data: XOR<boletosUpdateWithoutFuncionesInput, boletosUncheckedUpdateWithoutFuncionesInput>
  }

  export type boletosUpdateManyWithWhereWithoutFuncionesInput = {
    where: boletosScalarWhereInput
    data: XOR<boletosUpdateManyMutationInput, boletosUncheckedUpdateManyWithoutFuncionesInput>
  }

  export type boletosScalarWhereInput = {
    AND?: boletosScalarWhereInput | boletosScalarWhereInput[]
    OR?: boletosScalarWhereInput[]
    NOT?: boletosScalarWhereInput | boletosScalarWhereInput[]
    id_boleto?: IntFilter<"boletos"> | number
    id_funcion?: IntFilter<"boletos"> | number
    id_usuario?: IntFilter<"boletos"> | number
    asiento?: StringNullableFilter<"boletos"> | string | null
    estado?: Enumboletos_estadoNullableFilter<"boletos"> | $Enums.boletos_estado | null
  }

  export type cartelerasUpsertWithoutFuncionesInput = {
    update: XOR<cartelerasUpdateWithoutFuncionesInput, cartelerasUncheckedUpdateWithoutFuncionesInput>
    create: XOR<cartelerasCreateWithoutFuncionesInput, cartelerasUncheckedCreateWithoutFuncionesInput>
    where?: cartelerasWhereInput
  }

  export type cartelerasUpdateToOneWithWhereWithoutFuncionesInput = {
    where?: cartelerasWhereInput
    data: XOR<cartelerasUpdateWithoutFuncionesInput, cartelerasUncheckedUpdateWithoutFuncionesInput>
  }

  export type cartelerasUpdateWithoutFuncionesInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cartelerasUncheckedUpdateWithoutFuncionesInput = {
    id_cartelera?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type peliculasUpsertWithoutFuncionesInput = {
    update: XOR<peliculasUpdateWithoutFuncionesInput, peliculasUncheckedUpdateWithoutFuncionesInput>
    create: XOR<peliculasCreateWithoutFuncionesInput, peliculasUncheckedCreateWithoutFuncionesInput>
    where?: peliculasWhereInput
  }

  export type peliculasUpdateToOneWithWhereWithoutFuncionesInput = {
    where?: peliculasWhereInput
    data: XOR<peliculasUpdateWithoutFuncionesInput, peliculasUncheckedUpdateWithoutFuncionesInput>
  }

  export type peliculasUpdateWithoutFuncionesInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutFuncionesInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type salasUpsertWithoutFuncionesInput = {
    update: XOR<salasUpdateWithoutFuncionesInput, salasUncheckedUpdateWithoutFuncionesInput>
    create: XOR<salasCreateWithoutFuncionesInput, salasUncheckedCreateWithoutFuncionesInput>
    where?: salasWhereInput
  }

  export type salasUpdateToOneWithWhereWithoutFuncionesInput = {
    where?: salasWhereInput
    data: XOR<salasUpdateWithoutFuncionesInput, salasUncheckedUpdateWithoutFuncionesInput>
  }

  export type salasUpdateWithoutFuncionesInput = {
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
    cines?: cinesUpdateOneRequiredWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateWithoutFuncionesInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type peliculas_generosCreateWithoutGenerosInput = {
    peliculas: peliculasCreateNestedOneWithoutPeliculas_generosInput
  }

  export type peliculas_generosUncheckedCreateWithoutGenerosInput = {
    id_pelicula: number
  }

  export type peliculas_generosCreateOrConnectWithoutGenerosInput = {
    where: peliculas_generosWhereUniqueInput
    create: XOR<peliculas_generosCreateWithoutGenerosInput, peliculas_generosUncheckedCreateWithoutGenerosInput>
  }

  export type peliculas_generosCreateManyGenerosInputEnvelope = {
    data: peliculas_generosCreateManyGenerosInput | peliculas_generosCreateManyGenerosInput[]
    skipDuplicates?: boolean
  }

  export type peliculas_generosUpsertWithWhereUniqueWithoutGenerosInput = {
    where: peliculas_generosWhereUniqueInput
    update: XOR<peliculas_generosUpdateWithoutGenerosInput, peliculas_generosUncheckedUpdateWithoutGenerosInput>
    create: XOR<peliculas_generosCreateWithoutGenerosInput, peliculas_generosUncheckedCreateWithoutGenerosInput>
  }

  export type peliculas_generosUpdateWithWhereUniqueWithoutGenerosInput = {
    where: peliculas_generosWhereUniqueInput
    data: XOR<peliculas_generosUpdateWithoutGenerosInput, peliculas_generosUncheckedUpdateWithoutGenerosInput>
  }

  export type peliculas_generosUpdateManyWithWhereWithoutGenerosInput = {
    where: peliculas_generosScalarWhereInput
    data: XOR<peliculas_generosUpdateManyMutationInput, peliculas_generosUncheckedUpdateManyWithoutGenerosInput>
  }

  export type peliculas_generosScalarWhereInput = {
    AND?: peliculas_generosScalarWhereInput | peliculas_generosScalarWhereInput[]
    OR?: peliculas_generosScalarWhereInput[]
    NOT?: peliculas_generosScalarWhereInput | peliculas_generosScalarWhereInput[]
    id_pelicula?: IntFilter<"peliculas_generos"> | number
    id_genero?: IntFilter<"peliculas_generos"> | number
  }

  export type peliculasCreateWithoutHistorial_reproduccionInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutHistorial_reproduccionInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutHistorial_reproduccionInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutHistorial_reproduccionInput, peliculasUncheckedCreateWithoutHistorial_reproduccionInput>
  }

  export type usuariosCreateWithoutHistorial_reproduccionInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutHistorial_reproduccionInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutHistorial_reproduccionInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutHistorial_reproduccionInput, usuariosUncheckedCreateWithoutHistorial_reproduccionInput>
  }

  export type peliculasUpsertWithoutHistorial_reproduccionInput = {
    update: XOR<peliculasUpdateWithoutHistorial_reproduccionInput, peliculasUncheckedUpdateWithoutHistorial_reproduccionInput>
    create: XOR<peliculasCreateWithoutHistorial_reproduccionInput, peliculasUncheckedCreateWithoutHistorial_reproduccionInput>
    where?: peliculasWhereInput
  }

  export type peliculasUpdateToOneWithWhereWithoutHistorial_reproduccionInput = {
    where?: peliculasWhereInput
    data: XOR<peliculasUpdateWithoutHistorial_reproduccionInput, peliculasUncheckedUpdateWithoutHistorial_reproduccionInput>
  }

  export type peliculasUpdateWithoutHistorial_reproduccionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutHistorial_reproduccionInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type usuariosUpsertWithoutHistorial_reproduccionInput = {
    update: XOR<usuariosUpdateWithoutHistorial_reproduccionInput, usuariosUncheckedUpdateWithoutHistorial_reproduccionInput>
    create: XOR<usuariosCreateWithoutHistorial_reproduccionInput, usuariosUncheckedCreateWithoutHistorial_reproduccionInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutHistorial_reproduccionInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutHistorial_reproduccionInput, usuariosUncheckedUpdateWithoutHistorial_reproduccionInput>
  }

  export type usuariosUpdateWithoutHistorial_reproduccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutHistorial_reproduccionInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateWithoutIntentos_loginInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutIntentos_loginInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutIntentos_loginInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutIntentos_loginInput, usuariosUncheckedCreateWithoutIntentos_loginInput>
  }

  export type usuariosUpsertWithoutIntentos_loginInput = {
    update: XOR<usuariosUpdateWithoutIntentos_loginInput, usuariosUncheckedUpdateWithoutIntentos_loginInput>
    create: XOR<usuariosCreateWithoutIntentos_loginInput, usuariosUncheckedCreateWithoutIntentos_loginInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutIntentos_loginInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutIntentos_loginInput, usuariosUncheckedUpdateWithoutIntentos_loginInput>
  }

  export type usuariosUpdateWithoutIntentos_loginInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutIntentos_loginInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type empleadosCreateWithoutLogs_actividadInput = {
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    usuario_sistema?: boolean | null
    cines?: cinesCreateNestedOneWithoutEmpleadosInput
    roles_empleados?: roles_empleadosCreateNestedOneWithoutEmpleadosInput
    notificaciones?: notificacionesCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosUncheckedCreateWithoutLogs_actividadInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_cine?: number | null
    id_rol?: number | null
    usuario_sistema?: boolean | null
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosCreateOrConnectWithoutLogs_actividadInput = {
    where: empleadosWhereUniqueInput
    create: XOR<empleadosCreateWithoutLogs_actividadInput, empleadosUncheckedCreateWithoutLogs_actividadInput>
  }

  export type usuariosCreateWithoutLogs_actividadInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutLogs_actividadInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutLogs_actividadInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutLogs_actividadInput, usuariosUncheckedCreateWithoutLogs_actividadInput>
  }

  export type boletosCreateWithoutLogs_actividadInput = {
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    funciones: funcionesCreateNestedOneWithoutBoletosInput
    usuarios: usuariosCreateNestedOneWithoutBoletosInput
  }

  export type boletosUncheckedCreateWithoutLogs_actividadInput = {
    id_boleto?: number
    id_funcion: number
    id_usuario: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
  }

  export type boletosCreateOrConnectWithoutLogs_actividadInput = {
    where: boletosWhereUniqueInput
    create: XOR<boletosCreateWithoutLogs_actividadInput, boletosUncheckedCreateWithoutLogs_actividadInput>
  }

  export type empleadosUpsertWithoutLogs_actividadInput = {
    update: XOR<empleadosUpdateWithoutLogs_actividadInput, empleadosUncheckedUpdateWithoutLogs_actividadInput>
    create: XOR<empleadosCreateWithoutLogs_actividadInput, empleadosUncheckedCreateWithoutLogs_actividadInput>
    where?: empleadosWhereInput
  }

  export type empleadosUpdateToOneWithWhereWithoutLogs_actividadInput = {
    where?: empleadosWhereInput
    data: XOR<empleadosUpdateWithoutLogs_actividadInput, empleadosUncheckedUpdateWithoutLogs_actividadInput>
  }

  export type empleadosUpdateWithoutLogs_actividadInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cines?: cinesUpdateOneWithoutEmpleadosNestedInput
    roles_empleados?: roles_empleadosUpdateOneWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateWithoutLogs_actividadInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cine?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    notificaciones?: notificacionesUncheckedUpdateManyWithoutEmpleadosNestedInput
  }

  export type usuariosUpsertWithoutLogs_actividadInput = {
    update: XOR<usuariosUpdateWithoutLogs_actividadInput, usuariosUncheckedUpdateWithoutLogs_actividadInput>
    create: XOR<usuariosCreateWithoutLogs_actividadInput, usuariosUncheckedCreateWithoutLogs_actividadInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutLogs_actividadInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutLogs_actividadInput, usuariosUncheckedUpdateWithoutLogs_actividadInput>
  }

  export type usuariosUpdateWithoutLogs_actividadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutLogs_actividadInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type boletosUpsertWithoutLogs_actividadInput = {
    update: XOR<boletosUpdateWithoutLogs_actividadInput, boletosUncheckedUpdateWithoutLogs_actividadInput>
    create: XOR<boletosCreateWithoutLogs_actividadInput, boletosUncheckedCreateWithoutLogs_actividadInput>
    where?: boletosWhereInput
  }

  export type boletosUpdateToOneWithWhereWithoutLogs_actividadInput = {
    where?: boletosWhereInput
    data: XOR<boletosUpdateWithoutLogs_actividadInput, boletosUncheckedUpdateWithoutLogs_actividadInput>
  }

  export type boletosUpdateWithoutLogs_actividadInput = {
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    funciones?: funcionesUpdateOneRequiredWithoutBoletosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutBoletosNestedInput
  }

  export type boletosUncheckedUpdateWithoutLogs_actividadInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
  }

  export type pagosCreateWithoutMetodos_pagoInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
    usuarios: usuariosCreateNestedOneWithoutPagosInput
  }

  export type pagosUncheckedCreateWithoutMetodos_pagoInput = {
    id_pago?: number
    id_usuario: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
  }

  export type pagosCreateOrConnectWithoutMetodos_pagoInput = {
    where: pagosWhereUniqueInput
    create: XOR<pagosCreateWithoutMetodos_pagoInput, pagosUncheckedCreateWithoutMetodos_pagoInput>
  }

  export type pagosCreateManyMetodos_pagoInputEnvelope = {
    data: pagosCreateManyMetodos_pagoInput | pagosCreateManyMetodos_pagoInput[]
    skipDuplicates?: boolean
  }

  export type pagosUpsertWithWhereUniqueWithoutMetodos_pagoInput = {
    where: pagosWhereUniqueInput
    update: XOR<pagosUpdateWithoutMetodos_pagoInput, pagosUncheckedUpdateWithoutMetodos_pagoInput>
    create: XOR<pagosCreateWithoutMetodos_pagoInput, pagosUncheckedCreateWithoutMetodos_pagoInput>
  }

  export type pagosUpdateWithWhereUniqueWithoutMetodos_pagoInput = {
    where: pagosWhereUniqueInput
    data: XOR<pagosUpdateWithoutMetodos_pagoInput, pagosUncheckedUpdateWithoutMetodos_pagoInput>
  }

  export type pagosUpdateManyWithWhereWithoutMetodos_pagoInput = {
    where: pagosScalarWhereInput
    data: XOR<pagosUpdateManyMutationInput, pagosUncheckedUpdateManyWithoutMetodos_pagoInput>
  }

  export type pagosScalarWhereInput = {
    AND?: pagosScalarWhereInput | pagosScalarWhereInput[]
    OR?: pagosScalarWhereInput[]
    NOT?: pagosScalarWhereInput | pagosScalarWhereInput[]
    id_pago?: IntFilter<"pagos"> | number
    id_usuario?: IntFilter<"pagos"> | number
    monto?: DecimalFilter<"pagos"> | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFilter<"pagos"> | number
    fecha_pago?: DateTimeNullableFilter<"pagos"> | Date | string | null
    estado?: Enumpagos_estadoNullableFilter<"pagos"> | $Enums.pagos_estado | null
  }

  export type usuariosCreateWithoutNotificacionesInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutNotificacionesInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutNotificacionesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutNotificacionesInput, usuariosUncheckedCreateWithoutNotificacionesInput>
  }

  export type empleadosCreateWithoutNotificacionesInput = {
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    usuario_sistema?: boolean | null
    cines?: cinesCreateNestedOneWithoutEmpleadosInput
    roles_empleados?: roles_empleadosCreateNestedOneWithoutEmpleadosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosUncheckedCreateWithoutNotificacionesInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_cine?: number | null
    id_rol?: number | null
    usuario_sistema?: boolean | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosCreateOrConnectWithoutNotificacionesInput = {
    where: empleadosWhereUniqueInput
    create: XOR<empleadosCreateWithoutNotificacionesInput, empleadosUncheckedCreateWithoutNotificacionesInput>
  }

  export type usuariosUpsertWithoutNotificacionesInput = {
    update: XOR<usuariosUpdateWithoutNotificacionesInput, usuariosUncheckedUpdateWithoutNotificacionesInput>
    create: XOR<usuariosCreateWithoutNotificacionesInput, usuariosUncheckedCreateWithoutNotificacionesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutNotificacionesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutNotificacionesInput, usuariosUncheckedUpdateWithoutNotificacionesInput>
  }

  export type usuariosUpdateWithoutNotificacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutNotificacionesInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type empleadosUpsertWithoutNotificacionesInput = {
    update: XOR<empleadosUpdateWithoutNotificacionesInput, empleadosUncheckedUpdateWithoutNotificacionesInput>
    create: XOR<empleadosCreateWithoutNotificacionesInput, empleadosUncheckedCreateWithoutNotificacionesInput>
    where?: empleadosWhereInput
  }

  export type empleadosUpdateToOneWithWhereWithoutNotificacionesInput = {
    where?: empleadosWhereInput
    data: XOR<empleadosUpdateWithoutNotificacionesInput, empleadosUncheckedUpdateWithoutNotificacionesInput>
  }

  export type empleadosUpdateWithoutNotificacionesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cines?: cinesUpdateOneWithoutEmpleadosNestedInput
    roles_empleados?: roles_empleadosUpdateOneWithoutEmpleadosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateWithoutNotificacionesInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cine?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutEmpleadosNestedInput
  }

  export type metodos_pagoCreateWithoutPagosInput = {
    nombre: string
    descripcion?: string | null
  }

  export type metodos_pagoUncheckedCreateWithoutPagosInput = {
    id_metodo?: number
    nombre: string
    descripcion?: string | null
  }

  export type metodos_pagoCreateOrConnectWithoutPagosInput = {
    where: metodos_pagoWhereUniqueInput
    create: XOR<metodos_pagoCreateWithoutPagosInput, metodos_pagoUncheckedCreateWithoutPagosInput>
  }

  export type usuariosCreateWithoutPagosInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutPagosInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutPagosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutPagosInput, usuariosUncheckedCreateWithoutPagosInput>
  }

  export type metodos_pagoUpsertWithoutPagosInput = {
    update: XOR<metodos_pagoUpdateWithoutPagosInput, metodos_pagoUncheckedUpdateWithoutPagosInput>
    create: XOR<metodos_pagoCreateWithoutPagosInput, metodos_pagoUncheckedCreateWithoutPagosInput>
    where?: metodos_pagoWhereInput
  }

  export type metodos_pagoUpdateToOneWithWhereWithoutPagosInput = {
    where?: metodos_pagoWhereInput
    data: XOR<metodos_pagoUpdateWithoutPagosInput, metodos_pagoUncheckedUpdateWithoutPagosInput>
  }

  export type metodos_pagoUpdateWithoutPagosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type metodos_pagoUncheckedUpdateWithoutPagosInput = {
    id_metodo?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuariosUpsertWithoutPagosInput = {
    update: XOR<usuariosUpdateWithoutPagosInput, usuariosUncheckedUpdateWithoutPagosInput>
    create: XOR<usuariosCreateWithoutPagosInput, usuariosUncheckedCreateWithoutPagosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutPagosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutPagosInput, usuariosUncheckedUpdateWithoutPagosInput>
  }

  export type usuariosUpdateWithoutPagosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutPagosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type funcionesCreateWithoutPeliculasInput = {
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosCreateNestedManyWithoutFuncionesInput
    carteleras: cartelerasCreateNestedOneWithoutFuncionesInput
    salas: salasCreateNestedOneWithoutFuncionesInput
  }

  export type funcionesUncheckedCreateWithoutPeliculasInput = {
    id_funcion?: number
    id_cartelera: number
    id_sala: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedCreateNestedManyWithoutFuncionesInput
  }

  export type funcionesCreateOrConnectWithoutPeliculasInput = {
    where: funcionesWhereUniqueInput
    create: XOR<funcionesCreateWithoutPeliculasInput, funcionesUncheckedCreateWithoutPeliculasInput>
  }

  export type funcionesCreateManyPeliculasInputEnvelope = {
    data: funcionesCreateManyPeliculasInput | funcionesCreateManyPeliculasInput[]
    skipDuplicates?: boolean
  }

  export type historial_reproduccionCreateWithoutPeliculasInput = {
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
    usuarios: usuariosCreateNestedOneWithoutHistorial_reproduccionInput
  }

  export type historial_reproduccionUncheckedCreateWithoutPeliculasInput = {
    id_usuario: number
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
  }

  export type historial_reproduccionCreateOrConnectWithoutPeliculasInput = {
    where: historial_reproduccionWhereUniqueInput
    create: XOR<historial_reproduccionCreateWithoutPeliculasInput, historial_reproduccionUncheckedCreateWithoutPeliculasInput>
  }

  export type historial_reproduccionCreateManyPeliculasInputEnvelope = {
    data: historial_reproduccionCreateManyPeliculasInput | historial_reproduccionCreateManyPeliculasInput[]
    skipDuplicates?: boolean
  }

  export type clasificacionesCreateWithoutPeliculasInput = {
    codigo: string
    descripcion?: string | null
  }

  export type clasificacionesUncheckedCreateWithoutPeliculasInput = {
    id_clasificacion?: number
    codigo: string
    descripcion?: string | null
  }

  export type clasificacionesCreateOrConnectWithoutPeliculasInput = {
    where: clasificacionesWhereUniqueInput
    create: XOR<clasificacionesCreateWithoutPeliculasInput, clasificacionesUncheckedCreateWithoutPeliculasInput>
  }

  export type productorasCreateWithoutPeliculasInput = {
    nombre_productora: string
    pais_origen?: string | null
  }

  export type productorasUncheckedCreateWithoutPeliculasInput = {
    id_productora?: number
    nombre_productora: string
    pais_origen?: string | null
  }

  export type productorasCreateOrConnectWithoutPeliculasInput = {
    where: productorasWhereUniqueInput
    create: XOR<productorasCreateWithoutPeliculasInput, productorasUncheckedCreateWithoutPeliculasInput>
  }

  export type peliculas_directoresCreateWithoutPeliculasInput = {
    directores: directoresCreateNestedOneWithoutPeliculas_directoresInput
  }

  export type peliculas_directoresUncheckedCreateWithoutPeliculasInput = {
    id_director: number
  }

  export type peliculas_directoresCreateOrConnectWithoutPeliculasInput = {
    where: peliculas_directoresWhereUniqueInput
    create: XOR<peliculas_directoresCreateWithoutPeliculasInput, peliculas_directoresUncheckedCreateWithoutPeliculasInput>
  }

  export type peliculas_directoresCreateManyPeliculasInputEnvelope = {
    data: peliculas_directoresCreateManyPeliculasInput | peliculas_directoresCreateManyPeliculasInput[]
    skipDuplicates?: boolean
  }

  export type peliculas_generosCreateWithoutPeliculasInput = {
    generos: generosCreateNestedOneWithoutPeliculas_generosInput
  }

  export type peliculas_generosUncheckedCreateWithoutPeliculasInput = {
    id_genero: number
  }

  export type peliculas_generosCreateOrConnectWithoutPeliculasInput = {
    where: peliculas_generosWhereUniqueInput
    create: XOR<peliculas_generosCreateWithoutPeliculasInput, peliculas_generosUncheckedCreateWithoutPeliculasInput>
  }

  export type peliculas_generosCreateManyPeliculasInputEnvelope = {
    data: peliculas_generosCreateManyPeliculasInput | peliculas_generosCreateManyPeliculasInput[]
    skipDuplicates?: boolean
  }

  export type repartoCreateWithoutPeliculasInput = {
    rol?: string | null
    actores: actoresCreateNestedOneWithoutRepartoInput
  }

  export type repartoUncheckedCreateWithoutPeliculasInput = {
    id_reparto?: number
    id_actor: number
    rol?: string | null
  }

  export type repartoCreateOrConnectWithoutPeliculasInput = {
    where: repartoWhereUniqueInput
    create: XOR<repartoCreateWithoutPeliculasInput, repartoUncheckedCreateWithoutPeliculasInput>
  }

  export type repartoCreateManyPeliculasInputEnvelope = {
    data: repartoCreateManyPeliculasInput | repartoCreateManyPeliculasInput[]
    skipDuplicates?: boolean
  }

  export type valoracionesCreateWithoutPeliculasInput = {
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
    usuarios: usuariosCreateNestedOneWithoutValoracionesInput
  }

  export type valoracionesUncheckedCreateWithoutPeliculasInput = {
    id_valoracion?: number
    id_usuario: number
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
  }

  export type valoracionesCreateOrConnectWithoutPeliculasInput = {
    where: valoracionesWhereUniqueInput
    create: XOR<valoracionesCreateWithoutPeliculasInput, valoracionesUncheckedCreateWithoutPeliculasInput>
  }

  export type valoracionesCreateManyPeliculasInputEnvelope = {
    data: valoracionesCreateManyPeliculasInput | valoracionesCreateManyPeliculasInput[]
    skipDuplicates?: boolean
  }

  export type funcionesUpsertWithWhereUniqueWithoutPeliculasInput = {
    where: funcionesWhereUniqueInput
    update: XOR<funcionesUpdateWithoutPeliculasInput, funcionesUncheckedUpdateWithoutPeliculasInput>
    create: XOR<funcionesCreateWithoutPeliculasInput, funcionesUncheckedCreateWithoutPeliculasInput>
  }

  export type funcionesUpdateWithWhereUniqueWithoutPeliculasInput = {
    where: funcionesWhereUniqueInput
    data: XOR<funcionesUpdateWithoutPeliculasInput, funcionesUncheckedUpdateWithoutPeliculasInput>
  }

  export type funcionesUpdateManyWithWhereWithoutPeliculasInput = {
    where: funcionesScalarWhereInput
    data: XOR<funcionesUpdateManyMutationInput, funcionesUncheckedUpdateManyWithoutPeliculasInput>
  }

  export type historial_reproduccionUpsertWithWhereUniqueWithoutPeliculasInput = {
    where: historial_reproduccionWhereUniqueInput
    update: XOR<historial_reproduccionUpdateWithoutPeliculasInput, historial_reproduccionUncheckedUpdateWithoutPeliculasInput>
    create: XOR<historial_reproduccionCreateWithoutPeliculasInput, historial_reproduccionUncheckedCreateWithoutPeliculasInput>
  }

  export type historial_reproduccionUpdateWithWhereUniqueWithoutPeliculasInput = {
    where: historial_reproduccionWhereUniqueInput
    data: XOR<historial_reproduccionUpdateWithoutPeliculasInput, historial_reproduccionUncheckedUpdateWithoutPeliculasInput>
  }

  export type historial_reproduccionUpdateManyWithWhereWithoutPeliculasInput = {
    where: historial_reproduccionScalarWhereInput
    data: XOR<historial_reproduccionUpdateManyMutationInput, historial_reproduccionUncheckedUpdateManyWithoutPeliculasInput>
  }

  export type historial_reproduccionScalarWhereInput = {
    AND?: historial_reproduccionScalarWhereInput | historial_reproduccionScalarWhereInput[]
    OR?: historial_reproduccionScalarWhereInput[]
    NOT?: historial_reproduccionScalarWhereInput | historial_reproduccionScalarWhereInput[]
    id_usuario?: IntFilter<"historial_reproduccion"> | number
    id_pelicula?: IntFilter<"historial_reproduccion"> | number
    fecha_visualizacion?: DateTimeNullableFilter<"historial_reproduccion"> | Date | string | null
    progreso_visto_porcentaje?: IntNullableFilter<"historial_reproduccion"> | number | null
  }

  export type clasificacionesUpsertWithoutPeliculasInput = {
    update: XOR<clasificacionesUpdateWithoutPeliculasInput, clasificacionesUncheckedUpdateWithoutPeliculasInput>
    create: XOR<clasificacionesCreateWithoutPeliculasInput, clasificacionesUncheckedCreateWithoutPeliculasInput>
    where?: clasificacionesWhereInput
  }

  export type clasificacionesUpdateToOneWithWhereWithoutPeliculasInput = {
    where?: clasificacionesWhereInput
    data: XOR<clasificacionesUpdateWithoutPeliculasInput, clasificacionesUncheckedUpdateWithoutPeliculasInput>
  }

  export type clasificacionesUpdateWithoutPeliculasInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clasificacionesUncheckedUpdateWithoutPeliculasInput = {
    id_clasificacion?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productorasUpsertWithoutPeliculasInput = {
    update: XOR<productorasUpdateWithoutPeliculasInput, productorasUncheckedUpdateWithoutPeliculasInput>
    create: XOR<productorasCreateWithoutPeliculasInput, productorasUncheckedCreateWithoutPeliculasInput>
    where?: productorasWhereInput
  }

  export type productorasUpdateToOneWithWhereWithoutPeliculasInput = {
    where?: productorasWhereInput
    data: XOR<productorasUpdateWithoutPeliculasInput, productorasUncheckedUpdateWithoutPeliculasInput>
  }

  export type productorasUpdateWithoutPeliculasInput = {
    nombre_productora?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productorasUncheckedUpdateWithoutPeliculasInput = {
    id_productora?: IntFieldUpdateOperationsInput | number
    nombre_productora?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type peliculas_directoresUpsertWithWhereUniqueWithoutPeliculasInput = {
    where: peliculas_directoresWhereUniqueInput
    update: XOR<peliculas_directoresUpdateWithoutPeliculasInput, peliculas_directoresUncheckedUpdateWithoutPeliculasInput>
    create: XOR<peliculas_directoresCreateWithoutPeliculasInput, peliculas_directoresUncheckedCreateWithoutPeliculasInput>
  }

  export type peliculas_directoresUpdateWithWhereUniqueWithoutPeliculasInput = {
    where: peliculas_directoresWhereUniqueInput
    data: XOR<peliculas_directoresUpdateWithoutPeliculasInput, peliculas_directoresUncheckedUpdateWithoutPeliculasInput>
  }

  export type peliculas_directoresUpdateManyWithWhereWithoutPeliculasInput = {
    where: peliculas_directoresScalarWhereInput
    data: XOR<peliculas_directoresUpdateManyMutationInput, peliculas_directoresUncheckedUpdateManyWithoutPeliculasInput>
  }

  export type peliculas_generosUpsertWithWhereUniqueWithoutPeliculasInput = {
    where: peliculas_generosWhereUniqueInput
    update: XOR<peliculas_generosUpdateWithoutPeliculasInput, peliculas_generosUncheckedUpdateWithoutPeliculasInput>
    create: XOR<peliculas_generosCreateWithoutPeliculasInput, peliculas_generosUncheckedCreateWithoutPeliculasInput>
  }

  export type peliculas_generosUpdateWithWhereUniqueWithoutPeliculasInput = {
    where: peliculas_generosWhereUniqueInput
    data: XOR<peliculas_generosUpdateWithoutPeliculasInput, peliculas_generosUncheckedUpdateWithoutPeliculasInput>
  }

  export type peliculas_generosUpdateManyWithWhereWithoutPeliculasInput = {
    where: peliculas_generosScalarWhereInput
    data: XOR<peliculas_generosUpdateManyMutationInput, peliculas_generosUncheckedUpdateManyWithoutPeliculasInput>
  }

  export type repartoUpsertWithWhereUniqueWithoutPeliculasInput = {
    where: repartoWhereUniqueInput
    update: XOR<repartoUpdateWithoutPeliculasInput, repartoUncheckedUpdateWithoutPeliculasInput>
    create: XOR<repartoCreateWithoutPeliculasInput, repartoUncheckedCreateWithoutPeliculasInput>
  }

  export type repartoUpdateWithWhereUniqueWithoutPeliculasInput = {
    where: repartoWhereUniqueInput
    data: XOR<repartoUpdateWithoutPeliculasInput, repartoUncheckedUpdateWithoutPeliculasInput>
  }

  export type repartoUpdateManyWithWhereWithoutPeliculasInput = {
    where: repartoScalarWhereInput
    data: XOR<repartoUpdateManyMutationInput, repartoUncheckedUpdateManyWithoutPeliculasInput>
  }

  export type valoracionesUpsertWithWhereUniqueWithoutPeliculasInput = {
    where: valoracionesWhereUniqueInput
    update: XOR<valoracionesUpdateWithoutPeliculasInput, valoracionesUncheckedUpdateWithoutPeliculasInput>
    create: XOR<valoracionesCreateWithoutPeliculasInput, valoracionesUncheckedCreateWithoutPeliculasInput>
  }

  export type valoracionesUpdateWithWhereUniqueWithoutPeliculasInput = {
    where: valoracionesWhereUniqueInput
    data: XOR<valoracionesUpdateWithoutPeliculasInput, valoracionesUncheckedUpdateWithoutPeliculasInput>
  }

  export type valoracionesUpdateManyWithWhereWithoutPeliculasInput = {
    where: valoracionesScalarWhereInput
    data: XOR<valoracionesUpdateManyMutationInput, valoracionesUncheckedUpdateManyWithoutPeliculasInput>
  }

  export type valoracionesScalarWhereInput = {
    AND?: valoracionesScalarWhereInput | valoracionesScalarWhereInput[]
    OR?: valoracionesScalarWhereInput[]
    NOT?: valoracionesScalarWhereInput | valoracionesScalarWhereInput[]
    id_valoracion?: IntFilter<"valoraciones"> | number
    id_usuario?: IntFilter<"valoraciones"> | number
    id_pelicula?: IntFilter<"valoraciones"> | number
    puntaje?: IntNullableFilter<"valoraciones"> | number | null
    comentario?: StringNullableFilter<"valoraciones"> | string | null
    fecha_valoracion?: DateTimeNullableFilter<"valoraciones"> | Date | string | null
  }

  export type directoresCreateWithoutPeliculas_directoresInput = {
    nombre_director: string
    apellido_director?: string | null
    biografia?: string | null
  }

  export type directoresUncheckedCreateWithoutPeliculas_directoresInput = {
    id_director?: number
    nombre_director: string
    apellido_director?: string | null
    biografia?: string | null
  }

  export type directoresCreateOrConnectWithoutPeliculas_directoresInput = {
    where: directoresWhereUniqueInput
    create: XOR<directoresCreateWithoutPeliculas_directoresInput, directoresUncheckedCreateWithoutPeliculas_directoresInput>
  }

  export type peliculasCreateWithoutPeliculas_directoresInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutPeliculas_directoresInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutPeliculas_directoresInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutPeliculas_directoresInput, peliculasUncheckedCreateWithoutPeliculas_directoresInput>
  }

  export type directoresUpsertWithoutPeliculas_directoresInput = {
    update: XOR<directoresUpdateWithoutPeliculas_directoresInput, directoresUncheckedUpdateWithoutPeliculas_directoresInput>
    create: XOR<directoresCreateWithoutPeliculas_directoresInput, directoresUncheckedCreateWithoutPeliculas_directoresInput>
    where?: directoresWhereInput
  }

  export type directoresUpdateToOneWithWhereWithoutPeliculas_directoresInput = {
    where?: directoresWhereInput
    data: XOR<directoresUpdateWithoutPeliculas_directoresInput, directoresUncheckedUpdateWithoutPeliculas_directoresInput>
  }

  export type directoresUpdateWithoutPeliculas_directoresInput = {
    nombre_director?: StringFieldUpdateOperationsInput | string
    apellido_director?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type directoresUncheckedUpdateWithoutPeliculas_directoresInput = {
    id_director?: IntFieldUpdateOperationsInput | number
    nombre_director?: StringFieldUpdateOperationsInput | string
    apellido_director?: NullableStringFieldUpdateOperationsInput | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type peliculasUpsertWithoutPeliculas_directoresInput = {
    update: XOR<peliculasUpdateWithoutPeliculas_directoresInput, peliculasUncheckedUpdateWithoutPeliculas_directoresInput>
    create: XOR<peliculasCreateWithoutPeliculas_directoresInput, peliculasUncheckedCreateWithoutPeliculas_directoresInput>
    where?: peliculasWhereInput
  }

  export type peliculasUpdateToOneWithWhereWithoutPeliculas_directoresInput = {
    where?: peliculasWhereInput
    data: XOR<peliculasUpdateWithoutPeliculas_directoresInput, peliculasUncheckedUpdateWithoutPeliculas_directoresInput>
  }

  export type peliculasUpdateWithoutPeliculas_directoresInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutPeliculas_directoresInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type generosCreateWithoutPeliculas_generosInput = {
    nombre_genero: string
  }

  export type generosUncheckedCreateWithoutPeliculas_generosInput = {
    id_genero?: number
    nombre_genero: string
  }

  export type generosCreateOrConnectWithoutPeliculas_generosInput = {
    where: generosWhereUniqueInput
    create: XOR<generosCreateWithoutPeliculas_generosInput, generosUncheckedCreateWithoutPeliculas_generosInput>
  }

  export type peliculasCreateWithoutPeliculas_generosInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutPeliculas_generosInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutPeliculas_generosInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutPeliculas_generosInput, peliculasUncheckedCreateWithoutPeliculas_generosInput>
  }

  export type generosUpsertWithoutPeliculas_generosInput = {
    update: XOR<generosUpdateWithoutPeliculas_generosInput, generosUncheckedUpdateWithoutPeliculas_generosInput>
    create: XOR<generosCreateWithoutPeliculas_generosInput, generosUncheckedCreateWithoutPeliculas_generosInput>
    where?: generosWhereInput
  }

  export type generosUpdateToOneWithWhereWithoutPeliculas_generosInput = {
    where?: generosWhereInput
    data: XOR<generosUpdateWithoutPeliculas_generosInput, generosUncheckedUpdateWithoutPeliculas_generosInput>
  }

  export type generosUpdateWithoutPeliculas_generosInput = {
    nombre_genero?: StringFieldUpdateOperationsInput | string
  }

  export type generosUncheckedUpdateWithoutPeliculas_generosInput = {
    id_genero?: IntFieldUpdateOperationsInput | number
    nombre_genero?: StringFieldUpdateOperationsInput | string
  }

  export type peliculasUpsertWithoutPeliculas_generosInput = {
    update: XOR<peliculasUpdateWithoutPeliculas_generosInput, peliculasUncheckedUpdateWithoutPeliculas_generosInput>
    create: XOR<peliculasCreateWithoutPeliculas_generosInput, peliculasUncheckedCreateWithoutPeliculas_generosInput>
    where?: peliculasWhereInput
  }

  export type peliculasUpdateToOneWithWhereWithoutPeliculas_generosInput = {
    where?: peliculasWhereInput
    data: XOR<peliculasUpdateWithoutPeliculas_generosInput, peliculasUncheckedUpdateWithoutPeliculas_generosInput>
  }

  export type peliculasUpdateWithoutPeliculas_generosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutPeliculas_generosInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type suscripcionesCreateWithoutPlanesInput = {
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    usuarios: usuariosCreateNestedOneWithoutSuscripcionesInput
  }

  export type suscripcionesUncheckedCreateWithoutPlanesInput = {
    id_suscripcion?: number
    id_usuario: number
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
  }

  export type suscripcionesCreateOrConnectWithoutPlanesInput = {
    where: suscripcionesWhereUniqueInput
    create: XOR<suscripcionesCreateWithoutPlanesInput, suscripcionesUncheckedCreateWithoutPlanesInput>
  }

  export type suscripcionesCreateManyPlanesInputEnvelope = {
    data: suscripcionesCreateManyPlanesInput | suscripcionesCreateManyPlanesInput[]
    skipDuplicates?: boolean
  }

  export type suscripcionesUpsertWithWhereUniqueWithoutPlanesInput = {
    where: suscripcionesWhereUniqueInput
    update: XOR<suscripcionesUpdateWithoutPlanesInput, suscripcionesUncheckedUpdateWithoutPlanesInput>
    create: XOR<suscripcionesCreateWithoutPlanesInput, suscripcionesUncheckedCreateWithoutPlanesInput>
  }

  export type suscripcionesUpdateWithWhereUniqueWithoutPlanesInput = {
    where: suscripcionesWhereUniqueInput
    data: XOR<suscripcionesUpdateWithoutPlanesInput, suscripcionesUncheckedUpdateWithoutPlanesInput>
  }

  export type suscripcionesUpdateManyWithWhereWithoutPlanesInput = {
    where: suscripcionesScalarWhereInput
    data: XOR<suscripcionesUpdateManyMutationInput, suscripcionesUncheckedUpdateManyWithoutPlanesInput>
  }

  export type suscripcionesScalarWhereInput = {
    AND?: suscripcionesScalarWhereInput | suscripcionesScalarWhereInput[]
    OR?: suscripcionesScalarWhereInput[]
    NOT?: suscripcionesScalarWhereInput | suscripcionesScalarWhereInput[]
    id_suscripcion?: IntFilter<"suscripciones"> | number
    id_usuario?: IntFilter<"suscripciones"> | number
    fecha_inicio?: DateTimeNullableFilter<"suscripciones"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"suscripciones"> | Date | string | null
    estado?: Enumsuscripciones_estadoNullableFilter<"suscripciones"> | $Enums.suscripciones_estado | null
    id_plan?: IntNullableFilter<"suscripciones"> | number | null
  }

  export type peliculasCreateWithoutProductorasInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutProductorasInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutProductorasInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutProductorasInput, peliculasUncheckedCreateWithoutProductorasInput>
  }

  export type peliculasCreateManyProductorasInputEnvelope = {
    data: peliculasCreateManyProductorasInput | peliculasCreateManyProductorasInput[]
    skipDuplicates?: boolean
  }

  export type peliculasUpsertWithWhereUniqueWithoutProductorasInput = {
    where: peliculasWhereUniqueInput
    update: XOR<peliculasUpdateWithoutProductorasInput, peliculasUncheckedUpdateWithoutProductorasInput>
    create: XOR<peliculasCreateWithoutProductorasInput, peliculasUncheckedCreateWithoutProductorasInput>
  }

  export type peliculasUpdateWithWhereUniqueWithoutProductorasInput = {
    where: peliculasWhereUniqueInput
    data: XOR<peliculasUpdateWithoutProductorasInput, peliculasUncheckedUpdateWithoutProductorasInput>
  }

  export type peliculasUpdateManyWithWhereWithoutProductorasInput = {
    where: peliculasScalarWhereInput
    data: XOR<peliculasUpdateManyMutationInput, peliculasUncheckedUpdateManyWithoutProductorasInput>
  }

  export type actoresCreateWithoutRepartoInput = {
    nombre_actor: string
    apellido_actor?: string | null
    fecha_nacimiento?: Date | string | null
    biografia?: string | null
  }

  export type actoresUncheckedCreateWithoutRepartoInput = {
    id_actor?: number
    nombre_actor: string
    apellido_actor?: string | null
    fecha_nacimiento?: Date | string | null
    biografia?: string | null
  }

  export type actoresCreateOrConnectWithoutRepartoInput = {
    where: actoresWhereUniqueInput
    create: XOR<actoresCreateWithoutRepartoInput, actoresUncheckedCreateWithoutRepartoInput>
  }

  export type peliculasCreateWithoutRepartoInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutRepartoInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutRepartoInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutRepartoInput, peliculasUncheckedCreateWithoutRepartoInput>
  }

  export type actoresUpsertWithoutRepartoInput = {
    update: XOR<actoresUpdateWithoutRepartoInput, actoresUncheckedUpdateWithoutRepartoInput>
    create: XOR<actoresCreateWithoutRepartoInput, actoresUncheckedCreateWithoutRepartoInput>
    where?: actoresWhereInput
  }

  export type actoresUpdateToOneWithWhereWithoutRepartoInput = {
    where?: actoresWhereInput
    data: XOR<actoresUpdateWithoutRepartoInput, actoresUncheckedUpdateWithoutRepartoInput>
  }

  export type actoresUpdateWithoutRepartoInput = {
    nombre_actor?: StringFieldUpdateOperationsInput | string
    apellido_actor?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type actoresUncheckedUpdateWithoutRepartoInput = {
    id_actor?: IntFieldUpdateOperationsInput | number
    nombre_actor?: StringFieldUpdateOperationsInput | string
    apellido_actor?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type peliculasUpsertWithoutRepartoInput = {
    update: XOR<peliculasUpdateWithoutRepartoInput, peliculasUncheckedUpdateWithoutRepartoInput>
    create: XOR<peliculasCreateWithoutRepartoInput, peliculasUncheckedCreateWithoutRepartoInput>
    where?: peliculasWhereInput
  }

  export type peliculasUpdateToOneWithWhereWithoutRepartoInput = {
    where?: peliculasWhereInput
    data: XOR<peliculasUpdateWithoutRepartoInput, peliculasUncheckedUpdateWithoutRepartoInput>
  }

  export type peliculasUpdateWithoutRepartoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutRepartoInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type usuariosCreateWithoutReportes_usuariosInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutReportes_usuariosInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutReportes_usuariosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutReportes_usuariosInput, usuariosUncheckedCreateWithoutReportes_usuariosInput>
  }

  export type usuariosUpsertWithoutReportes_usuariosInput = {
    update: XOR<usuariosUpdateWithoutReportes_usuariosInput, usuariosUncheckedUpdateWithoutReportes_usuariosInput>
    create: XOR<usuariosCreateWithoutReportes_usuariosInput, usuariosUncheckedCreateWithoutReportes_usuariosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutReportes_usuariosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutReportes_usuariosInput, usuariosUncheckedUpdateWithoutReportes_usuariosInput>
  }

  export type usuariosUpdateWithoutReportes_usuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutReportes_usuariosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type empleadosCreateWithoutRoles_empleadosInput = {
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    usuario_sistema?: boolean | null
    cines?: cinesCreateNestedOneWithoutEmpleadosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutEmpleadosInput
    notificaciones?: notificacionesCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosUncheckedCreateWithoutRoles_empleadosInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_cine?: number | null
    usuario_sistema?: boolean | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutEmpleadosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutEmpleadosInput
  }

  export type empleadosCreateOrConnectWithoutRoles_empleadosInput = {
    where: empleadosWhereUniqueInput
    create: XOR<empleadosCreateWithoutRoles_empleadosInput, empleadosUncheckedCreateWithoutRoles_empleadosInput>
  }

  export type empleadosCreateManyRoles_empleadosInputEnvelope = {
    data: empleadosCreateManyRoles_empleadosInput | empleadosCreateManyRoles_empleadosInput[]
    skipDuplicates?: boolean
  }

  export type empleadosUpsertWithWhereUniqueWithoutRoles_empleadosInput = {
    where: empleadosWhereUniqueInput
    update: XOR<empleadosUpdateWithoutRoles_empleadosInput, empleadosUncheckedUpdateWithoutRoles_empleadosInput>
    create: XOR<empleadosCreateWithoutRoles_empleadosInput, empleadosUncheckedCreateWithoutRoles_empleadosInput>
  }

  export type empleadosUpdateWithWhereUniqueWithoutRoles_empleadosInput = {
    where: empleadosWhereUniqueInput
    data: XOR<empleadosUpdateWithoutRoles_empleadosInput, empleadosUncheckedUpdateWithoutRoles_empleadosInput>
  }

  export type empleadosUpdateManyWithWhereWithoutRoles_empleadosInput = {
    where: empleadosScalarWhereInput
    data: XOR<empleadosUpdateManyMutationInput, empleadosUncheckedUpdateManyWithoutRoles_empleadosInput>
  }

  export type funcionesCreateWithoutSalasInput = {
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosCreateNestedManyWithoutFuncionesInput
    carteleras: cartelerasCreateNestedOneWithoutFuncionesInput
    peliculas: peliculasCreateNestedOneWithoutFuncionesInput
  }

  export type funcionesUncheckedCreateWithoutSalasInput = {
    id_funcion?: number
    id_cartelera: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedCreateNestedManyWithoutFuncionesInput
  }

  export type funcionesCreateOrConnectWithoutSalasInput = {
    where: funcionesWhereUniqueInput
    create: XOR<funcionesCreateWithoutSalasInput, funcionesUncheckedCreateWithoutSalasInput>
  }

  export type funcionesCreateManySalasInputEnvelope = {
    data: funcionesCreateManySalasInput | funcionesCreateManySalasInput[]
    skipDuplicates?: boolean
  }

  export type cinesCreateWithoutSalasInput = {
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
    empleados?: empleadosCreateNestedManyWithoutCinesInput
  }

  export type cinesUncheckedCreateWithoutSalasInput = {
    id_cine?: number
    nombre_cine: string
    direccion?: string | null
    telefono?: string | null
    facebook_url?: string | null
    instagram_url?: string | null
    tiktok_url?: string | null
    email?: string | null
    ubicacion_url?: string | null
    empleados?: empleadosUncheckedCreateNestedManyWithoutCinesInput
  }

  export type cinesCreateOrConnectWithoutSalasInput = {
    where: cinesWhereUniqueInput
    create: XOR<cinesCreateWithoutSalasInput, cinesUncheckedCreateWithoutSalasInput>
  }

  export type funcionesUpsertWithWhereUniqueWithoutSalasInput = {
    where: funcionesWhereUniqueInput
    update: XOR<funcionesUpdateWithoutSalasInput, funcionesUncheckedUpdateWithoutSalasInput>
    create: XOR<funcionesCreateWithoutSalasInput, funcionesUncheckedCreateWithoutSalasInput>
  }

  export type funcionesUpdateWithWhereUniqueWithoutSalasInput = {
    where: funcionesWhereUniqueInput
    data: XOR<funcionesUpdateWithoutSalasInput, funcionesUncheckedUpdateWithoutSalasInput>
  }

  export type funcionesUpdateManyWithWhereWithoutSalasInput = {
    where: funcionesScalarWhereInput
    data: XOR<funcionesUpdateManyMutationInput, funcionesUncheckedUpdateManyWithoutSalasInput>
  }

  export type cinesUpsertWithoutSalasInput = {
    update: XOR<cinesUpdateWithoutSalasInput, cinesUncheckedUpdateWithoutSalasInput>
    create: XOR<cinesCreateWithoutSalasInput, cinesUncheckedCreateWithoutSalasInput>
    where?: cinesWhereInput
  }

  export type cinesUpdateToOneWithWhereWithoutSalasInput = {
    where?: cinesWhereInput
    data: XOR<cinesUpdateWithoutSalasInput, cinesUncheckedUpdateWithoutSalasInput>
  }

  export type cinesUpdateWithoutSalasInput = {
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUpdateManyWithoutCinesNestedInput
  }

  export type cinesUncheckedUpdateWithoutSalasInput = {
    id_cine?: IntFieldUpdateOperationsInput | number
    nombre_cine?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_url?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_url?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok_url?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion_url?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUncheckedUpdateManyWithoutCinesNestedInput
  }

  export type planesCreateWithoutSuscripcionesInput = {
    nombre?: string | null
    precio?: Decimal | DecimalJsLike | number | string | null
    duracion_dias?: number | null
    descripcion?: string | null
  }

  export type planesUncheckedCreateWithoutSuscripcionesInput = {
    id_plan?: number
    nombre?: string | null
    precio?: Decimal | DecimalJsLike | number | string | null
    duracion_dias?: number | null
    descripcion?: string | null
  }

  export type planesCreateOrConnectWithoutSuscripcionesInput = {
    where: planesWhereUniqueInput
    create: XOR<planesCreateWithoutSuscripcionesInput, planesUncheckedCreateWithoutSuscripcionesInput>
  }

  export type usuariosCreateWithoutSuscripcionesInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutSuscripcionesInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    valoraciones?: valoracionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutSuscripcionesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutSuscripcionesInput, usuariosUncheckedCreateWithoutSuscripcionesInput>
  }

  export type planesUpsertWithoutSuscripcionesInput = {
    update: XOR<planesUpdateWithoutSuscripcionesInput, planesUncheckedUpdateWithoutSuscripcionesInput>
    create: XOR<planesCreateWithoutSuscripcionesInput, planesUncheckedCreateWithoutSuscripcionesInput>
    where?: planesWhereInput
  }

  export type planesUpdateToOneWithWhereWithoutSuscripcionesInput = {
    where?: planesWhereInput
    data: XOR<planesUpdateWithoutSuscripcionesInput, planesUncheckedUpdateWithoutSuscripcionesInput>
  }

  export type planesUpdateWithoutSuscripcionesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type planesUncheckedUpdateWithoutSuscripcionesInput = {
    id_plan?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    duracion_dias?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuariosUpsertWithoutSuscripcionesInput = {
    update: XOR<usuariosUpdateWithoutSuscripcionesInput, usuariosUncheckedUpdateWithoutSuscripcionesInput>
    create: XOR<usuariosCreateWithoutSuscripcionesInput, usuariosUncheckedCreateWithoutSuscripcionesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutSuscripcionesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutSuscripcionesInput, usuariosUncheckedUpdateWithoutSuscripcionesInput>
  }

  export type usuariosUpdateWithoutSuscripcionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutSuscripcionesInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type boletosCreateWithoutUsuariosInput = {
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    funciones: funcionesCreateNestedOneWithoutBoletosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutBoletosInput
  }

  export type boletosUncheckedCreateWithoutUsuariosInput = {
    id_boleto?: number
    id_funcion: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutBoletosInput
  }

  export type boletosCreateOrConnectWithoutUsuariosInput = {
    where: boletosWhereUniqueInput
    create: XOR<boletosCreateWithoutUsuariosInput, boletosUncheckedCreateWithoutUsuariosInput>
  }

  export type boletosCreateManyUsuariosInputEnvelope = {
    data: boletosCreateManyUsuariosInput | boletosCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type historial_reproduccionCreateWithoutUsuariosInput = {
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
    peliculas: peliculasCreateNestedOneWithoutHistorial_reproduccionInput
  }

  export type historial_reproduccionUncheckedCreateWithoutUsuariosInput = {
    id_pelicula: number
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
  }

  export type historial_reproduccionCreateOrConnectWithoutUsuariosInput = {
    where: historial_reproduccionWhereUniqueInput
    create: XOR<historial_reproduccionCreateWithoutUsuariosInput, historial_reproduccionUncheckedCreateWithoutUsuariosInput>
  }

  export type historial_reproduccionCreateManyUsuariosInputEnvelope = {
    data: historial_reproduccionCreateManyUsuariosInput | historial_reproduccionCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type intentos_loginCreateWithoutUsuariosInput = {
    exito?: boolean | null
    ip_origen?: string | null
    fecha?: Date | string | null
  }

  export type intentos_loginUncheckedCreateWithoutUsuariosInput = {
    id?: number
    exito?: boolean | null
    ip_origen?: string | null
    fecha?: Date | string | null
  }

  export type intentos_loginCreateOrConnectWithoutUsuariosInput = {
    where: intentos_loginWhereUniqueInput
    create: XOR<intentos_loginCreateWithoutUsuariosInput, intentos_loginUncheckedCreateWithoutUsuariosInput>
  }

  export type intentos_loginCreateManyUsuariosInputEnvelope = {
    data: intentos_loginCreateManyUsuariosInput | intentos_loginCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type logs_actividadCreateWithoutUsuariosInput = {
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    empleados?: empleadosCreateNestedOneWithoutLogs_actividadInput
    boletos?: boletosCreateNestedOneWithoutLogs_actividadInput
  }

  export type logs_actividadUncheckedCreateWithoutUsuariosInput = {
    id_log?: number
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_empleado?: number | null
    id_boleto?: number | null
  }

  export type logs_actividadCreateOrConnectWithoutUsuariosInput = {
    where: logs_actividadWhereUniqueInput
    create: XOR<logs_actividadCreateWithoutUsuariosInput, logs_actividadUncheckedCreateWithoutUsuariosInput>
  }

  export type logs_actividadCreateManyUsuariosInputEnvelope = {
    data: logs_actividadCreateManyUsuariosInput | logs_actividadCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type notificacionesCreateWithoutUsuariosInput = {
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    empleados?: empleadosCreateNestedOneWithoutNotificacionesInput
  }

  export type notificacionesUncheckedCreateWithoutUsuariosInput = {
    id_notificacion?: number
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    id_empleado?: number | null
  }

  export type notificacionesCreateOrConnectWithoutUsuariosInput = {
    where: notificacionesWhereUniqueInput
    create: XOR<notificacionesCreateWithoutUsuariosInput, notificacionesUncheckedCreateWithoutUsuariosInput>
  }

  export type notificacionesCreateManyUsuariosInputEnvelope = {
    data: notificacionesCreateManyUsuariosInput | notificacionesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type pagosCreateWithoutUsuariosInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
    metodos_pago: metodos_pagoCreateNestedOneWithoutPagosInput
  }

  export type pagosUncheckedCreateWithoutUsuariosInput = {
    id_pago?: number
    monto: Decimal | DecimalJsLike | number | string
    id_metodo: number
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
  }

  export type pagosCreateOrConnectWithoutUsuariosInput = {
    where: pagosWhereUniqueInput
    create: XOR<pagosCreateWithoutUsuariosInput, pagosUncheckedCreateWithoutUsuariosInput>
  }

  export type pagosCreateManyUsuariosInputEnvelope = {
    data: pagosCreateManyUsuariosInput | pagosCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type reportes_usuariosCreateWithoutUsuariosInput = {
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion?: string | null
    fecha_reporte?: Date | string | null
    estado?: $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosUncheckedCreateWithoutUsuariosInput = {
    id_reporte?: number
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion?: string | null
    fecha_reporte?: Date | string | null
    estado?: $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosCreateOrConnectWithoutUsuariosInput = {
    where: reportes_usuariosWhereUniqueInput
    create: XOR<reportes_usuariosCreateWithoutUsuariosInput, reportes_usuariosUncheckedCreateWithoutUsuariosInput>
  }

  export type reportes_usuariosCreateManyUsuariosInputEnvelope = {
    data: reportes_usuariosCreateManyUsuariosInput | reportes_usuariosCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type suscripcionesCreateWithoutUsuariosInput = {
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    planes?: planesCreateNestedOneWithoutSuscripcionesInput
  }

  export type suscripcionesUncheckedCreateWithoutUsuariosInput = {
    id_suscripcion?: number
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    id_plan?: number | null
  }

  export type suscripcionesCreateOrConnectWithoutUsuariosInput = {
    where: suscripcionesWhereUniqueInput
    create: XOR<suscripcionesCreateWithoutUsuariosInput, suscripcionesUncheckedCreateWithoutUsuariosInput>
  }

  export type suscripcionesCreateManyUsuariosInputEnvelope = {
    data: suscripcionesCreateManyUsuariosInput | suscripcionesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type valoracionesCreateWithoutUsuariosInput = {
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
    peliculas: peliculasCreateNestedOneWithoutValoracionesInput
  }

  export type valoracionesUncheckedCreateWithoutUsuariosInput = {
    id_valoracion?: number
    id_pelicula: number
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
  }

  export type valoracionesCreateOrConnectWithoutUsuariosInput = {
    where: valoracionesWhereUniqueInput
    create: XOR<valoracionesCreateWithoutUsuariosInput, valoracionesUncheckedCreateWithoutUsuariosInput>
  }

  export type valoracionesCreateManyUsuariosInputEnvelope = {
    data: valoracionesCreateManyUsuariosInput | valoracionesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type boletosUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: boletosWhereUniqueInput
    update: XOR<boletosUpdateWithoutUsuariosInput, boletosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<boletosCreateWithoutUsuariosInput, boletosUncheckedCreateWithoutUsuariosInput>
  }

  export type boletosUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: boletosWhereUniqueInput
    data: XOR<boletosUpdateWithoutUsuariosInput, boletosUncheckedUpdateWithoutUsuariosInput>
  }

  export type boletosUpdateManyWithWhereWithoutUsuariosInput = {
    where: boletosScalarWhereInput
    data: XOR<boletosUpdateManyMutationInput, boletosUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type historial_reproduccionUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: historial_reproduccionWhereUniqueInput
    update: XOR<historial_reproduccionUpdateWithoutUsuariosInput, historial_reproduccionUncheckedUpdateWithoutUsuariosInput>
    create: XOR<historial_reproduccionCreateWithoutUsuariosInput, historial_reproduccionUncheckedCreateWithoutUsuariosInput>
  }

  export type historial_reproduccionUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: historial_reproduccionWhereUniqueInput
    data: XOR<historial_reproduccionUpdateWithoutUsuariosInput, historial_reproduccionUncheckedUpdateWithoutUsuariosInput>
  }

  export type historial_reproduccionUpdateManyWithWhereWithoutUsuariosInput = {
    where: historial_reproduccionScalarWhereInput
    data: XOR<historial_reproduccionUpdateManyMutationInput, historial_reproduccionUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type intentos_loginUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: intentos_loginWhereUniqueInput
    update: XOR<intentos_loginUpdateWithoutUsuariosInput, intentos_loginUncheckedUpdateWithoutUsuariosInput>
    create: XOR<intentos_loginCreateWithoutUsuariosInput, intentos_loginUncheckedCreateWithoutUsuariosInput>
  }

  export type intentos_loginUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: intentos_loginWhereUniqueInput
    data: XOR<intentos_loginUpdateWithoutUsuariosInput, intentos_loginUncheckedUpdateWithoutUsuariosInput>
  }

  export type intentos_loginUpdateManyWithWhereWithoutUsuariosInput = {
    where: intentos_loginScalarWhereInput
    data: XOR<intentos_loginUpdateManyMutationInput, intentos_loginUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type intentos_loginScalarWhereInput = {
    AND?: intentos_loginScalarWhereInput | intentos_loginScalarWhereInput[]
    OR?: intentos_loginScalarWhereInput[]
    NOT?: intentos_loginScalarWhereInput | intentos_loginScalarWhereInput[]
    id?: IntFilter<"intentos_login"> | number
    id_usuario?: IntNullableFilter<"intentos_login"> | number | null
    exito?: BoolNullableFilter<"intentos_login"> | boolean | null
    ip_origen?: StringNullableFilter<"intentos_login"> | string | null
    fecha?: DateTimeNullableFilter<"intentos_login"> | Date | string | null
  }

  export type logs_actividadUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: logs_actividadWhereUniqueInput
    update: XOR<logs_actividadUpdateWithoutUsuariosInput, logs_actividadUncheckedUpdateWithoutUsuariosInput>
    create: XOR<logs_actividadCreateWithoutUsuariosInput, logs_actividadUncheckedCreateWithoutUsuariosInput>
  }

  export type logs_actividadUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: logs_actividadWhereUniqueInput
    data: XOR<logs_actividadUpdateWithoutUsuariosInput, logs_actividadUncheckedUpdateWithoutUsuariosInput>
  }

  export type logs_actividadUpdateManyWithWhereWithoutUsuariosInput = {
    where: logs_actividadScalarWhereInput
    data: XOR<logs_actividadUpdateManyMutationInput, logs_actividadUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type notificacionesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: notificacionesWhereUniqueInput
    update: XOR<notificacionesUpdateWithoutUsuariosInput, notificacionesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<notificacionesCreateWithoutUsuariosInput, notificacionesUncheckedCreateWithoutUsuariosInput>
  }

  export type notificacionesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: notificacionesWhereUniqueInput
    data: XOR<notificacionesUpdateWithoutUsuariosInput, notificacionesUncheckedUpdateWithoutUsuariosInput>
  }

  export type notificacionesUpdateManyWithWhereWithoutUsuariosInput = {
    where: notificacionesScalarWhereInput
    data: XOR<notificacionesUpdateManyMutationInput, notificacionesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type pagosUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: pagosWhereUniqueInput
    update: XOR<pagosUpdateWithoutUsuariosInput, pagosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<pagosCreateWithoutUsuariosInput, pagosUncheckedCreateWithoutUsuariosInput>
  }

  export type pagosUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: pagosWhereUniqueInput
    data: XOR<pagosUpdateWithoutUsuariosInput, pagosUncheckedUpdateWithoutUsuariosInput>
  }

  export type pagosUpdateManyWithWhereWithoutUsuariosInput = {
    where: pagosScalarWhereInput
    data: XOR<pagosUpdateManyMutationInput, pagosUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type reportes_usuariosUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: reportes_usuariosWhereUniqueInput
    update: XOR<reportes_usuariosUpdateWithoutUsuariosInput, reportes_usuariosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<reportes_usuariosCreateWithoutUsuariosInput, reportes_usuariosUncheckedCreateWithoutUsuariosInput>
  }

  export type reportes_usuariosUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: reportes_usuariosWhereUniqueInput
    data: XOR<reportes_usuariosUpdateWithoutUsuariosInput, reportes_usuariosUncheckedUpdateWithoutUsuariosInput>
  }

  export type reportes_usuariosUpdateManyWithWhereWithoutUsuariosInput = {
    where: reportes_usuariosScalarWhereInput
    data: XOR<reportes_usuariosUpdateManyMutationInput, reportes_usuariosUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type reportes_usuariosScalarWhereInput = {
    AND?: reportes_usuariosScalarWhereInput | reportes_usuariosScalarWhereInput[]
    OR?: reportes_usuariosScalarWhereInput[]
    NOT?: reportes_usuariosScalarWhereInput | reportes_usuariosScalarWhereInput[]
    id_reporte?: IntFilter<"reportes_usuarios"> | number
    id_usuario?: IntFilter<"reportes_usuarios"> | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: StringNullableFilter<"reportes_usuarios"> | string | null
    fecha_reporte?: DateTimeNullableFilter<"reportes_usuarios"> | Date | string | null
    estado?: Enumreportes_usuarios_estadoNullableFilter<"reportes_usuarios"> | $Enums.reportes_usuarios_estado | null
  }

  export type suscripcionesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: suscripcionesWhereUniqueInput
    update: XOR<suscripcionesUpdateWithoutUsuariosInput, suscripcionesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<suscripcionesCreateWithoutUsuariosInput, suscripcionesUncheckedCreateWithoutUsuariosInput>
  }

  export type suscripcionesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: suscripcionesWhereUniqueInput
    data: XOR<suscripcionesUpdateWithoutUsuariosInput, suscripcionesUncheckedUpdateWithoutUsuariosInput>
  }

  export type suscripcionesUpdateManyWithWhereWithoutUsuariosInput = {
    where: suscripcionesScalarWhereInput
    data: XOR<suscripcionesUpdateManyMutationInput, suscripcionesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type valoracionesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: valoracionesWhereUniqueInput
    update: XOR<valoracionesUpdateWithoutUsuariosInput, valoracionesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<valoracionesCreateWithoutUsuariosInput, valoracionesUncheckedCreateWithoutUsuariosInput>
  }

  export type valoracionesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: valoracionesWhereUniqueInput
    data: XOR<valoracionesUpdateWithoutUsuariosInput, valoracionesUncheckedUpdateWithoutUsuariosInput>
  }

  export type valoracionesUpdateManyWithWhereWithoutUsuariosInput = {
    where: valoracionesScalarWhereInput
    data: XOR<valoracionesUpdateManyMutationInput, valoracionesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type peliculasCreateWithoutValoracionesInput = {
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
    funciones?: funcionesCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutPeliculasInput
    clasificaciones?: clasificacionesCreateNestedOneWithoutPeliculasInput
    productoras?: productorasCreateNestedOneWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosCreateNestedManyWithoutPeliculasInput
    reparto?: repartoCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasUncheckedCreateWithoutValoracionesInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
    funciones?: funcionesUncheckedCreateNestedManyWithoutPeliculasInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_directores?: peliculas_directoresUncheckedCreateNestedManyWithoutPeliculasInput
    peliculas_generos?: peliculas_generosUncheckedCreateNestedManyWithoutPeliculasInput
    reparto?: repartoUncheckedCreateNestedManyWithoutPeliculasInput
  }

  export type peliculasCreateOrConnectWithoutValoracionesInput = {
    where: peliculasWhereUniqueInput
    create: XOR<peliculasCreateWithoutValoracionesInput, peliculasUncheckedCreateWithoutValoracionesInput>
  }

  export type usuariosCreateWithoutValoracionesInput = {
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesCreateNestedManyWithoutUsuariosInput
    pagos?: pagosCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutValoracionesInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    rol?: $Enums.usuarios_rol | null
    fecha_registro?: Date | string | null
    bloqueado_hasta?: Date | string | null
    foto_perfil?: string | null
    verificado?: boolean | null
    boletos?: boletosUncheckedCreateNestedManyWithoutUsuariosInput
    historial_reproduccion?: historial_reproduccionUncheckedCreateNestedManyWithoutUsuariosInput
    intentos_login?: intentos_loginUncheckedCreateNestedManyWithoutUsuariosInput
    logs_actividad?: logs_actividadUncheckedCreateNestedManyWithoutUsuariosInput
    notificaciones?: notificacionesUncheckedCreateNestedManyWithoutUsuariosInput
    pagos?: pagosUncheckedCreateNestedManyWithoutUsuariosInput
    reportes_usuarios?: reportes_usuariosUncheckedCreateNestedManyWithoutUsuariosInput
    suscripciones?: suscripcionesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutValoracionesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutValoracionesInput, usuariosUncheckedCreateWithoutValoracionesInput>
  }

  export type peliculasUpsertWithoutValoracionesInput = {
    update: XOR<peliculasUpdateWithoutValoracionesInput, peliculasUncheckedUpdateWithoutValoracionesInput>
    create: XOR<peliculasCreateWithoutValoracionesInput, peliculasUncheckedCreateWithoutValoracionesInput>
    where?: peliculasWhereInput
  }

  export type peliculasUpdateToOneWithWhereWithoutValoracionesInput = {
    where?: peliculasWhereInput
    data: XOR<peliculasUpdateWithoutValoracionesInput, peliculasUncheckedUpdateWithoutValoracionesInput>
  }

  export type peliculasUpdateWithoutValoracionesInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutValoracionesInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type usuariosUpsertWithoutValoracionesInput = {
    update: XOR<usuariosUpdateWithoutValoracionesInput, usuariosUncheckedUpdateWithoutValoracionesInput>
    create: XOR<usuariosCreateWithoutValoracionesInput, usuariosUncheckedCreateWithoutValoracionesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutValoracionesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutValoracionesInput, usuariosUncheckedUpdateWithoutValoracionesInput>
  }

  export type usuariosUpdateWithoutValoracionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutValoracionesInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableEnumusuarios_rolFieldUpdateOperationsInput | $Enums.usuarios_rol | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bloqueado_hasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    verificado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    boletos?: boletosUncheckedUpdateManyWithoutUsuariosNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutUsuariosNestedInput
    intentos_login?: intentos_loginUncheckedUpdateManyWithoutUsuariosNestedInput
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutUsuariosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutUsuariosNestedInput
    pagos?: pagosUncheckedUpdateManyWithoutUsuariosNestedInput
    reportes_usuarios?: reportes_usuariosUncheckedUpdateManyWithoutUsuariosNestedInput
    suscripciones?: suscripcionesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type repartoCreateManyActoresInput = {
    id_reparto?: number
    id_pelicula: number
    rol?: string | null
  }

  export type repartoUpdateWithoutActoresInput = {
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    peliculas?: peliculasUpdateOneRequiredWithoutRepartoNestedInput
  }

  export type repartoUncheckedUpdateWithoutActoresInput = {
    id_reparto?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type repartoUncheckedUpdateManyWithoutActoresInput = {
    id_reparto?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logs_actividadCreateManyBoletosInput = {
    id_log?: number
    id_usuario?: number | null
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_empleado?: number | null
  }

  export type logs_actividadUpdateWithoutBoletosInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUpdateOneWithoutLogs_actividadNestedInput
    usuarios?: usuariosUpdateOneWithoutLogs_actividadNestedInput
  }

  export type logs_actividadUncheckedUpdateWithoutBoletosInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type logs_actividadUncheckedUpdateManyWithoutBoletosInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type funcionesCreateManyCartelerasInput = {
    id_funcion?: number
    id_sala: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
  }

  export type funcionesUpdateWithoutCartelerasInput = {
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUpdateManyWithoutFuncionesNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutFuncionesNestedInput
    salas?: salasUpdateOneRequiredWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateWithoutCartelerasInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedUpdateManyWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateManyWithoutCartelerasInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type empleadosCreateManyCinesInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_rol?: number | null
    usuario_sistema?: boolean | null
  }

  export type salasCreateManyCinesInput = {
    id_sala?: number
    nombre_sala?: string | null
    capacidad?: number | null
  }

  export type empleadosUpdateWithoutCinesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    roles_empleados?: roles_empleadosUpdateOneWithoutEmpleadosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateWithoutCinesInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateManyWithoutCinesInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type salasUpdateWithoutCinesInput = {
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateWithoutCinesInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateManyWithoutCinesInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    nombre_sala?: NullableStringFieldUpdateOperationsInput | string | null
    capacidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type peliculasCreateManyClasificacionesInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    id_productora?: number | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    calificacion_promedio?: number | null
  }

  export type peliculasUpdateWithoutClasificacionesInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    productoras?: productorasUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutClasificacionesInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateManyWithoutClasificacionesInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_productora?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type peliculas_directoresCreateManyDirectoresInput = {
    id_pelicula: number
  }

  export type peliculas_directoresUpdateWithoutDirectoresInput = {
    peliculas?: peliculasUpdateOneRequiredWithoutPeliculas_directoresNestedInput
  }

  export type peliculas_directoresUncheckedUpdateWithoutDirectoresInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_directoresUncheckedUpdateManyWithoutDirectoresInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
  }

  export type logs_actividadCreateManyEmpleadosInput = {
    id_log?: number
    id_usuario?: number | null
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_boleto?: number | null
  }

  export type notificacionesCreateManyEmpleadosInput = {
    id_notificacion?: number
    id_usuario: number
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
  }

  export type logs_actividadUpdateWithoutEmpleadosInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: usuariosUpdateOneWithoutLogs_actividadNestedInput
    boletos?: boletosUpdateOneWithoutLogs_actividadNestedInput
  }

  export type logs_actividadUncheckedUpdateWithoutEmpleadosInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_boleto?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type logs_actividadUncheckedUpdateManyWithoutEmpleadosInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_boleto?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notificacionesUpdateWithoutEmpleadosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarios?: usuariosUpdateOneRequiredWithoutNotificacionesNestedInput
  }

  export type notificacionesUncheckedUpdateWithoutEmpleadosInput = {
    id_notificacion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type notificacionesUncheckedUpdateManyWithoutEmpleadosInput = {
    id_notificacion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type boletosCreateManyFuncionesInput = {
    id_boleto?: number
    id_usuario: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
  }

  export type boletosUpdateWithoutFuncionesInput = {
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    usuarios?: usuariosUpdateOneRequiredWithoutBoletosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutBoletosNestedInput
  }

  export type boletosUncheckedUpdateWithoutFuncionesInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutBoletosNestedInput
  }

  export type boletosUncheckedUpdateManyWithoutFuncionesInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
  }

  export type peliculas_generosCreateManyGenerosInput = {
    id_pelicula: number
  }

  export type peliculas_generosUpdateWithoutGenerosInput = {
    peliculas?: peliculasUpdateOneRequiredWithoutPeliculas_generosNestedInput
  }

  export type peliculas_generosUncheckedUpdateWithoutGenerosInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_generosUncheckedUpdateManyWithoutGenerosInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
  }

  export type pagosCreateManyMetodos_pagoInput = {
    id_pago?: number
    id_usuario: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
  }

  export type pagosUpdateWithoutMetodos_pagoInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
    usuarios?: usuariosUpdateOneRequiredWithoutPagosNestedInput
  }

  export type pagosUncheckedUpdateWithoutMetodos_pagoInput = {
    id_pago?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type pagosUncheckedUpdateManyWithoutMetodos_pagoInput = {
    id_pago?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type funcionesCreateManyPeliculasInput = {
    id_funcion?: number
    id_cartelera: number
    id_sala: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
  }

  export type historial_reproduccionCreateManyPeliculasInput = {
    id_usuario: number
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
  }

  export type peliculas_directoresCreateManyPeliculasInput = {
    id_director: number
  }

  export type peliculas_generosCreateManyPeliculasInput = {
    id_genero: number
  }

  export type repartoCreateManyPeliculasInput = {
    id_reparto?: number
    id_actor: number
    rol?: string | null
  }

  export type valoracionesCreateManyPeliculasInput = {
    id_valoracion?: number
    id_usuario: number
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
  }

  export type funcionesUpdateWithoutPeliculasInput = {
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUpdateManyWithoutFuncionesNestedInput
    carteleras?: cartelerasUpdateOneRequiredWithoutFuncionesNestedInput
    salas?: salasUpdateOneRequiredWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateWithoutPeliculasInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedUpdateManyWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateManyWithoutPeliculasInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type historial_reproduccionUpdateWithoutPeliculasInput = {
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
    usuarios?: usuariosUpdateOneRequiredWithoutHistorial_reproduccionNestedInput
  }

  export type historial_reproduccionUncheckedUpdateWithoutPeliculasInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historial_reproduccionUncheckedUpdateManyWithoutPeliculasInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type peliculas_directoresUpdateWithoutPeliculasInput = {
    directores?: directoresUpdateOneRequiredWithoutPeliculas_directoresNestedInput
  }

  export type peliculas_directoresUncheckedUpdateWithoutPeliculasInput = {
    id_director?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_directoresUncheckedUpdateManyWithoutPeliculasInput = {
    id_director?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_generosUpdateWithoutPeliculasInput = {
    generos?: generosUpdateOneRequiredWithoutPeliculas_generosNestedInput
  }

  export type peliculas_generosUncheckedUpdateWithoutPeliculasInput = {
    id_genero?: IntFieldUpdateOperationsInput | number
  }

  export type peliculas_generosUncheckedUpdateManyWithoutPeliculasInput = {
    id_genero?: IntFieldUpdateOperationsInput | number
  }

  export type repartoUpdateWithoutPeliculasInput = {
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    actores?: actoresUpdateOneRequiredWithoutRepartoNestedInput
  }

  export type repartoUncheckedUpdateWithoutPeliculasInput = {
    id_reparto?: IntFieldUpdateOperationsInput | number
    id_actor?: IntFieldUpdateOperationsInput | number
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type repartoUncheckedUpdateManyWithoutPeliculasInput = {
    id_reparto?: IntFieldUpdateOperationsInput | number
    id_actor?: IntFieldUpdateOperationsInput | number
    rol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type valoracionesUpdateWithoutPeliculasInput = {
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneRequiredWithoutValoracionesNestedInput
  }

  export type valoracionesUncheckedUpdateWithoutPeliculasInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type valoracionesUncheckedUpdateManyWithoutPeliculasInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type suscripcionesCreateManyPlanesInput = {
    id_suscripcion?: number
    id_usuario: number
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
  }

  export type suscripcionesUpdateWithoutPlanesInput = {
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    usuarios?: usuariosUpdateOneRequiredWithoutSuscripcionesNestedInput
  }

  export type suscripcionesUncheckedUpdateWithoutPlanesInput = {
    id_suscripcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
  }

  export type suscripcionesUncheckedUpdateManyWithoutPlanesInput = {
    id_suscripcion?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
  }

  export type peliculasCreateManyProductorasInput = {
    id_pelicula?: number
    titulo: string
    sinopsis?: string | null
    duracion?: number | null
    fecha_lanzamiento?: Date | string | null
    tipo_contenido?: $Enums.peliculas_tipo_contenido | null
    imagen_portada?: string | null
    url_video?: string | null
    id_clasificacion?: number | null
    calificacion_promedio?: number | null
  }

  export type peliculasUpdateWithoutProductorasInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUpdateManyWithoutPeliculasNestedInput
    clasificaciones?: clasificacionesUpdateOneWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateWithoutProductorasInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
    funciones?: funcionesUncheckedUpdateManyWithoutPeliculasNestedInput
    historial_reproduccion?: historial_reproduccionUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_directores?: peliculas_directoresUncheckedUpdateManyWithoutPeliculasNestedInput
    peliculas_generos?: peliculas_generosUncheckedUpdateManyWithoutPeliculasNestedInput
    reparto?: repartoUncheckedUpdateManyWithoutPeliculasNestedInput
    valoraciones?: valoracionesUncheckedUpdateManyWithoutPeliculasNestedInput
  }

  export type peliculasUncheckedUpdateManyWithoutProductorasInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    sinopsis?: NullableStringFieldUpdateOperationsInput | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_lanzamiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_contenido?: NullableEnumpeliculas_tipo_contenidoFieldUpdateOperationsInput | $Enums.peliculas_tipo_contenido | null
    imagen_portada?: NullableStringFieldUpdateOperationsInput | string | null
    url_video?: NullableStringFieldUpdateOperationsInput | string | null
    id_clasificacion?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion_promedio?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type empleadosCreateManyRoles_empleadosInput = {
    id_empleado?: number
    nombre?: string | null
    apellido?: string | null
    ci?: string | null
    correo?: string | null
    telefono?: string | null
    fecha_contrato?: Date | string | null
    id_cine?: number | null
    usuario_sistema?: boolean | null
  }

  export type empleadosUpdateWithoutRoles_empleadosInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cines?: cinesUpdateOneWithoutEmpleadosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateWithoutRoles_empleadosInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cine?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutEmpleadosNestedInput
    notificaciones?: notificacionesUncheckedUpdateManyWithoutEmpleadosNestedInput
  }

  export type empleadosUncheckedUpdateManyWithoutRoles_empleadosInput = {
    id_empleado?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    ci?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_contrato?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cine?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_sistema?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type funcionesCreateManySalasInput = {
    id_funcion?: number
    id_cartelera: number
    id_pelicula: number
    fecha_hora_inicio?: Date | string | null
    fecha_hora_fin?: Date | string | null
    precio_boleto?: Decimal | DecimalJsLike | number | string | null
  }

  export type funcionesUpdateWithoutSalasInput = {
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUpdateManyWithoutFuncionesNestedInput
    carteleras?: cartelerasUpdateOneRequiredWithoutFuncionesNestedInput
    peliculas?: peliculasUpdateOneRequiredWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateWithoutSalasInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    boletos?: boletosUncheckedUpdateManyWithoutFuncionesNestedInput
  }

  export type funcionesUncheckedUpdateManyWithoutSalasInput = {
    id_funcion?: IntFieldUpdateOperationsInput | number
    id_cartelera?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_hora_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_hora_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_boleto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type boletosCreateManyUsuariosInput = {
    id_boleto?: number
    id_funcion: number
    asiento?: string | null
    estado?: $Enums.boletos_estado | null
  }

  export type historial_reproduccionCreateManyUsuariosInput = {
    id_pelicula: number
    fecha_visualizacion?: Date | string | null
    progreso_visto_porcentaje?: number | null
  }

  export type intentos_loginCreateManyUsuariosInput = {
    id?: number
    exito?: boolean | null
    ip_origen?: string | null
    fecha?: Date | string | null
  }

  export type logs_actividadCreateManyUsuariosInput = {
    id_log?: number
    accion?: string | null
    fecha_hora?: Date | string | null
    detalle?: string | null
    id_empleado?: number | null
    id_boleto?: number | null
  }

  export type notificacionesCreateManyUsuariosInput = {
    id_notificacion?: number
    titulo: string
    mensaje?: string | null
    fecha_envio?: Date | string | null
    leido?: boolean | null
    id_empleado?: number | null
  }

  export type pagosCreateManyUsuariosInput = {
    id_pago?: number
    monto: Decimal | DecimalJsLike | number | string
    id_metodo: number
    fecha_pago?: Date | string | null
    estado?: $Enums.pagos_estado | null
  }

  export type reportes_usuariosCreateManyUsuariosInput = {
    id_reporte?: number
    tipo_reporte: $Enums.reportes_usuarios_tipo_reporte
    descripcion?: string | null
    fecha_reporte?: Date | string | null
    estado?: $Enums.reportes_usuarios_estado | null
  }

  export type suscripcionesCreateManyUsuariosInput = {
    id_suscripcion?: number
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    estado?: $Enums.suscripciones_estado | null
    id_plan?: number | null
  }

  export type valoracionesCreateManyUsuariosInput = {
    id_valoracion?: number
    id_pelicula: number
    puntaje?: number | null
    comentario?: string | null
    fecha_valoracion?: Date | string | null
  }

  export type boletosUpdateWithoutUsuariosInput = {
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    funciones?: funcionesUpdateOneRequiredWithoutBoletosNestedInput
    logs_actividad?: logs_actividadUpdateManyWithoutBoletosNestedInput
  }

  export type boletosUncheckedUpdateWithoutUsuariosInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_funcion?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
    logs_actividad?: logs_actividadUncheckedUpdateManyWithoutBoletosNestedInput
  }

  export type boletosUncheckedUpdateManyWithoutUsuariosInput = {
    id_boleto?: IntFieldUpdateOperationsInput | number
    id_funcion?: IntFieldUpdateOperationsInput | number
    asiento?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableEnumboletos_estadoFieldUpdateOperationsInput | $Enums.boletos_estado | null
  }

  export type historial_reproduccionUpdateWithoutUsuariosInput = {
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
    peliculas?: peliculasUpdateOneRequiredWithoutHistorial_reproduccionNestedInput
  }

  export type historial_reproduccionUncheckedUpdateWithoutUsuariosInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historial_reproduccionUncheckedUpdateManyWithoutUsuariosInput = {
    id_pelicula?: IntFieldUpdateOperationsInput | number
    fecha_visualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    progreso_visto_porcentaje?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type intentos_loginUpdateWithoutUsuariosInput = {
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type intentos_loginUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type intentos_loginUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    exito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ip_origen?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type logs_actividadUpdateWithoutUsuariosInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    empleados?: empleadosUpdateOneWithoutLogs_actividadNestedInput
    boletos?: boletosUpdateOneWithoutLogs_actividadNestedInput
  }

  export type logs_actividadUncheckedUpdateWithoutUsuariosInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
    id_boleto?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type logs_actividadUncheckedUpdateManyWithoutUsuariosInput = {
    id_log?: IntFieldUpdateOperationsInput | number
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle?: NullableStringFieldUpdateOperationsInput | string | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
    id_boleto?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notificacionesUpdateWithoutUsuariosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    empleados?: empleadosUpdateOneWithoutNotificacionesNestedInput
  }

  export type notificacionesUncheckedUpdateWithoutUsuariosInput = {
    id_notificacion?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notificacionesUncheckedUpdateManyWithoutUsuariosInput = {
    id_notificacion?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_envio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leido?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_empleado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pagosUpdateWithoutUsuariosInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
    metodos_pago?: metodos_pagoUpdateOneRequiredWithoutPagosNestedInput
  }

  export type pagosUncheckedUpdateWithoutUsuariosInput = {
    id_pago?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFieldUpdateOperationsInput | number
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type pagosUncheckedUpdateManyWithoutUsuariosInput = {
    id_pago?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_metodo?: IntFieldUpdateOperationsInput | number
    fecha_pago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumpagos_estadoFieldUpdateOperationsInput | $Enums.pagos_estado | null
  }

  export type reportes_usuariosUpdateWithoutUsuariosInput = {
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosUncheckedUpdateWithoutUsuariosInput = {
    id_reporte?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
  }

  export type reportes_usuariosUncheckedUpdateManyWithoutUsuariosInput = {
    id_reporte?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: Enumreportes_usuarios_tipo_reporteFieldUpdateOperationsInput | $Enums.reportes_usuarios_tipo_reporte
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_reporte?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumreportes_usuarios_estadoFieldUpdateOperationsInput | $Enums.reportes_usuarios_estado | null
  }

  export type suscripcionesUpdateWithoutUsuariosInput = {
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    planes?: planesUpdateOneWithoutSuscripcionesNestedInput
  }

  export type suscripcionesUncheckedUpdateWithoutUsuariosInput = {
    id_suscripcion?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    id_plan?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type suscripcionesUncheckedUpdateManyWithoutUsuariosInput = {
    id_suscripcion?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumsuscripciones_estadoFieldUpdateOperationsInput | $Enums.suscripciones_estado | null
    id_plan?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type valoracionesUpdateWithoutUsuariosInput = {
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    peliculas?: peliculasUpdateOneRequiredWithoutValoracionesNestedInput
  }

  export type valoracionesUncheckedUpdateWithoutUsuariosInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type valoracionesUncheckedUpdateManyWithoutUsuariosInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    id_pelicula?: IntFieldUpdateOperationsInput | number
    puntaje?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_valoracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}